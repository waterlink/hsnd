if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2913";
cljs.core._STAR_unchecked_if_STAR_ = false;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__10294__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__10293 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__10293) : cljs.core.into_array.call(null, G__10293);
      }());
    };
    var G__10294 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__10295__i = 0, G__10295__a = new Array(arguments.length - 0);
        while (G__10295__i < G__10295__a.length) {
          G__10295__a[G__10295__i] = arguments[G__10295__i + 0];
          ++G__10295__i;
        }
        args = new cljs.core.IndexedSeq(G__10295__a, 0);
      }
      return G__10294__delegate.call(this, args);
    };
    G__10294.cljs$lang$maxFixedArity = 0;
    G__10294.cljs$lang$applyTo = function(arglist__10296) {
      var args = cljs.core.seq(arglist__10296);
      return G__10294__delegate(args);
    };
    G__10294.cljs$core$IFn$_invoke$arity$variadic = G__10294__delegate;
    return G__10294;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var G__10298 = x;
  return goog.isString(G__10298);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__10300 = x__$1;
    return goog.typeOf(G__10300);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__8771__auto__ = ty;
    if (cljs.core.truth_(and__8771__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__8771__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__10302 = obj;
    return goog.typeOf(G__10302);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.importScript_(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__10304 = Symbol;
  return goog.typeOf(G__10304);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__9670__auto___10306 = len;
  var i_10307 = 0;
  while (true) {
    if (i_10307 < n__9670__auto___10306) {
      new_arr[i_10307] = arr[i_10307];
      var G__10308 = i_10307 + 1;
      i_10307 = G__10308;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__10309 = i + 1;
      i = G__10309;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__10318__delegate = function(array, i, idxs) {
      var G__10315 = aget;
      var G__10316 = aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__10317 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__10315, G__10316, G__10317) : cljs.core.apply.call(null, G__10315, G__10316, G__10317);
    };
    var G__10318 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__10319__i = 0, G__10319__a = new Array(arguments.length - 2);
        while (G__10319__i < G__10319__a.length) {
          G__10319__a[G__10319__i] = arguments[G__10319__i + 2];
          ++G__10319__i;
        }
        idxs = new cljs.core.IndexedSeq(G__10319__a, 0);
      }
      return G__10318__delegate.call(this, array, i, idxs);
    };
    G__10318.cljs$lang$maxFixedArity = 2;
    G__10318.cljs$lang$applyTo = function(arglist__10320) {
      var array = cljs.core.first(arglist__10320);
      arglist__10320 = cljs.core.next(arglist__10320);
      var i = cljs.core.first(arglist__10320);
      var idxs = cljs.core.rest(arglist__10320);
      return G__10318__delegate(array, i, idxs);
    };
    G__10318.cljs$core$IFn$_invoke$arity$variadic = G__10318__delegate;
    return G__10318;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        var G__10321 = null;
        if (arguments.length > 2) {
          var G__10322__i = 0, G__10322__a = new Array(arguments.length - 2);
          while (G__10322__i < G__10322__a.length) {
            G__10322__a[G__10322__i] = arguments[G__10322__i + 2];
            ++G__10322__i;
          }
          G__10321 = new cljs.core.IndexedSeq(G__10322__a, 0);
        }
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__10321);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__10331__delegate = function(array, idx, idx2, idxv) {
      var G__10327 = aset;
      var G__10328 = array[idx];
      var G__10329 = idx2;
      var G__10330 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__10327, G__10328, G__10329, G__10330) : cljs.core.apply.call(null, G__10327, G__10328, G__10329, G__10330);
    };
    var G__10331 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__10332__i = 0, G__10332__a = new Array(arguments.length - 3);
        while (G__10332__i < G__10332__a.length) {
          G__10332__a[G__10332__i] = arguments[G__10332__i + 3];
          ++G__10332__i;
        }
        idxv = new cljs.core.IndexedSeq(G__10332__a, 0);
      }
      return G__10331__delegate.call(this, array, idx, idx2, idxv);
    };
    G__10331.cljs$lang$maxFixedArity = 3;
    G__10331.cljs$lang$applyTo = function(arglist__10333) {
      var array = cljs.core.first(arglist__10333);
      arglist__10333 = cljs.core.next(arglist__10333);
      var idx = cljs.core.first(arglist__10333);
      arglist__10333 = cljs.core.next(arglist__10333);
      var idx2 = cljs.core.first(arglist__10333);
      var idxv = cljs.core.rest(arglist__10333);
      return G__10331__delegate(array, idx, idx2, idxv);
    };
    G__10331.cljs$core$IFn$_invoke$arity$variadic = G__10331__delegate;
    return G__10331;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        var G__10334 = null;
        if (arguments.length > 3) {
          var G__10335__i = 0, G__10335__a = new Array(arguments.length - 3);
          while (G__10335__i < G__10335__a.length) {
            G__10335__a[G__10335__i] = arguments[G__10335__i + 3];
            ++G__10335__i;
          }
          G__10334 = new cljs.core.IndexedSeq(G__10335__a, 0);
        }
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__10334);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    var G__10341 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__10342 = [];
    var G__10343 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__10341, G__10342, G__10343) : cljs.core.reduce.call(null, G__10341, G__10342, G__10343);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__10344__i = 0, G__10344__a = new Array(arguments.length - 2);
      while (G__10344__i < G__10344__a.length) {
        G__10344__a[G__10344__i] = arguments[G__10344__i + 2];
        ++G__10344__i;
      }
      args = new cljs.core.IndexedSeq(G__10344__a, 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__10345) {
    var obj = cljs.core.first(arglist__10345);
    arglist__10345 = cljs.core.next(arglist__10345);
    var s = cljs.core.first(arglist__10345);
    var args = cljs.core.rest(arglist__10345);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj10347 = {};
  return obj10347;
}();
cljs.core.IFn = function() {
  var obj10349 = {};
  return obj10349;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10395 = x__9427__auto__;
          return goog.typeOf(G__10395);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10397 = x__9427__auto__;
          return goog.typeOf(G__10397);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10399 = x__9427__auto__;
          return goog.typeOf(G__10399);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10401 = x__9427__auto__;
          return goog.typeOf(G__10401);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10403 = x__9427__auto__;
          return goog.typeOf(G__10403);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10405 = x__9427__auto__;
          return goog.typeOf(G__10405);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10407 = x__9427__auto__;
          return goog.typeOf(G__10407);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10409 = x__9427__auto__;
          return goog.typeOf(G__10409);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10411 = x__9427__auto__;
          return goog.typeOf(G__10411);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10413 = x__9427__auto__;
          return goog.typeOf(G__10413);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10415 = x__9427__auto__;
          return goog.typeOf(G__10415);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10417 = x__9427__auto__;
          return goog.typeOf(G__10417);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10419 = x__9427__auto__;
          return goog.typeOf(G__10419);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10421 = x__9427__auto__;
          return goog.typeOf(G__10421);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10423 = x__9427__auto__;
          return goog.typeOf(G__10423);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10425 = x__9427__auto__;
          return goog.typeOf(G__10425);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10427 = x__9427__auto__;
          return goog.typeOf(G__10427);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10429 = x__9427__auto__;
          return goog.typeOf(G__10429);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10431 = x__9427__auto__;
          return goog.typeOf(G__10431);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10433 = x__9427__auto__;
          return goog.typeOf(G__10433);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10435 = x__9427__auto__;
          return goog.typeOf(G__10435);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__8771__auto__ = this$;
      if (and__8771__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__9427__auto__ = this$ == null ? null : this$;
      return function() {
        var or__8783__auto__ = cljs.core._invoke[function() {
          var G__10437 = x__9427__auto__;
          return goog.typeOf(G__10437);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._invoke["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj10439 = {};
  return obj10439;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__8771__auto__ = value;
    if (and__8771__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__9427__auto__ = value == null ? null : value;
    return function() {
      var or__8783__auto__ = cljs.core._clone[function() {
        var G__10443 = x__9427__auto__;
        return goog.typeOf(G__10443);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._clone["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj10445 = {};
  return obj10445;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._count[function() {
        var G__10449 = x__9427__auto__;
        return goog.typeOf(G__10449);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._count["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj10451 = {};
  return obj10451;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._empty[function() {
        var G__10455 = x__9427__auto__;
        return goog.typeOf(G__10455);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._empty["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj10457 = {};
  return obj10457;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._conj[function() {
        var G__10461 = x__9427__auto__;
        return goog.typeOf(G__10461);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._conj["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj10463 = {};
  return obj10463;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__8771__auto__ = coll;
      if (and__8771__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__9427__auto__ = coll == null ? null : coll;
      return function() {
        var or__8783__auto__ = cljs.core._nth[function() {
          var G__10469 = x__9427__auto__;
          return goog.typeOf(G__10469);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._nth["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__8771__auto__ = coll;
      if (and__8771__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__9427__auto__ = coll == null ? null : coll;
      return function() {
        var or__8783__auto__ = cljs.core._nth[function() {
          var G__10471 = x__9427__auto__;
          return goog.typeOf(G__10471);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._nth["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj10473 = {};
  return obj10473;
}();
cljs.core.ISeq = function() {
  var obj10475 = {};
  return obj10475;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._first[function() {
        var G__10479 = x__9427__auto__;
        return goog.typeOf(G__10479);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._first["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._rest[function() {
        var G__10483 = x__9427__auto__;
        return goog.typeOf(G__10483);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._rest["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj10485 = {};
  return obj10485;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._next[function() {
        var G__10489 = x__9427__auto__;
        return goog.typeOf(G__10489);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._next["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj10491 = {};
  return obj10491;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__8771__auto__ = o;
      if (and__8771__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__9427__auto__ = o == null ? null : o;
      return function() {
        var or__8783__auto__ = cljs.core._lookup[function() {
          var G__10497 = x__9427__auto__;
          return goog.typeOf(G__10497);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._lookup["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__8771__auto__ = o;
      if (and__8771__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__9427__auto__ = o == null ? null : o;
      return function() {
        var or__8783__auto__ = cljs.core._lookup[function() {
          var G__10499 = x__9427__auto__;
          return goog.typeOf(G__10499);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._lookup["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj10501 = {};
  return obj10501;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__10505 = x__9427__auto__;
        return goog.typeOf(G__10505);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._assoc[function() {
        var G__10509 = x__9427__auto__;
        return goog.typeOf(G__10509);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._assoc["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj10511 = {};
  return obj10511;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._dissoc[function() {
        var G__10515 = x__9427__auto__;
        return goog.typeOf(G__10515);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._dissoc["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj10517 = {};
  return obj10517;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._key[function() {
        var G__10521 = x__9427__auto__;
        return goog.typeOf(G__10521);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._key["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._val[function() {
        var G__10525 = x__9427__auto__;
        return goog.typeOf(G__10525);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._val["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj10527 = {};
  return obj10527;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._disjoin[function() {
        var G__10531 = x__9427__auto__;
        return goog.typeOf(G__10531);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._disjoin["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj10533 = {};
  return obj10533;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._peek[function() {
        var G__10537 = x__9427__auto__;
        return goog.typeOf(G__10537);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._peek["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._pop[function() {
        var G__10541 = x__9427__auto__;
        return goog.typeOf(G__10541);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._pop["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj10543 = {};
  return obj10543;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._assoc_n[function() {
        var G__10547 = x__9427__auto__;
        return goog.typeOf(G__10547);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._assoc_n["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj10549 = {};
  return obj10549;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__8771__auto__ = o;
    if (and__8771__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__9427__auto__ = o == null ? null : o;
    return function() {
      var or__8783__auto__ = cljs.core._deref[function() {
        var G__10553 = x__9427__auto__;
        return goog.typeOf(G__10553);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._deref["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj10555 = {};
  return obj10555;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__8771__auto__ = o;
    if (and__8771__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__9427__auto__ = o == null ? null : o;
    return function() {
      var or__8783__auto__ = cljs.core._deref_with_timeout[function() {
        var G__10559 = x__9427__auto__;
        return goog.typeOf(G__10559);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj10561 = {};
  return obj10561;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__8771__auto__ = o;
    if (and__8771__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__9427__auto__ = o == null ? null : o;
    return function() {
      var or__8783__auto__ = cljs.core._meta[function() {
        var G__10565 = x__9427__auto__;
        return goog.typeOf(G__10565);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._meta["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj10567 = {};
  return obj10567;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__8771__auto__ = o;
    if (and__8771__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__9427__auto__ = o == null ? null : o;
    return function() {
      var or__8783__auto__ = cljs.core._with_meta[function() {
        var G__10571 = x__9427__auto__;
        return goog.typeOf(G__10571);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._with_meta["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj10573 = {};
  return obj10573;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__8771__auto__ = coll;
      if (and__8771__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__9427__auto__ = coll == null ? null : coll;
      return function() {
        var or__8783__auto__ = cljs.core._reduce[function() {
          var G__10579 = x__9427__auto__;
          return goog.typeOf(G__10579);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._reduce["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__8771__auto__ = coll;
      if (and__8771__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__9427__auto__ = coll == null ? null : coll;
      return function() {
        var or__8783__auto__ = cljs.core._reduce[function() {
          var G__10581 = x__9427__auto__;
          return goog.typeOf(G__10581);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._reduce["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj10583 = {};
  return obj10583;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._kv_reduce[function() {
        var G__10587 = x__9427__auto__;
        return goog.typeOf(G__10587);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj10589 = {};
  return obj10589;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__8771__auto__ = o;
    if (and__8771__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__9427__auto__ = o == null ? null : o;
    return function() {
      var or__8783__auto__ = cljs.core._equiv[function() {
        var G__10593 = x__9427__auto__;
        return goog.typeOf(G__10593);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._equiv["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj10595 = {};
  return obj10595;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__8771__auto__ = o;
    if (and__8771__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__9427__auto__ = o == null ? null : o;
    return function() {
      var or__8783__auto__ = cljs.core._hash[function() {
        var G__10599 = x__9427__auto__;
        return goog.typeOf(G__10599);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._hash["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj10601 = {};
  return obj10601;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__8771__auto__ = o;
    if (and__8771__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__9427__auto__ = o == null ? null : o;
    return function() {
      var or__8783__auto__ = cljs.core._seq[function() {
        var G__10605 = x__9427__auto__;
        return goog.typeOf(G__10605);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._seq["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj10607 = {};
  return obj10607;
}();
cljs.core.IList = function() {
  var obj10609 = {};
  return obj10609;
}();
cljs.core.IRecord = function() {
  var obj10611 = {};
  return obj10611;
}();
cljs.core.IReversible = function() {
  var obj10613 = {};
  return obj10613;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._rseq[function() {
        var G__10617 = x__9427__auto__;
        return goog.typeOf(G__10617);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._rseq["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj10619 = {};
  return obj10619;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._sorted_seq[function() {
        var G__10623 = x__9427__auto__;
        return goog.typeOf(G__10623);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._sorted_seq_from[function() {
        var G__10627 = x__9427__auto__;
        return goog.typeOf(G__10627);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._entry_key[function() {
        var G__10631 = x__9427__auto__;
        return goog.typeOf(G__10631);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._entry_key["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._comparator[function() {
        var G__10635 = x__9427__auto__;
        return goog.typeOf(G__10635);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._comparator["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj10637 = {};
  return obj10637;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__8771__auto__ = writer;
    if (and__8771__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__9427__auto__ = writer == null ? null : writer;
    return function() {
      var or__8783__auto__ = cljs.core._write[function() {
        var G__10641 = x__9427__auto__;
        return goog.typeOf(G__10641);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._write["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__8771__auto__ = writer;
    if (and__8771__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__9427__auto__ = writer == null ? null : writer;
    return function() {
      var or__8783__auto__ = cljs.core._flush[function() {
        var G__10645 = x__9427__auto__;
        return goog.typeOf(G__10645);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._flush["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj10647 = {};
  return obj10647;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__8771__auto__ = o;
    if (and__8771__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__9427__auto__ = o == null ? null : o;
    return function() {
      var or__8783__auto__ = cljs.core._pr_writer[function() {
        var G__10651 = x__9427__auto__;
        return goog.typeOf(G__10651);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._pr_writer["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj10653 = {};
  return obj10653;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__8771__auto__ = d;
    if (and__8771__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__9427__auto__ = d == null ? null : d;
    return function() {
      var or__8783__auto__ = cljs.core._realized_QMARK_[function() {
        var G__10657 = x__9427__auto__;
        return goog.typeOf(G__10657);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj10659 = {};
  return obj10659;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__8771__auto__ = this$;
    if (and__8771__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__9427__auto__ = this$ == null ? null : this$;
    return function() {
      var or__8783__auto__ = cljs.core._notify_watches[function() {
        var G__10663 = x__9427__auto__;
        return goog.typeOf(G__10663);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._notify_watches["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__8771__auto__ = this$;
    if (and__8771__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__9427__auto__ = this$ == null ? null : this$;
    return function() {
      var or__8783__auto__ = cljs.core._add_watch[function() {
        var G__10667 = x__9427__auto__;
        return goog.typeOf(G__10667);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._add_watch["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__8771__auto__ = this$;
    if (and__8771__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__9427__auto__ = this$ == null ? null : this$;
    return function() {
      var or__8783__auto__ = cljs.core._remove_watch[function() {
        var G__10671 = x__9427__auto__;
        return goog.typeOf(G__10671);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._remove_watch["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj10673 = {};
  return obj10673;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._as_transient[function() {
        var G__10677 = x__9427__auto__;
        return goog.typeOf(G__10677);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._as_transient["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj10679 = {};
  return obj10679;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__8771__auto__ = tcoll;
    if (and__8771__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__9427__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__8783__auto__ = cljs.core._conj_BANG_[function() {
        var G__10683 = x__9427__auto__;
        return goog.typeOf(G__10683);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__8771__auto__ = tcoll;
    if (and__8771__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__9427__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__8783__auto__ = cljs.core._persistent_BANG_[function() {
        var G__10687 = x__9427__auto__;
        return goog.typeOf(G__10687);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj10689 = {};
  return obj10689;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__8771__auto__ = tcoll;
    if (and__8771__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__9427__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__8783__auto__ = cljs.core._assoc_BANG_[function() {
        var G__10693 = x__9427__auto__;
        return goog.typeOf(G__10693);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj10695 = {};
  return obj10695;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__8771__auto__ = tcoll;
    if (and__8771__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__9427__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__8783__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__10699 = x__9427__auto__;
        return goog.typeOf(G__10699);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj10701 = {};
  return obj10701;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__8771__auto__ = tcoll;
    if (and__8771__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__9427__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__8783__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__10705 = x__9427__auto__;
        return goog.typeOf(G__10705);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__8771__auto__ = tcoll;
    if (and__8771__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__9427__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__8783__auto__ = cljs.core._pop_BANG_[function() {
        var G__10709 = x__9427__auto__;
        return goog.typeOf(G__10709);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj10711 = {};
  return obj10711;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__8771__auto__ = tcoll;
    if (and__8771__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__9427__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__8783__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__10715 = x__9427__auto__;
        return goog.typeOf(G__10715);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj10717 = {};
  return obj10717;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__8771__auto__ = x;
    if (and__8771__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__9427__auto__ = x == null ? null : x;
    return function() {
      var or__8783__auto__ = cljs.core._compare[function() {
        var G__10721 = x__9427__auto__;
        return goog.typeOf(G__10721);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._compare["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj10723 = {};
  return obj10723;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._drop_first[function() {
        var G__10727 = x__9427__auto__;
        return goog.typeOf(G__10727);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._drop_first["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj10729 = {};
  return obj10729;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._chunked_first[function() {
        var G__10733 = x__9427__auto__;
        return goog.typeOf(G__10733);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._chunked_first["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._chunked_rest[function() {
        var G__10737 = x__9427__auto__;
        return goog.typeOf(G__10737);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj10739 = {};
  return obj10739;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._chunked_next[function() {
        var G__10743 = x__9427__auto__;
        return goog.typeOf(G__10743);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._chunked_next["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj10745 = {};
  return obj10745;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__8771__auto__ = x;
    if (and__8771__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__9427__auto__ = x == null ? null : x;
    return function() {
      var or__8783__auto__ = cljs.core._name[function() {
        var G__10749 = x__9427__auto__;
        return goog.typeOf(G__10749);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._name["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__8771__auto__ = x;
    if (and__8771__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__9427__auto__ = x == null ? null : x;
    return function() {
      var or__8783__auto__ = cljs.core._namespace[function() {
        var G__10753 = x__9427__auto__;
        return goog.typeOf(G__10753);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._namespace["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj10755 = {};
  return obj10755;
}();
cljs.core.IReset = function() {
  var obj10757 = {};
  return obj10757;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__8771__auto__ = o;
    if (and__8771__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__9427__auto__ = o == null ? null : o;
    return function() {
      var or__8783__auto__ = cljs.core._reset_BANG_[function() {
        var G__10761 = x__9427__auto__;
        return goog.typeOf(G__10761);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj10763 = {};
  return obj10763;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__8771__auto__ = o;
      if (and__8771__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__9427__auto__ = o == null ? null : o;
      return function() {
        var or__8783__auto__ = cljs.core._swap_BANG_[function() {
          var G__10773 = x__9427__auto__;
          return goog.typeOf(G__10773);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__8771__auto__ = o;
      if (and__8771__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__9427__auto__ = o == null ? null : o;
      return function() {
        var or__8783__auto__ = cljs.core._swap_BANG_[function() {
          var G__10775 = x__9427__auto__;
          return goog.typeOf(G__10775);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__8771__auto__ = o;
      if (and__8771__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__9427__auto__ = o == null ? null : o;
      return function() {
        var or__8783__auto__ = cljs.core._swap_BANG_[function() {
          var G__10777 = x__9427__auto__;
          return goog.typeOf(G__10777);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__8771__auto__ = o;
      if (and__8771__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__8771__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__9427__auto__ = o == null ? null : o;
      return function() {
        var or__8783__auto__ = cljs.core._swap_BANG_[function() {
          var G__10779 = x__9427__auto__;
          return goog.typeOf(G__10779);
        }()];
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__8783__auto____$1) {
            return or__8783__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj10781 = {};
  return obj10781;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__8771__auto__ = o;
    if (and__8771__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__9427__auto__ = o == null ? null : o;
    return function() {
      var or__8783__auto__ = cljs.core._vreset_BANG_[function() {
        var G__10785 = x__9427__auto__;
        return goog.typeOf(G__10785);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj10787 = {};
  return obj10787;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__8771__auto__ = coll;
    if (and__8771__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__9427__auto__ = coll == null ? null : coll;
    return function() {
      var or__8783__auto__ = cljs.core._iterator[function() {
        var G__10791 = x__9427__auto__;
        return goog.typeOf(G__10791);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._iterator["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__10794 = 4294967295;
  var G__10795 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__10794, G__10795) : Math.imul.call(null, G__10794, G__10795);
}() === 0)) {
  cljs.core.imul = function imul(a, b) {
    var G__10798 = a;
    var G__10799 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__10798, G__10799) : Math.imul.call(null, G__10798, G__10799);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__10800 = i + 2;
        var G__10801 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__10800;
        h1 = G__10801;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj10803 = {};
  return obj10803;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__10804 = i + 1;
          var G__10805 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__10804;
          hash = G__10805;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj10809 = {};
      return obj10809;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__10812 = o;
    if (G__10812) {
      var bit__9457__auto__ = G__10812.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__9457__auto__ || G__10812.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__10813 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10813) : Math.floor.call(null, G__10813);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__8771__auto__ = cljs.core.not(a.ns);
      if (and__8771__auto__) {
        return b.ns;
      } else {
        return and__8771__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__10820 = a.ns;
            var G__10821 = b.ns;
            return goog.array.defaultCompare(G__10820, G__10821);
          }();
          if (0 === nsc) {
            var G__10822 = a.name;
            var G__10823 = b.name;
            return goog.array.defaultCompare(G__10822, G__10823);
          } else {
            return nsc;
          }
        }
      } else {
        var G__10824 = a.name;
        var G__10825 = b.name;
        return goog.array.defaultCompare(G__10824, G__10825);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__9204__auto__ = self__._hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__10827 = null;
  var G__10827__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__10827__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__10827 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10827__2.call(this, self__, coll);
      case 3:
        return G__10827__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10827.cljs$core$IFn$_invoke$arity$2 = G__10827__2;
  G__10827.cljs$core$IFn$_invoke$arity$3 = G__10827__3;
  return G__10827;
}();
cljs.core.Symbol.prototype.apply = function(self__, args10826) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10826)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__10875 = null;
  var G__10875__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__10875__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__10875__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__10875__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__10875__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__10875__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__10875__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__10875__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__10875__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__10875__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__10875__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__10875__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__10875__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__10875__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__10875__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__10875__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__10875__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__10875__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__10875__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__10875__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__10875__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__10875__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10831 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__10832 = a;
    var G__10833 = b;
    var G__10834 = c;
    var G__10835 = d;
    var G__10836 = e;
    var G__10837 = f;
    var G__10838 = g;
    var G__10839 = h;
    var G__10840 = i;
    var G__10841 = j;
    var G__10842 = k;
    var G__10843 = l;
    var G__10844 = m;
    var G__10845 = n;
    var G__10846 = o;
    var G__10847 = p;
    var G__10848 = q;
    var G__10849 = r;
    var G__10850 = s;
    var G__10851 = t;
    var G__10852 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10831, G__10832, G__10833, G__10834, G__10835, G__10836, G__10837, G__10838, G__10839, G__10840, G__10841, G__10842, G__10843, G__10844, G__10845, G__10846, G__10847, G__10848, G__10849, G__10850, G__10851, G__10852) : cljs.core.apply.call(null, G__10831, G__10832, G__10833, G__10834, G__10835, G__10836, G__10837, G__10838, G__10839, G__10840, G__10841, G__10842, G__10843, G__10844, G__10845, 
    G__10846, G__10847, G__10848, G__10849, G__10850, G__10851, G__10852);
  };
  G__10875 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__10875__1.call(this, self__);
      case 2:
        return G__10875__2.call(this, self__, a);
      case 3:
        return G__10875__3.call(this, self__, a, b);
      case 4:
        return G__10875__4.call(this, self__, a, b, c);
      case 5:
        return G__10875__5.call(this, self__, a, b, c, d);
      case 6:
        return G__10875__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__10875__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__10875__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__10875__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__10875__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__10875__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__10875__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__10875__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__10875__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__10875__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__10875__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__10875__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__10875__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__10875__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__10875__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__10875__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__10875__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10875.cljs$core$IFn$_invoke$arity$1 = G__10875__1;
  G__10875.cljs$core$IFn$_invoke$arity$2 = G__10875__2;
  G__10875.cljs$core$IFn$_invoke$arity$3 = G__10875__3;
  G__10875.cljs$core$IFn$_invoke$arity$4 = G__10875__4;
  G__10875.cljs$core$IFn$_invoke$arity$5 = G__10875__5;
  G__10875.cljs$core$IFn$_invoke$arity$6 = G__10875__6;
  G__10875.cljs$core$IFn$_invoke$arity$7 = G__10875__7;
  G__10875.cljs$core$IFn$_invoke$arity$8 = G__10875__8;
  G__10875.cljs$core$IFn$_invoke$arity$9 = G__10875__9;
  G__10875.cljs$core$IFn$_invoke$arity$10 = G__10875__10;
  G__10875.cljs$core$IFn$_invoke$arity$11 = G__10875__11;
  G__10875.cljs$core$IFn$_invoke$arity$12 = G__10875__12;
  G__10875.cljs$core$IFn$_invoke$arity$13 = G__10875__13;
  G__10875.cljs$core$IFn$_invoke$arity$14 = G__10875__14;
  G__10875.cljs$core$IFn$_invoke$arity$15 = G__10875__15;
  G__10875.cljs$core$IFn$_invoke$arity$16 = G__10875__16;
  G__10875.cljs$core$IFn$_invoke$arity$17 = G__10875__17;
  G__10875.cljs$core$IFn$_invoke$arity$18 = G__10875__18;
  G__10875.cljs$core$IFn$_invoke$arity$19 = G__10875__19;
  G__10875.cljs$core$IFn$_invoke$arity$20 = G__10875__20;
  G__10875.cljs$core$IFn$_invoke$arity$21 = G__10875__21;
  G__10875.cljs$core$IFn$_invoke$arity$22 = G__10875__22;
  return G__10875;
}();
cljs.core.Var.prototype.apply = function(self__, args10830) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10830)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__10853 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__10854 = a;
  var G__10855 = b;
  var G__10856 = c;
  var G__10857 = d;
  var G__10858 = e;
  var G__10859 = f;
  var G__10860 = g;
  var G__10861 = h;
  var G__10862 = i;
  var G__10863 = j;
  var G__10864 = k;
  var G__10865 = l;
  var G__10866 = m;
  var G__10867 = n;
  var G__10868 = o;
  var G__10869 = p;
  var G__10870 = q;
  var G__10871 = r;
  var G__10872 = s;
  var G__10873 = t;
  var G__10874 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10853, G__10854, G__10855, G__10856, G__10857, G__10858, G__10859, G__10860, G__10861, G__10862, G__10863, G__10864, G__10865, G__10866, G__10867, G__10868, G__10869, G__10870, G__10871, G__10872, G__10873, G__10874) : cljs.core.apply.call(null, G__10853, G__10854, G__10855, G__10856, G__10857, G__10858, G__10859, G__10860, G__10861, G__10862, G__10863, G__10864, G__10865, G__10866, G__10867, 
  G__10868, G__10869, G__10870, G__10871, G__10872, G__10873, G__10874);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__10877 = x;
  if (G__10877) {
    var bit__9464__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__8783__auto__ = bit__9464__auto__;
      if (cljs.core.truth_(or__8783__auto__)) {
        return or__8783__auto__;
      } else {
        return G__10877.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__10877.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__10877);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__10877);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__10879 = value;
  if (G__10879) {
    var bit__9464__auto__ = G__10879.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__9464__auto__ || G__10879.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__10879.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__10879);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__10879);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10881 = coll;
      if (G__10881) {
        var bit__9457__auto__ = G__10881.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__9457__auto__ || G__10881.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10883 = coll;
      if (G__10883) {
        var bit__9457__auto__ = G__10883.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__9457__auto__ || G__10883.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__10885 = coll;
      if (G__10885) {
        var bit__9457__auto__ = G__10885.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__9457__auto__ || G__10885.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10887 = coll;
      if (G__10887) {
        var bit__9457__auto__ = G__10887.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__9457__auto__ || G__10887.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__10892__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__10893 = y;
            var G__10894 = cljs.core.first(more);
            var G__10895 = cljs.core.next(more);
            x = G__10893;
            y = G__10894;
            more = G__10895;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10892 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__10896__i = 0, G__10896__a = new Array(arguments.length - 2);
        while (G__10896__i < G__10896__a.length) {
          G__10896__a[G__10896__i] = arguments[G__10896__i + 2];
          ++G__10896__i;
        }
        more = new cljs.core.IndexedSeq(G__10896__a, 0);
      }
      return G__10892__delegate.call(this, x, y, more);
    };
    G__10892.cljs$lang$maxFixedArity = 2;
    G__10892.cljs$lang$applyTo = function(arglist__10897) {
      var x = cljs.core.first(arglist__10897);
      arglist__10897 = cljs.core.next(arglist__10897);
      var y = cljs.core.first(arglist__10897);
      var more = cljs.core.rest(arglist__10897);
      return G__10892__delegate(x, y, more);
    };
    G__10892.cljs$core$IFn$_invoke$arity$variadic = G__10892__delegate;
    return G__10892;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        var G__10898 = null;
        if (arguments.length > 2) {
          var G__10899__i = 0, G__10899__a = new Array(arguments.length - 2);
          while (G__10899__i < G__10899__a.length) {
            G__10899__a[G__10899__i] = arguments[G__10899__i + 2];
            ++G__10899__i;
          }
          G__10898 = new cljs.core.IndexedSeq(G__10899__a, 0);
        }
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__10898);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__10900 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__10900) : cljs.core.es6_iterator_seq.call(null, G__10900);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__10901 = n + 1;
      var G__10902 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__10903 = cljs.core.next(coll__$1);
      n = G__10901;
      hash_code = G__10902;
      coll__$1 = G__10903;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__10904 = n + 1;
      var G__10905 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__10906 = cljs.core.next(coll__$1);
      n = G__10904;
      hash_code = G__10905;
      coll__$1 = G__10906;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__10907 = o;
  return goog.getUid(G__10907);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__10909 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10909) : cljs.core.deref.call(null, G__10909);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__10916 = val;
            var G__10917 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10916, G__10917) : f.call(null, G__10916, G__10917);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__10922 = nval;
            var G__10923 = n + 1;
            val = G__10922;
            n = G__10923;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__10918 = val__$1;
          var G__10919 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10918, G__10919) : f.call(null, G__10918, G__10919);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__10924 = nval;
          var G__10925 = n + 1;
          val__$1 = G__10924;
          n = G__10925;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__10920 = val__$1;
          var G__10921 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10920, G__10921) : f.call(null, G__10920, G__10921);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__10926 = nval;
          var G__10927 = n + 1;
          val__$1 = G__10926;
          n = G__10927;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__10934 = val;
            var G__10935 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10934, G__10935) : f.call(null, G__10934, G__10935);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__10940 = nval;
            var G__10941 = n + 1;
            val = G__10940;
            n = G__10941;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__10936 = val__$1;
          var G__10937 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10936, G__10937) : f.call(null, G__10936, G__10937);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__10942 = nval;
          var G__10943 = n + 1;
          val__$1 = G__10942;
          n = G__10943;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__10938 = val__$1;
          var G__10939 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10938, G__10939) : f.call(null, G__10938, G__10939);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__10944 = nval;
          var G__10945 = n + 1;
          val__$1 = G__10944;
          n = G__10945;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__10947 = x;
  if (G__10947) {
    var bit__9464__auto__ = G__10947.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__9464__auto__ || G__10947.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__10947.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__10947);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__10947);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__10949 = x;
  if (G__10949) {
    var bit__9464__auto__ = G__10949.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__9464__auto__ || G__10949.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__10949.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__10949);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__10949);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__10950 = coll__$1;
  var G__10951 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__10950, G__10951) : cljs.core.equiv_sequential.call(null, G__10950, G__10951);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__10952 = o;
  var G__10953 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__10952, G__10953) : cljs.core.cons.call(null, G__10952, G__10953);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__10956 = coll__$1;
  var G__10957 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__10956, G__10957) : cljs.core.equiv_sequential.call(null, G__10956, G__10957);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__10958 = cljs.core.List.EMPTY;
  var G__10959 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__10958, G__10959) : cljs.core.with_meta.call(null, G__10958, G__10959);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__10960 = f;
  var G__10961 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__10960, G__10961) : cljs.core.seq_reduce.call(null, G__10960, G__10961);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__10962 = f;
  var G__10963 = start;
  var G__10964 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__10962, G__10963, G__10964) : cljs.core.seq_reduce.call(null, G__10962, G__10963, G__10964);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__10965 = o;
  var G__10966 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__10965, G__10966) : cljs.core.cons.call(null, G__10965, G__10966);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__10967 = sn;
      s = G__10967;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__10972__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__10973 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__10974 = cljs.core.first(xs);
          var G__10975 = cljs.core.next(xs);
          coll = G__10973;
          x = G__10974;
          xs = G__10975;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__10972 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__10976__i = 0, G__10976__a = new Array(arguments.length - 2);
        while (G__10976__i < G__10976__a.length) {
          G__10976__a[G__10976__i] = arguments[G__10976__i + 2];
          ++G__10976__i;
        }
        xs = new cljs.core.IndexedSeq(G__10976__a, 0);
      }
      return G__10972__delegate.call(this, coll, x, xs);
    };
    G__10972.cljs$lang$maxFixedArity = 2;
    G__10972.cljs$lang$applyTo = function(arglist__10977) {
      var coll = cljs.core.first(arglist__10977);
      arglist__10977 = cljs.core.next(arglist__10977);
      var x = cljs.core.first(arglist__10977);
      var xs = cljs.core.rest(arglist__10977);
      return G__10972__delegate(coll, x, xs);
    };
    G__10972.cljs$core$IFn$_invoke$arity$variadic = G__10972__delegate;
    return G__10972;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        var G__10978 = null;
        if (arguments.length > 2) {
          var G__10979__i = 0, G__10979__a = new Array(arguments.length - 2);
          while (G__10979__i < G__10979__a.length) {
            G__10979__a[G__10979__i] = arguments[G__10979__i + 2];
            ++G__10979__i;
          }
          G__10978 = new cljs.core.IndexedSeq(G__10979__a, 0);
        }
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__10978);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__10980 = cljs.core.next(s);
      var G__10981 = acc + 1;
      s = G__10980;
      acc = G__10981;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__10983 = coll;
      if (G__10983) {
        var bit__9457__auto__ = G__10983.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__9457__auto__ || G__10983.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__10984 = cljs.core.next(coll);
              var G__10985 = n - 1;
              coll = G__10984;
              n = G__10985;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__10986 = cljs.core.next(coll);
              var G__10987 = n - 1;
              var G__10988 = not_found;
              coll = G__10986;
              n = G__10987;
              not_found = G__10988;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__10993 = coll;
          if (G__10993) {
            var bit__9457__auto__ = G__10993.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__9457__auto__ || G__10993.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__10994 = coll;
                  if (G__10994) {
                    var bit__9464__auto__ = G__10994.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__9464__auto__ || G__10994.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__10994.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__10994);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__10994);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__10995 = coll;
          if (G__10995) {
            var bit__9457__auto__ = G__10995.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__9457__auto__ || G__10995.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__10996 = coll;
                  if (G__10996) {
                    var bit__9464__auto__ = G__10996.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__9464__auto__ || G__10996.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__10996.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__10996);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__10996);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__10997 = n__$1 - 1;
      var G__10998 = cljs.core.rest(xs);
      n__$1 = G__10997;
      xs = G__10998;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__11001 = o;
        if (G__11001) {
          var bit__9457__auto__ = G__11001.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__9457__auto__ || G__11001.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__11002 = o;
        if (G__11002) {
          var bit__9457__auto__ = G__11002.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__9457__auto__ || G__11002.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__11006__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__11007 = ret;
          var G__11008 = cljs.core.first(kvs);
          var G__11009 = cljs.core.second(kvs);
          var G__11010 = cljs.core.nnext(kvs);
          coll = G__11007;
          k = G__11008;
          v = G__11009;
          kvs = G__11010;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__11006 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__11011__i = 0, G__11011__a = new Array(arguments.length - 3);
        while (G__11011__i < G__11011__a.length) {
          G__11011__a[G__11011__i] = arguments[G__11011__i + 3];
          ++G__11011__i;
        }
        kvs = new cljs.core.IndexedSeq(G__11011__a, 0);
      }
      return G__11006__delegate.call(this, coll, k, v, kvs);
    };
    G__11006.cljs$lang$maxFixedArity = 3;
    G__11006.cljs$lang$applyTo = function(arglist__11012) {
      var coll = cljs.core.first(arglist__11012);
      arglist__11012 = cljs.core.next(arglist__11012);
      var k = cljs.core.first(arglist__11012);
      arglist__11012 = cljs.core.next(arglist__11012);
      var v = cljs.core.first(arglist__11012);
      var kvs = cljs.core.rest(arglist__11012);
      return G__11006__delegate(coll, k, v, kvs);
    };
    G__11006.cljs$core$IFn$_invoke$arity$variadic = G__11006__delegate;
    return G__11006;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        var G__11013 = null;
        if (arguments.length > 3) {
          var G__11014__i = 0, G__11014__a = new Array(arguments.length - 3);
          while (G__11014__i < G__11014__a.length) {
            G__11014__a[G__11014__i] = arguments[G__11014__i + 3];
            ++G__11014__i;
          }
          G__11013 = new cljs.core.IndexedSeq(G__11014__a, 0);
        }
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__11013);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__11017__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__11018 = ret;
            var G__11019 = cljs.core.first(ks);
            var G__11020 = cljs.core.next(ks);
            coll = G__11018;
            k = G__11019;
            ks = G__11020;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__11017 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__11021__i = 0, G__11021__a = new Array(arguments.length - 2);
        while (G__11021__i < G__11021__a.length) {
          G__11021__a[G__11021__i] = arguments[G__11021__i + 2];
          ++G__11021__i;
        }
        ks = new cljs.core.IndexedSeq(G__11021__a, 0);
      }
      return G__11017__delegate.call(this, coll, k, ks);
    };
    G__11017.cljs$lang$maxFixedArity = 2;
    G__11017.cljs$lang$applyTo = function(arglist__11022) {
      var coll = cljs.core.first(arglist__11022);
      arglist__11022 = cljs.core.next(arglist__11022);
      var k = cljs.core.first(arglist__11022);
      var ks = cljs.core.rest(arglist__11022);
      return G__11017__delegate(coll, k, ks);
    };
    G__11017.cljs$core$IFn$_invoke$arity$variadic = G__11017__delegate;
    return G__11017;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        var G__11023 = null;
        if (arguments.length > 2) {
          var G__11024__i = 0, G__11024__a = new Array(arguments.length - 2);
          while (G__11024__i < G__11024__a.length) {
            G__11024__a[G__11024__i] = arguments[G__11024__i + 2];
            ++G__11024__i;
          }
          G__11023 = new cljs.core.IndexedSeq(G__11024__a, 0);
        }
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__11023);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__8783__auto__ = function() {
    var G__11029 = f;
    return goog.isFunction(G__11029);
  }();
  if (cljs.core.truth_(or__8783__auto__)) {
    return or__8783__auto__;
  } else {
    var G__11030 = f;
    if (G__11030) {
      var bit__9464__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__8783__auto____$1 = bit__9464__auto__;
        if (cljs.core.truth_(or__8783__auto____$1)) {
          return or__8783__auto____$1;
        } else {
          return G__11030.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__11030.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__11030);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__11030);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__11496 = null;
  var G__11496__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__11496__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11032 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11032) : self__.afn.call(null, G__11032);
  };
  var G__11496__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11033 = a;
    var G__11034 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11033, G__11034) : self__.afn.call(null, G__11033, G__11034);
  };
  var G__11496__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11035 = a;
    var G__11036 = b;
    var G__11037 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11035, G__11036, G__11037) : self__.afn.call(null, G__11035, G__11036, G__11037);
  };
  var G__11496__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11038 = a;
    var G__11039 = b;
    var G__11040 = c;
    var G__11041 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11038, G__11039, G__11040, G__11041) : self__.afn.call(null, G__11038, G__11039, G__11040, G__11041);
  };
  var G__11496__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11042 = a;
    var G__11043 = b;
    var G__11044 = c;
    var G__11045 = d;
    var G__11046 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11042, G__11043, G__11044, G__11045, G__11046) : self__.afn.call(null, G__11042, G__11043, G__11044, G__11045, G__11046);
  };
  var G__11496__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11047 = a;
    var G__11048 = b;
    var G__11049 = c;
    var G__11050 = d;
    var G__11051 = e;
    var G__11052 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11047, G__11048, G__11049, G__11050, G__11051, G__11052) : self__.afn.call(null, G__11047, G__11048, G__11049, G__11050, G__11051, G__11052);
  };
  var G__11496__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11053 = a;
    var G__11054 = b;
    var G__11055 = c;
    var G__11056 = d;
    var G__11057 = e;
    var G__11058 = f;
    var G__11059 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11053, G__11054, G__11055, G__11056, G__11057, G__11058, G__11059) : self__.afn.call(null, G__11053, G__11054, G__11055, G__11056, G__11057, G__11058, G__11059);
  };
  var G__11496__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11060 = a;
    var G__11061 = b;
    var G__11062 = c;
    var G__11063 = d;
    var G__11064 = e;
    var G__11065 = f;
    var G__11066 = g;
    var G__11067 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11060, G__11061, G__11062, G__11063, G__11064, G__11065, G__11066, G__11067) : self__.afn.call(null, G__11060, G__11061, G__11062, G__11063, G__11064, G__11065, G__11066, G__11067);
  };
  var G__11496__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11068 = a;
    var G__11069 = b;
    var G__11070 = c;
    var G__11071 = d;
    var G__11072 = e;
    var G__11073 = f;
    var G__11074 = g;
    var G__11075 = h;
    var G__11076 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__11068, G__11069, G__11070, G__11071, G__11072, G__11073, G__11074, G__11075, G__11076) : self__.afn.call(null, G__11068, G__11069, G__11070, G__11071, G__11072, G__11073, G__11074, G__11075, G__11076);
  };
  var G__11496__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11077 = a;
    var G__11078 = b;
    var G__11079 = c;
    var G__11080 = d;
    var G__11081 = e;
    var G__11082 = f;
    var G__11083 = g;
    var G__11084 = h;
    var G__11085 = i;
    var G__11086 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__11077, G__11078, G__11079, G__11080, G__11081, G__11082, G__11083, G__11084, G__11085, G__11086) : self__.afn.call(null, G__11077, G__11078, G__11079, G__11080, G__11081, G__11082, G__11083, G__11084, G__11085, G__11086);
  };
  var G__11496__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11087 = a;
    var G__11088 = b;
    var G__11089 = c;
    var G__11090 = d;
    var G__11091 = e;
    var G__11092 = f;
    var G__11093 = g;
    var G__11094 = h;
    var G__11095 = i;
    var G__11096 = j;
    var G__11097 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__11087, G__11088, G__11089, G__11090, G__11091, G__11092, G__11093, G__11094, G__11095, G__11096, G__11097) : self__.afn.call(null, G__11087, G__11088, G__11089, G__11090, G__11091, G__11092, G__11093, G__11094, G__11095, G__11096, G__11097);
  };
  var G__11496__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11098 = a;
    var G__11099 = b;
    var G__11100 = c;
    var G__11101 = d;
    var G__11102 = e;
    var G__11103 = f;
    var G__11104 = g;
    var G__11105 = h;
    var G__11106 = i;
    var G__11107 = j;
    var G__11108 = k;
    var G__11109 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__11098, G__11099, G__11100, G__11101, G__11102, G__11103, G__11104, G__11105, G__11106, G__11107, G__11108, G__11109) : self__.afn.call(null, G__11098, G__11099, G__11100, G__11101, G__11102, G__11103, G__11104, G__11105, G__11106, G__11107, G__11108, G__11109);
  };
  var G__11496__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11110 = a;
    var G__11111 = b;
    var G__11112 = c;
    var G__11113 = d;
    var G__11114 = e;
    var G__11115 = f;
    var G__11116 = g;
    var G__11117 = h;
    var G__11118 = i;
    var G__11119 = j;
    var G__11120 = k;
    var G__11121 = l;
    var G__11122 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__11110, G__11111, G__11112, G__11113, G__11114, G__11115, G__11116, G__11117, G__11118, G__11119, G__11120, G__11121, G__11122) : self__.afn.call(null, G__11110, G__11111, G__11112, G__11113, G__11114, G__11115, G__11116, G__11117, G__11118, G__11119, G__11120, G__11121, G__11122);
  };
  var G__11496__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11123 = a;
    var G__11124 = b;
    var G__11125 = c;
    var G__11126 = d;
    var G__11127 = e;
    var G__11128 = f;
    var G__11129 = g;
    var G__11130 = h;
    var G__11131 = i;
    var G__11132 = j;
    var G__11133 = k;
    var G__11134 = l;
    var G__11135 = m;
    var G__11136 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__11123, G__11124, G__11125, G__11126, G__11127, G__11128, G__11129, G__11130, G__11131, G__11132, G__11133, G__11134, G__11135, G__11136) : self__.afn.call(null, G__11123, G__11124, G__11125, G__11126, G__11127, G__11128, G__11129, G__11130, G__11131, G__11132, G__11133, G__11134, G__11135, G__11136);
  };
  var G__11496__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11137 = a;
    var G__11138 = b;
    var G__11139 = c;
    var G__11140 = d;
    var G__11141 = e;
    var G__11142 = f;
    var G__11143 = g;
    var G__11144 = h;
    var G__11145 = i;
    var G__11146 = j;
    var G__11147 = k;
    var G__11148 = l;
    var G__11149 = m;
    var G__11150 = n;
    var G__11151 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__11137, G__11138, G__11139, G__11140, G__11141, G__11142, G__11143, G__11144, G__11145, G__11146, G__11147, G__11148, G__11149, G__11150, G__11151) : self__.afn.call(null, G__11137, G__11138, G__11139, G__11140, G__11141, G__11142, G__11143, G__11144, G__11145, G__11146, G__11147, G__11148, G__11149, G__11150, G__11151);
  };
  var G__11496__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11152 = a;
    var G__11153 = b;
    var G__11154 = c;
    var G__11155 = d;
    var G__11156 = e;
    var G__11157 = f;
    var G__11158 = g;
    var G__11159 = h;
    var G__11160 = i;
    var G__11161 = j;
    var G__11162 = k;
    var G__11163 = l;
    var G__11164 = m;
    var G__11165 = n;
    var G__11166 = o;
    var G__11167 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__11152, G__11153, G__11154, G__11155, G__11156, G__11157, G__11158, G__11159, G__11160, G__11161, G__11162, G__11163, G__11164, G__11165, G__11166, G__11167) : self__.afn.call(null, G__11152, G__11153, G__11154, G__11155, G__11156, G__11157, G__11158, G__11159, G__11160, G__11161, G__11162, G__11163, G__11164, G__11165, G__11166, G__11167);
  };
  var G__11496__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11168 = a;
    var G__11169 = b;
    var G__11170 = c;
    var G__11171 = d;
    var G__11172 = e;
    var G__11173 = f;
    var G__11174 = g;
    var G__11175 = h;
    var G__11176 = i;
    var G__11177 = j;
    var G__11178 = k;
    var G__11179 = l;
    var G__11180 = m;
    var G__11181 = n;
    var G__11182 = o;
    var G__11183 = p;
    var G__11184 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__11168, G__11169, G__11170, G__11171, G__11172, G__11173, G__11174, G__11175, G__11176, G__11177, G__11178, G__11179, G__11180, G__11181, G__11182, G__11183, G__11184) : self__.afn.call(null, G__11168, G__11169, G__11170, G__11171, G__11172, G__11173, G__11174, G__11175, G__11176, G__11177, G__11178, G__11179, G__11180, G__11181, G__11182, G__11183, G__11184);
  };
  var G__11496__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11185 = a;
    var G__11186 = b;
    var G__11187 = c;
    var G__11188 = d;
    var G__11189 = e;
    var G__11190 = f;
    var G__11191 = g;
    var G__11192 = h;
    var G__11193 = i;
    var G__11194 = j;
    var G__11195 = k;
    var G__11196 = l;
    var G__11197 = m;
    var G__11198 = n;
    var G__11199 = o;
    var G__11200 = p;
    var G__11201 = q;
    var G__11202 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__11185, G__11186, G__11187, G__11188, G__11189, G__11190, G__11191, G__11192, G__11193, G__11194, G__11195, G__11196, G__11197, G__11198, G__11199, G__11200, G__11201, G__11202) : self__.afn.call(null, G__11185, G__11186, G__11187, G__11188, G__11189, G__11190, G__11191, G__11192, G__11193, G__11194, G__11195, G__11196, G__11197, G__11198, G__11199, G__11200, G__11201, G__11202);
  };
  var G__11496__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11203 = a;
    var G__11204 = b;
    var G__11205 = c;
    var G__11206 = d;
    var G__11207 = e;
    var G__11208 = f;
    var G__11209 = g;
    var G__11210 = h;
    var G__11211 = i;
    var G__11212 = j;
    var G__11213 = k;
    var G__11214 = l;
    var G__11215 = m;
    var G__11216 = n;
    var G__11217 = o;
    var G__11218 = p;
    var G__11219 = q;
    var G__11220 = r;
    var G__11221 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__11203, G__11204, G__11205, G__11206, G__11207, G__11208, G__11209, G__11210, G__11211, G__11212, G__11213, G__11214, G__11215, G__11216, G__11217, G__11218, G__11219, G__11220, G__11221) : self__.afn.call(null, G__11203, G__11204, G__11205, G__11206, G__11207, G__11208, G__11209, G__11210, G__11211, G__11212, G__11213, G__11214, G__11215, G__11216, G__11217, G__11218, G__11219, G__11220, G__11221);
  };
  var G__11496__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11222 = a;
    var G__11223 = b;
    var G__11224 = c;
    var G__11225 = d;
    var G__11226 = e;
    var G__11227 = f;
    var G__11228 = g;
    var G__11229 = h;
    var G__11230 = i;
    var G__11231 = j;
    var G__11232 = k;
    var G__11233 = l;
    var G__11234 = m;
    var G__11235 = n;
    var G__11236 = o;
    var G__11237 = p;
    var G__11238 = q;
    var G__11239 = r;
    var G__11240 = s;
    var G__11241 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__11222, G__11223, G__11224, G__11225, G__11226, G__11227, G__11228, G__11229, G__11230, G__11231, G__11232, G__11233, G__11234, G__11235, G__11236, G__11237, G__11238, G__11239, G__11240, G__11241) : self__.afn.call(null, G__11222, G__11223, G__11224, G__11225, G__11226, G__11227, G__11228, G__11229, G__11230, G__11231, G__11232, G__11233, G__11234, G__11235, G__11236, G__11237, G__11238, G__11239, 
    G__11240, G__11241);
  };
  var G__11496__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__11242 = self__.afn;
    var G__11243 = a;
    var G__11244 = b;
    var G__11245 = c;
    var G__11246 = d;
    var G__11247 = e;
    var G__11248 = f;
    var G__11249 = g;
    var G__11250 = h;
    var G__11251 = i;
    var G__11252 = j;
    var G__11253 = k;
    var G__11254 = l;
    var G__11255 = m;
    var G__11256 = n;
    var G__11257 = o;
    var G__11258 = p;
    var G__11259 = q;
    var G__11260 = r;
    var G__11261 = s;
    var G__11262 = t;
    var G__11263 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11242, G__11243, G__11244, G__11245, G__11246, G__11247, G__11248, G__11249, G__11250, G__11251, G__11252, G__11253, G__11254, G__11255, G__11256, G__11257, G__11258, G__11259, G__11260, G__11261, G__11262, G__11263) : cljs.core.apply.call(null, G__11242, G__11243, G__11244, G__11245, G__11246, G__11247, G__11248, G__11249, G__11250, G__11251, G__11252, G__11253, G__11254, G__11255, G__11256, 
    G__11257, G__11258, G__11259, G__11260, G__11261, G__11262, G__11263);
  };
  G__11496 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11496__1.call(this, self__);
      case 2:
        return G__11496__2.call(this, self__, a);
      case 3:
        return G__11496__3.call(this, self__, a, b);
      case 4:
        return G__11496__4.call(this, self__, a, b, c);
      case 5:
        return G__11496__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11496__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11496__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11496__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11496__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11496__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11496__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11496__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11496__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11496__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11496__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11496__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11496__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11496__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11496__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11496__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11496__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11496__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11496.cljs$core$IFn$_invoke$arity$1 = G__11496__1;
  G__11496.cljs$core$IFn$_invoke$arity$2 = G__11496__2;
  G__11496.cljs$core$IFn$_invoke$arity$3 = G__11496__3;
  G__11496.cljs$core$IFn$_invoke$arity$4 = G__11496__4;
  G__11496.cljs$core$IFn$_invoke$arity$5 = G__11496__5;
  G__11496.cljs$core$IFn$_invoke$arity$6 = G__11496__6;
  G__11496.cljs$core$IFn$_invoke$arity$7 = G__11496__7;
  G__11496.cljs$core$IFn$_invoke$arity$8 = G__11496__8;
  G__11496.cljs$core$IFn$_invoke$arity$9 = G__11496__9;
  G__11496.cljs$core$IFn$_invoke$arity$10 = G__11496__10;
  G__11496.cljs$core$IFn$_invoke$arity$11 = G__11496__11;
  G__11496.cljs$core$IFn$_invoke$arity$12 = G__11496__12;
  G__11496.cljs$core$IFn$_invoke$arity$13 = G__11496__13;
  G__11496.cljs$core$IFn$_invoke$arity$14 = G__11496__14;
  G__11496.cljs$core$IFn$_invoke$arity$15 = G__11496__15;
  G__11496.cljs$core$IFn$_invoke$arity$16 = G__11496__16;
  G__11496.cljs$core$IFn$_invoke$arity$17 = G__11496__17;
  G__11496.cljs$core$IFn$_invoke$arity$18 = G__11496__18;
  G__11496.cljs$core$IFn$_invoke$arity$19 = G__11496__19;
  G__11496.cljs$core$IFn$_invoke$arity$20 = G__11496__20;
  G__11496.cljs$core$IFn$_invoke$arity$21 = G__11496__21;
  G__11496.cljs$core$IFn$_invoke$arity$22 = G__11496__22;
  return G__11496;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args11031) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11031)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__11264 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__11264) : self__.afn.call(null, G__11264);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__11265 = a;
  var G__11266 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__11265, G__11266) : self__.afn.call(null, G__11265, G__11266);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__11267 = a;
  var G__11268 = b;
  var G__11269 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__11267, G__11268, G__11269) : self__.afn.call(null, G__11267, G__11268, G__11269);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__11270 = a;
  var G__11271 = b;
  var G__11272 = c;
  var G__11273 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__11270, G__11271, G__11272, G__11273) : self__.afn.call(null, G__11270, G__11271, G__11272, G__11273);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__11274 = a;
  var G__11275 = b;
  var G__11276 = c;
  var G__11277 = d;
  var G__11278 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__11274, G__11275, G__11276, G__11277, G__11278) : self__.afn.call(null, G__11274, G__11275, G__11276, G__11277, G__11278);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__11279 = a;
  var G__11280 = b;
  var G__11281 = c;
  var G__11282 = d;
  var G__11283 = e;
  var G__11284 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__11279, G__11280, G__11281, G__11282, G__11283, G__11284) : self__.afn.call(null, G__11279, G__11280, G__11281, G__11282, G__11283, G__11284);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__11285 = a;
  var G__11286 = b;
  var G__11287 = c;
  var G__11288 = d;
  var G__11289 = e;
  var G__11290 = f;
  var G__11291 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__11285, G__11286, G__11287, G__11288, G__11289, G__11290, G__11291) : self__.afn.call(null, G__11285, G__11286, G__11287, G__11288, G__11289, G__11290, G__11291);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__11292 = a;
  var G__11293 = b;
  var G__11294 = c;
  var G__11295 = d;
  var G__11296 = e;
  var G__11297 = f;
  var G__11298 = g;
  var G__11299 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__11292, G__11293, G__11294, G__11295, G__11296, G__11297, G__11298, G__11299) : self__.afn.call(null, G__11292, G__11293, G__11294, G__11295, G__11296, G__11297, G__11298, G__11299);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__11300 = a;
  var G__11301 = b;
  var G__11302 = c;
  var G__11303 = d;
  var G__11304 = e;
  var G__11305 = f;
  var G__11306 = g;
  var G__11307 = h;
  var G__11308 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__11300, G__11301, G__11302, G__11303, G__11304, G__11305, G__11306, G__11307, G__11308) : self__.afn.call(null, G__11300, G__11301, G__11302, G__11303, G__11304, G__11305, G__11306, G__11307, G__11308);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__11309 = a;
  var G__11310 = b;
  var G__11311 = c;
  var G__11312 = d;
  var G__11313 = e;
  var G__11314 = f;
  var G__11315 = g;
  var G__11316 = h;
  var G__11317 = i;
  var G__11318 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__11309, G__11310, G__11311, G__11312, G__11313, G__11314, G__11315, G__11316, G__11317, G__11318) : self__.afn.call(null, G__11309, G__11310, G__11311, G__11312, G__11313, G__11314, G__11315, G__11316, G__11317, G__11318);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__11319 = a;
  var G__11320 = b;
  var G__11321 = c;
  var G__11322 = d;
  var G__11323 = e;
  var G__11324 = f;
  var G__11325 = g;
  var G__11326 = h;
  var G__11327 = i;
  var G__11328 = j;
  var G__11329 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__11319, G__11320, G__11321, G__11322, G__11323, G__11324, G__11325, G__11326, G__11327, G__11328, G__11329) : self__.afn.call(null, G__11319, G__11320, G__11321, G__11322, G__11323, G__11324, G__11325, G__11326, G__11327, G__11328, G__11329);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__11330 = a;
  var G__11331 = b;
  var G__11332 = c;
  var G__11333 = d;
  var G__11334 = e;
  var G__11335 = f;
  var G__11336 = g;
  var G__11337 = h;
  var G__11338 = i;
  var G__11339 = j;
  var G__11340 = k;
  var G__11341 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__11330, G__11331, G__11332, G__11333, G__11334, G__11335, G__11336, G__11337, G__11338, G__11339, G__11340, G__11341) : self__.afn.call(null, G__11330, G__11331, G__11332, G__11333, G__11334, G__11335, G__11336, G__11337, G__11338, G__11339, G__11340, G__11341);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__11342 = a;
  var G__11343 = b;
  var G__11344 = c;
  var G__11345 = d;
  var G__11346 = e;
  var G__11347 = f;
  var G__11348 = g;
  var G__11349 = h;
  var G__11350 = i;
  var G__11351 = j;
  var G__11352 = k;
  var G__11353 = l;
  var G__11354 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__11342, G__11343, G__11344, G__11345, G__11346, G__11347, G__11348, G__11349, G__11350, G__11351, G__11352, G__11353, G__11354) : self__.afn.call(null, G__11342, G__11343, G__11344, G__11345, G__11346, G__11347, G__11348, G__11349, G__11350, G__11351, G__11352, G__11353, G__11354);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__11355 = a;
  var G__11356 = b;
  var G__11357 = c;
  var G__11358 = d;
  var G__11359 = e;
  var G__11360 = f;
  var G__11361 = g;
  var G__11362 = h;
  var G__11363 = i;
  var G__11364 = j;
  var G__11365 = k;
  var G__11366 = l;
  var G__11367 = m;
  var G__11368 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__11355, G__11356, G__11357, G__11358, G__11359, G__11360, G__11361, G__11362, G__11363, G__11364, G__11365, G__11366, G__11367, G__11368) : self__.afn.call(null, G__11355, G__11356, G__11357, G__11358, G__11359, G__11360, G__11361, G__11362, G__11363, G__11364, G__11365, G__11366, G__11367, G__11368);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__11369 = a;
  var G__11370 = b;
  var G__11371 = c;
  var G__11372 = d;
  var G__11373 = e;
  var G__11374 = f;
  var G__11375 = g;
  var G__11376 = h;
  var G__11377 = i;
  var G__11378 = j;
  var G__11379 = k;
  var G__11380 = l;
  var G__11381 = m;
  var G__11382 = n;
  var G__11383 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__11369, G__11370, G__11371, G__11372, G__11373, G__11374, G__11375, G__11376, G__11377, G__11378, G__11379, G__11380, G__11381, G__11382, G__11383) : self__.afn.call(null, G__11369, G__11370, G__11371, G__11372, G__11373, G__11374, G__11375, G__11376, G__11377, G__11378, G__11379, G__11380, G__11381, G__11382, G__11383);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__11384 = a;
  var G__11385 = b;
  var G__11386 = c;
  var G__11387 = d;
  var G__11388 = e;
  var G__11389 = f;
  var G__11390 = g;
  var G__11391 = h;
  var G__11392 = i;
  var G__11393 = j;
  var G__11394 = k;
  var G__11395 = l;
  var G__11396 = m;
  var G__11397 = n;
  var G__11398 = o;
  var G__11399 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__11384, G__11385, G__11386, G__11387, G__11388, G__11389, G__11390, G__11391, G__11392, G__11393, G__11394, G__11395, G__11396, G__11397, G__11398, G__11399) : self__.afn.call(null, G__11384, G__11385, G__11386, G__11387, G__11388, G__11389, G__11390, G__11391, G__11392, G__11393, G__11394, G__11395, G__11396, G__11397, G__11398, G__11399);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__11400 = a;
  var G__11401 = b;
  var G__11402 = c;
  var G__11403 = d;
  var G__11404 = e;
  var G__11405 = f;
  var G__11406 = g;
  var G__11407 = h;
  var G__11408 = i;
  var G__11409 = j;
  var G__11410 = k;
  var G__11411 = l;
  var G__11412 = m;
  var G__11413 = n;
  var G__11414 = o;
  var G__11415 = p;
  var G__11416 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__11400, G__11401, G__11402, G__11403, G__11404, G__11405, G__11406, G__11407, G__11408, G__11409, G__11410, G__11411, G__11412, G__11413, G__11414, G__11415, G__11416) : self__.afn.call(null, G__11400, G__11401, G__11402, G__11403, G__11404, G__11405, G__11406, G__11407, G__11408, G__11409, G__11410, G__11411, G__11412, G__11413, G__11414, G__11415, G__11416);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__11417 = a;
  var G__11418 = b;
  var G__11419 = c;
  var G__11420 = d;
  var G__11421 = e;
  var G__11422 = f;
  var G__11423 = g;
  var G__11424 = h;
  var G__11425 = i;
  var G__11426 = j;
  var G__11427 = k;
  var G__11428 = l;
  var G__11429 = m;
  var G__11430 = n;
  var G__11431 = o;
  var G__11432 = p;
  var G__11433 = q;
  var G__11434 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__11417, G__11418, G__11419, G__11420, G__11421, G__11422, G__11423, G__11424, G__11425, G__11426, G__11427, G__11428, G__11429, G__11430, G__11431, G__11432, G__11433, G__11434) : self__.afn.call(null, G__11417, G__11418, G__11419, G__11420, G__11421, G__11422, G__11423, G__11424, G__11425, G__11426, G__11427, G__11428, G__11429, G__11430, G__11431, G__11432, G__11433, G__11434);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__11435 = a;
  var G__11436 = b;
  var G__11437 = c;
  var G__11438 = d;
  var G__11439 = e;
  var G__11440 = f;
  var G__11441 = g;
  var G__11442 = h;
  var G__11443 = i;
  var G__11444 = j;
  var G__11445 = k;
  var G__11446 = l;
  var G__11447 = m;
  var G__11448 = n;
  var G__11449 = o;
  var G__11450 = p;
  var G__11451 = q;
  var G__11452 = r;
  var G__11453 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__11435, G__11436, G__11437, G__11438, G__11439, G__11440, G__11441, G__11442, G__11443, G__11444, G__11445, G__11446, G__11447, G__11448, G__11449, G__11450, G__11451, G__11452, G__11453) : self__.afn.call(null, G__11435, G__11436, G__11437, G__11438, G__11439, G__11440, G__11441, G__11442, G__11443, G__11444, G__11445, G__11446, G__11447, G__11448, G__11449, G__11450, G__11451, G__11452, G__11453);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__11454 = a;
  var G__11455 = b;
  var G__11456 = c;
  var G__11457 = d;
  var G__11458 = e;
  var G__11459 = f;
  var G__11460 = g;
  var G__11461 = h;
  var G__11462 = i;
  var G__11463 = j;
  var G__11464 = k;
  var G__11465 = l;
  var G__11466 = m;
  var G__11467 = n;
  var G__11468 = o;
  var G__11469 = p;
  var G__11470 = q;
  var G__11471 = r;
  var G__11472 = s;
  var G__11473 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__11454, G__11455, G__11456, G__11457, G__11458, G__11459, G__11460, G__11461, G__11462, G__11463, G__11464, G__11465, G__11466, G__11467, G__11468, G__11469, G__11470, G__11471, G__11472, G__11473) : self__.afn.call(null, G__11454, G__11455, G__11456, G__11457, G__11458, G__11459, G__11460, G__11461, G__11462, G__11463, G__11464, G__11465, G__11466, G__11467, G__11468, G__11469, G__11470, G__11471, G__11472, 
  G__11473);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__11474 = self__.afn;
  var G__11475 = a;
  var G__11476 = b;
  var G__11477 = c;
  var G__11478 = d;
  var G__11479 = e;
  var G__11480 = f;
  var G__11481 = g;
  var G__11482 = h;
  var G__11483 = i;
  var G__11484 = j;
  var G__11485 = k;
  var G__11486 = l;
  var G__11487 = m;
  var G__11488 = n;
  var G__11489 = o;
  var G__11490 = p;
  var G__11491 = q;
  var G__11492 = r;
  var G__11493 = s;
  var G__11494 = t;
  var G__11495 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11474, G__11475, G__11476, G__11477, G__11478, G__11479, G__11480, G__11481, G__11482, G__11483, G__11484, G__11485, G__11486, G__11487, G__11488, G__11489, G__11490, G__11491, G__11492, G__11493, G__11494, G__11495) : cljs.core.apply.call(null, G__11474, G__11475, G__11476, G__11477, G__11478, G__11479, G__11480, G__11481, G__11482, G__11483, G__11484, G__11485, G__11486, G__11487, G__11488, 
  G__11489, G__11490, G__11491, G__11492, G__11493, G__11494, G__11495);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__11500 = o;
    if (G__11500) {
      var bit__9464__auto__ = G__11500.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__9464__auto__ || G__11500.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__11500.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__11500);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__11500);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__8771__auto__ = !(o == null);
    if (and__8771__auto__) {
      var G__11504 = o;
      if (G__11504) {
        var bit__9464__auto__ = G__11504.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__9464__auto__ || G__11504.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__11504.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__11504);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__11504);
      }
    } else {
      return and__8771__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__11507__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__11508 = ret;
            var G__11509 = cljs.core.first(ks);
            var G__11510 = cljs.core.next(ks);
            coll = G__11508;
            k = G__11509;
            ks = G__11510;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__11507 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__11511__i = 0, G__11511__a = new Array(arguments.length - 2);
        while (G__11511__i < G__11511__a.length) {
          G__11511__a[G__11511__i] = arguments[G__11511__i + 2];
          ++G__11511__i;
        }
        ks = new cljs.core.IndexedSeq(G__11511__a, 0);
      }
      return G__11507__delegate.call(this, coll, k, ks);
    };
    G__11507.cljs$lang$maxFixedArity = 2;
    G__11507.cljs$lang$applyTo = function(arglist__11512) {
      var coll = cljs.core.first(arglist__11512);
      arglist__11512 = cljs.core.next(arglist__11512);
      var k = cljs.core.first(arglist__11512);
      var ks = cljs.core.rest(arglist__11512);
      return G__11507__delegate(coll, k, ks);
    };
    G__11507.cljs$core$IFn$_invoke$arity$variadic = G__11507__delegate;
    return G__11507;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        var G__11513 = null;
        if (arguments.length > 2) {
          var G__11514__i = 0, G__11514__a = new Array(arguments.length - 2);
          while (G__11514__i < G__11514__a.length) {
            G__11514__a[G__11514__i] = arguments[G__11514__i + 2];
            ++G__11514__i;
          }
          G__11513 = new cljs.core.IndexedSeq(G__11514__a, 0);
        }
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__11513);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__11516 = x;
    if (G__11516) {
      var bit__9464__auto__ = G__11516.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__9464__auto__ || G__11516.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__11516.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__11516);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__11516);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__11518 = x;
    if (G__11518) {
      var bit__9464__auto__ = G__11518.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__9464__auto__ || G__11518.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__11518.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__11518);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__11518);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__11520 = x;
  if (G__11520) {
    var bit__9464__auto__ = G__11520.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__9464__auto__ || G__11520.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__11520.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__11520);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__11520);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__11522 = x;
  if (G__11522) {
    var bit__9464__auto__ = G__11522.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__9464__auto__ || G__11522.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__11522.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__11522);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__11522);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__11524 = x;
  if (G__11524) {
    var bit__9464__auto__ = G__11524.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__9464__auto__ || G__11524.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__11524.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__11524);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__11524);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__11526 = x;
  if (G__11526) {
    var bit__9464__auto__ = G__11526.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__9464__auto__ || G__11526.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__11526.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__11526);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__11526);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__11528 = x;
    if (G__11528) {
      var bit__9464__auto__ = G__11528.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__9464__auto__ || G__11528.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__11528.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__11528);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__11528);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__11530 = x;
  if (G__11530) {
    var bit__9464__auto__ = G__11530.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__9464__auto__ || G__11530.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__11530.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__11530);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__11530);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__11532 = x;
  if (G__11532) {
    var bit__9457__auto__ = G__11532.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__9457__auto__ || G__11532.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj11538 = {};
    return obj11538;
  };
  var js_obj__1 = function() {
    var G__11541__delegate = function(keyvals) {
      var G__11539 = goog.object.create;
      var G__11540 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__11539, G__11540) : cljs.core.apply.call(null, G__11539, G__11540);
    };
    var G__11541 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__11542__i = 0, G__11542__a = new Array(arguments.length - 0);
        while (G__11542__i < G__11542__a.length) {
          G__11542__a[G__11542__i] = arguments[G__11542__i + 0];
          ++G__11542__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__11542__a, 0);
      }
      return G__11541__delegate.call(this, keyvals);
    };
    G__11541.cljs$lang$maxFixedArity = 0;
    G__11541.cljs$lang$applyTo = function(arglist__11543) {
      var keyvals = cljs.core.seq(arglist__11543);
      return G__11541__delegate(keyvals);
    };
    G__11541.cljs$core$IFn$_invoke$arity$variadic = G__11541__delegate;
    return G__11541;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        var G__11544 = null;
        if (arguments.length > 0) {
          var G__11545__i = 0, G__11545__a = new Array(arguments.length - 0);
          while (G__11545__i < G__11545__a.length) {
            G__11545__a[G__11545__i] = arguments[G__11545__i + 0];
            ++G__11545__i;
          }
          G__11544 = new cljs.core.IndexedSeq(G__11545__a, 0);
        }
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__11544);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  var G__11548_11550 = obj;
  var G__11549_11551 = function(G__11548_11550, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__11548_11550, keys);
  goog.object.forEach(G__11548_11550, G__11549_11551);
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__11552 = i__$1 + 1;
      var G__11553 = j__$1 + 1;
      var G__11554 = len__$1 - 1;
      i__$1 = G__11552;
      j__$1 = G__11553;
      len__$1 = G__11554;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__11555 = i__$1 - 1;
      var G__11556 = j__$1 - 1;
      var G__11557 = len__$1 - 1;
      i__$1 = G__11555;
      j__$1 = G__11556;
      len__$1 = G__11557;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj11559 = {};
  return obj11559;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__11561 = s;
    if (G__11561) {
      var bit__9464__auto__ = G__11561.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__9464__auto__ || G__11561.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__11561.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__11561);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__11561);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__11563 = s;
  if (G__11563) {
    var bit__9464__auto__ = G__11563.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__9464__auto__ || G__11563.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__11563.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__11563);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__11563);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__8783__auto__ = cljs.core.fn_QMARK_(f);
  if (or__8783__auto__) {
    return or__8783__auto__;
  } else {
    var G__11567 = f;
    if (G__11567) {
      var bit__9464__auto__ = G__11567.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__9464__auto__ || G__11567.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__11567.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__11567);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__11567);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__11580 = n;
    return isNaN(G__11580);
  }()) && !(n === Infinity) && function() {
    var G__11581 = n;
    return parseFloat(G__11581);
  }() === function() {
    var G__11582 = n;
    var G__11583 = 10;
    return parseInt(G__11582, G__11583);
  }();
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__11584__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__11585 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__11586 = etc;
              s = G__11585;
              xs = G__11586;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__11584 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11587__i = 0, G__11587__a = new Array(arguments.length - 2);
        while (G__11587__i < G__11587__a.length) {
          G__11587__a[G__11587__i] = arguments[G__11587__i + 2];
          ++G__11587__i;
        }
        more = new cljs.core.IndexedSeq(G__11587__a, 0);
      }
      return G__11584__delegate.call(this, x, y, more);
    };
    G__11584.cljs$lang$maxFixedArity = 2;
    G__11584.cljs$lang$applyTo = function(arglist__11588) {
      var x = cljs.core.first(arglist__11588);
      arglist__11588 = cljs.core.next(arglist__11588);
      var y = cljs.core.first(arglist__11588);
      var more = cljs.core.rest(arglist__11588);
      return G__11584__delegate(x, y, more);
    };
    G__11584.cljs$core$IFn$_invoke$arity$variadic = G__11584__delegate;
    return G__11584;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        var G__11589 = null;
        if (arguments.length > 2) {
          var G__11590__i = 0, G__11590__a = new Array(arguments.length - 2);
          while (G__11590__i < G__11590__a.length) {
            G__11590__a[G__11590__i] = arguments[G__11590__i + 2];
            ++G__11590__i;
          }
          G__11589 = new cljs.core.IndexedSeq(G__11590__a, 0);
        }
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11589);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__11594 = x;
            if (G__11594) {
              var bit__9457__auto__ = G__11594.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__9457__auto__ || G__11594.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__11595 = x;
            var G__11596 = y;
            return goog.array.defaultCompare(G__11595, G__11596);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__11601 = xs;
        var G__11602 = ys;
        var G__11603 = len;
        var G__11604 = n + 1;
        xs = G__11601;
        ys = G__11602;
        len = G__11603;
        n = G__11604;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__11609 = x;
        var G__11610 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11609, G__11610) : f.call(null, G__11609, G__11610);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__11611 = y;
            var G__11612 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11611, G__11612) : f.call(null, G__11611, G__11612);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__11618 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__11618) : cljs.core.to_array.call(null, G__11618);
      }();
      var G__11619_11621 = a;
      var G__11620_11622 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__11619_11621, G__11620_11622);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__11628 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11628) : keyfn.call(null, G__11628);
      }(), function() {
        var G__11629 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11629) : keyfn.call(null, G__11629);
      }());
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__11635 = f;
      var G__11636 = cljs.core.first(s);
      var G__11637 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11635, G__11636, G__11637) : cljs.core.reduce.call(null, G__11635, G__11636, G__11637);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__11638 = val__$1;
          var G__11639 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11638, G__11639) : f.call(null, G__11638, G__11639);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11640 = nval;
          var G__11641 = cljs.core.next(coll__$1);
          val__$1 = G__11640;
          coll__$1 = G__11641;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = function() {
    var G__11645 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__11645) : cljs.core.to_array.call(null, G__11645);
  }();
  var G__11646_11648 = a;
  goog.array.shuffle(G__11646_11648);
  var G__11647 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__11647) : cljs.core.vec.call(null, G__11647);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__11651 = coll;
      if (G__11651) {
        var bit__9457__auto__ = G__11651.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__9457__auto__ || G__11651.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__11652 = coll;
      if (G__11652) {
        var bit__9457__auto__ = G__11652.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__9457__auto__ || G__11652.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__11661 = null;
      var G__11661__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__11661__1 = function(x) {
        var G__11658 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__11658) : cf.call(null, G__11658);
      };
      var G__11661__2 = function(x, y) {
        var G__11659 = x;
        var G__11660 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11659, G__11660) : f.call(null, G__11659, G__11660);
      };
      G__11661 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__11661__0.call(this);
          case 1:
            return G__11661__1.call(this, x);
          case 2:
            return G__11661__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11661.cljs$core$IFn$_invoke$arity$0 = G__11661__0;
      G__11661.cljs$core$IFn$_invoke$arity$1 = G__11661__1;
      G__11661.cljs$core$IFn$_invoke$arity$2 = G__11661__2;
      return G__11661;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__11668 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__11668) : xform.call(null, G__11668);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__11669 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__11669) : f__$1.call(null, G__11669);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__11670__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__11670 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11671__i = 0, G__11671__a = new Array(arguments.length - 2);
        while (G__11671__i < G__11671__a.length) {
          G__11671__a[G__11671__i] = arguments[G__11671__i + 2];
          ++G__11671__i;
        }
        more = new cljs.core.IndexedSeq(G__11671__a, 0);
      }
      return G__11670__delegate.call(this, x, y, more);
    };
    G__11670.cljs$lang$maxFixedArity = 2;
    G__11670.cljs$lang$applyTo = function(arglist__11672) {
      var x = cljs.core.first(arglist__11672);
      arglist__11672 = cljs.core.next(arglist__11672);
      var y = cljs.core.first(arglist__11672);
      var more = cljs.core.rest(arglist__11672);
      return G__11670__delegate(x, y, more);
    };
    G__11670.cljs$core$IFn$_invoke$arity$variadic = G__11670__delegate;
    return G__11670;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        var G__11673 = null;
        if (arguments.length > 2) {
          var G__11674__i = 0, G__11674__a = new Array(arguments.length - 2);
          while (G__11674__i < G__11674__a.length) {
            G__11674__a[G__11674__i] = arguments[G__11674__i + 2];
            ++G__11674__i;
          }
          G__11673 = new cljs.core.IndexedSeq(G__11674__a, 0);
        }
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11673);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__11675__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__11675 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11676__i = 0, G__11676__a = new Array(arguments.length - 2);
        while (G__11676__i < G__11676__a.length) {
          G__11676__a[G__11676__i] = arguments[G__11676__i + 2];
          ++G__11676__i;
        }
        more = new cljs.core.IndexedSeq(G__11676__a, 0);
      }
      return G__11675__delegate.call(this, x, y, more);
    };
    G__11675.cljs$lang$maxFixedArity = 2;
    G__11675.cljs$lang$applyTo = function(arglist__11677) {
      var x = cljs.core.first(arglist__11677);
      arglist__11677 = cljs.core.next(arglist__11677);
      var y = cljs.core.first(arglist__11677);
      var more = cljs.core.rest(arglist__11677);
      return G__11675__delegate(x, y, more);
    };
    G__11675.cljs$core$IFn$_invoke$arity$variadic = G__11675__delegate;
    return G__11675;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        var G__11678 = null;
        if (arguments.length > 2) {
          var G__11679__i = 0, G__11679__a = new Array(arguments.length - 2);
          while (G__11679__i < G__11679__a.length) {
            G__11679__a[G__11679__i] = arguments[G__11679__i + 2];
            ++G__11679__i;
          }
          G__11678 = new cljs.core.IndexedSeq(G__11679__a, 0);
        }
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11678);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__11680__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__11680 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11681__i = 0, G__11681__a = new Array(arguments.length - 2);
        while (G__11681__i < G__11681__a.length) {
          G__11681__a[G__11681__i] = arguments[G__11681__i + 2];
          ++G__11681__i;
        }
        more = new cljs.core.IndexedSeq(G__11681__a, 0);
      }
      return G__11680__delegate.call(this, x, y, more);
    };
    G__11680.cljs$lang$maxFixedArity = 2;
    G__11680.cljs$lang$applyTo = function(arglist__11682) {
      var x = cljs.core.first(arglist__11682);
      arglist__11682 = cljs.core.next(arglist__11682);
      var y = cljs.core.first(arglist__11682);
      var more = cljs.core.rest(arglist__11682);
      return G__11680__delegate(x, y, more);
    };
    G__11680.cljs$core$IFn$_invoke$arity$variadic = G__11680__delegate;
    return G__11680;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        var G__11683 = null;
        if (arguments.length > 2) {
          var G__11684__i = 0, G__11684__a = new Array(arguments.length - 2);
          while (G__11684__i < G__11684__a.length) {
            G__11684__a[G__11684__i] = arguments[G__11684__i + 2];
            ++G__11684__i;
          }
          G__11683 = new cljs.core.IndexedSeq(G__11684__a, 0);
        }
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11683);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__11689__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__11689 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11690__i = 0, G__11690__a = new Array(arguments.length - 2);
        while (G__11690__i < G__11690__a.length) {
          G__11690__a[G__11690__i] = arguments[G__11690__i + 2];
          ++G__11690__i;
        }
        more = new cljs.core.IndexedSeq(G__11690__a, 0);
      }
      return G__11689__delegate.call(this, x, y, more);
    };
    G__11689.cljs$lang$maxFixedArity = 2;
    G__11689.cljs$lang$applyTo = function(arglist__11691) {
      var x = cljs.core.first(arglist__11691);
      arglist__11691 = cljs.core.next(arglist__11691);
      var y = cljs.core.first(arglist__11691);
      var more = cljs.core.rest(arglist__11691);
      return G__11689__delegate(x, y, more);
    };
    G__11689.cljs$core$IFn$_invoke$arity$variadic = G__11689__delegate;
    return G__11689;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        var G__11692 = null;
        if (arguments.length > 2) {
          var G__11693__i = 0, G__11693__a = new Array(arguments.length - 2);
          while (G__11693__i < G__11693__a.length) {
            G__11693__a[G__11693__i] = arguments[G__11693__i + 2];
            ++G__11693__i;
          }
          G__11692 = new cljs.core.IndexedSeq(G__11693__a, 0);
        }
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11692);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__11694__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__11695 = y;
            var G__11696 = cljs.core.first(more);
            var G__11697 = cljs.core.next(more);
            x = G__11695;
            y = G__11696;
            more = G__11697;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11694 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11698__i = 0, G__11698__a = new Array(arguments.length - 2);
        while (G__11698__i < G__11698__a.length) {
          G__11698__a[G__11698__i] = arguments[G__11698__i + 2];
          ++G__11698__i;
        }
        more = new cljs.core.IndexedSeq(G__11698__a, 0);
      }
      return G__11694__delegate.call(this, x, y, more);
    };
    G__11694.cljs$lang$maxFixedArity = 2;
    G__11694.cljs$lang$applyTo = function(arglist__11699) {
      var x = cljs.core.first(arglist__11699);
      arglist__11699 = cljs.core.next(arglist__11699);
      var y = cljs.core.first(arglist__11699);
      var more = cljs.core.rest(arglist__11699);
      return G__11694__delegate(x, y, more);
    };
    G__11694.cljs$core$IFn$_invoke$arity$variadic = G__11694__delegate;
    return G__11694;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        var G__11700 = null;
        if (arguments.length > 2) {
          var G__11701__i = 0, G__11701__a = new Array(arguments.length - 2);
          while (G__11701__i < G__11701__a.length) {
            G__11701__a[G__11701__i] = arguments[G__11701__i + 2];
            ++G__11701__i;
          }
          G__11700 = new cljs.core.IndexedSeq(G__11701__a, 0);
        }
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11700);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__11702__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__11703 = y;
            var G__11704 = cljs.core.first(more);
            var G__11705 = cljs.core.next(more);
            x = G__11703;
            y = G__11704;
            more = G__11705;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11702 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11706__i = 0, G__11706__a = new Array(arguments.length - 2);
        while (G__11706__i < G__11706__a.length) {
          G__11706__a[G__11706__i] = arguments[G__11706__i + 2];
          ++G__11706__i;
        }
        more = new cljs.core.IndexedSeq(G__11706__a, 0);
      }
      return G__11702__delegate.call(this, x, y, more);
    };
    G__11702.cljs$lang$maxFixedArity = 2;
    G__11702.cljs$lang$applyTo = function(arglist__11707) {
      var x = cljs.core.first(arglist__11707);
      arglist__11707 = cljs.core.next(arglist__11707);
      var y = cljs.core.first(arglist__11707);
      var more = cljs.core.rest(arglist__11707);
      return G__11702__delegate(x, y, more);
    };
    G__11702.cljs$core$IFn$_invoke$arity$variadic = G__11702__delegate;
    return G__11702;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        var G__11708 = null;
        if (arguments.length > 2) {
          var G__11709__i = 0, G__11709__a = new Array(arguments.length - 2);
          while (G__11709__i < G__11709__a.length) {
            G__11709__a[G__11709__i] = arguments[G__11709__i + 2];
            ++G__11709__i;
          }
          G__11708 = new cljs.core.IndexedSeq(G__11709__a, 0);
        }
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11708);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__11710__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__11711 = y;
            var G__11712 = cljs.core.first(more);
            var G__11713 = cljs.core.next(more);
            x = G__11711;
            y = G__11712;
            more = G__11713;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11710 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11714__i = 0, G__11714__a = new Array(arguments.length - 2);
        while (G__11714__i < G__11714__a.length) {
          G__11714__a[G__11714__i] = arguments[G__11714__i + 2];
          ++G__11714__i;
        }
        more = new cljs.core.IndexedSeq(G__11714__a, 0);
      }
      return G__11710__delegate.call(this, x, y, more);
    };
    G__11710.cljs$lang$maxFixedArity = 2;
    G__11710.cljs$lang$applyTo = function(arglist__11715) {
      var x = cljs.core.first(arglist__11715);
      arglist__11715 = cljs.core.next(arglist__11715);
      var y = cljs.core.first(arglist__11715);
      var more = cljs.core.rest(arglist__11715);
      return G__11710__delegate(x, y, more);
    };
    G__11710.cljs$core$IFn$_invoke$arity$variadic = G__11710__delegate;
    return G__11710;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        var G__11716 = null;
        if (arguments.length > 2) {
          var G__11717__i = 0, G__11717__a = new Array(arguments.length - 2);
          while (G__11717__i < G__11717__a.length) {
            G__11717__a[G__11717__i] = arguments[G__11717__i + 2];
            ++G__11717__i;
          }
          G__11716 = new cljs.core.IndexedSeq(G__11717__a, 0);
        }
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11716);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__11718__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__11719 = y;
            var G__11720 = cljs.core.first(more);
            var G__11721 = cljs.core.next(more);
            x = G__11719;
            y = G__11720;
            more = G__11721;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11718 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11722__i = 0, G__11722__a = new Array(arguments.length - 2);
        while (G__11722__i < G__11722__a.length) {
          G__11722__a[G__11722__i] = arguments[G__11722__i + 2];
          ++G__11722__i;
        }
        more = new cljs.core.IndexedSeq(G__11722__a, 0);
      }
      return G__11718__delegate.call(this, x, y, more);
    };
    G__11718.cljs$lang$maxFixedArity = 2;
    G__11718.cljs$lang$applyTo = function(arglist__11723) {
      var x = cljs.core.first(arglist__11723);
      arglist__11723 = cljs.core.next(arglist__11723);
      var y = cljs.core.first(arglist__11723);
      var more = cljs.core.rest(arglist__11723);
      return G__11718__delegate(x, y, more);
    };
    G__11718.cljs$core$IFn$_invoke$arity$variadic = G__11718__delegate;
    return G__11718;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        var G__11724 = null;
        if (arguments.length > 2) {
          var G__11725__i = 0, G__11725__a = new Array(arguments.length - 2);
          while (G__11725__i < G__11725__a.length) {
            G__11725__a[G__11725__i] = arguments[G__11725__i + 2];
            ++G__11725__i;
          }
          G__11724 = new cljs.core.IndexedSeq(G__11725__a, 0);
        }
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11724);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__9100__auto__ = x;
    var y__9101__auto__ = y;
    return x__9100__auto__ > y__9101__auto__ ? x__9100__auto__ : y__9101__auto__;
  };
  var max__3 = function() {
    var G__11726__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__9100__auto__ = x;
        var y__9101__auto__ = y;
        return x__9100__auto__ > y__9101__auto__ ? x__9100__auto__ : y__9101__auto__;
      }(), more);
    };
    var G__11726 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11727__i = 0, G__11727__a = new Array(arguments.length - 2);
        while (G__11727__i < G__11727__a.length) {
          G__11727__a[G__11727__i] = arguments[G__11727__i + 2];
          ++G__11727__i;
        }
        more = new cljs.core.IndexedSeq(G__11727__a, 0);
      }
      return G__11726__delegate.call(this, x, y, more);
    };
    G__11726.cljs$lang$maxFixedArity = 2;
    G__11726.cljs$lang$applyTo = function(arglist__11728) {
      var x = cljs.core.first(arglist__11728);
      arglist__11728 = cljs.core.next(arglist__11728);
      var y = cljs.core.first(arglist__11728);
      var more = cljs.core.rest(arglist__11728);
      return G__11726__delegate(x, y, more);
    };
    G__11726.cljs$core$IFn$_invoke$arity$variadic = G__11726__delegate;
    return G__11726;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        var G__11729 = null;
        if (arguments.length > 2) {
          var G__11730__i = 0, G__11730__a = new Array(arguments.length - 2);
          while (G__11730__i < G__11730__a.length) {
            G__11730__a[G__11730__i] = arguments[G__11730__i + 2];
            ++G__11730__i;
          }
          G__11729 = new cljs.core.IndexedSeq(G__11730__a, 0);
        }
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11729);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__9107__auto__ = x;
    var y__9108__auto__ = y;
    return x__9107__auto__ < y__9108__auto__ ? x__9107__auto__ : y__9108__auto__;
  };
  var min__3 = function() {
    var G__11731__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__9107__auto__ = x;
        var y__9108__auto__ = y;
        return x__9107__auto__ < y__9108__auto__ ? x__9107__auto__ : y__9108__auto__;
      }(), more);
    };
    var G__11731 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11732__i = 0, G__11732__a = new Array(arguments.length - 2);
        while (G__11732__i < G__11732__a.length) {
          G__11732__a[G__11732__i] = arguments[G__11732__i + 2];
          ++G__11732__i;
        }
        more = new cljs.core.IndexedSeq(G__11732__a, 0);
      }
      return G__11731__delegate.call(this, x, y, more);
    };
    G__11731.cljs$lang$maxFixedArity = 2;
    G__11731.cljs$lang$applyTo = function(arglist__11733) {
      var x = cljs.core.first(arglist__11733);
      arglist__11733 = cljs.core.next(arglist__11733);
      var y = cljs.core.first(arglist__11733);
      var more = cljs.core.rest(arglist__11733);
      return G__11731__delegate(x, y, more);
    };
    G__11731.cljs$core$IFn$_invoke$arity$variadic = G__11731__delegate;
    return G__11731;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        var G__11734 = null;
        if (arguments.length > 2) {
          var G__11735__i = 0, G__11735__a = new Array(arguments.length - 2);
          while (G__11735__i < G__11735__a.length) {
            G__11735__a[G__11735__i] = arguments[G__11735__i + 2];
            ++G__11735__i;
          }
          G__11734 = new cljs.core.IndexedSeq(G__11735__a, 0);
        }
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11734);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__11736__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__11736 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11737__i = 0, G__11737__a = new Array(arguments.length - 2);
        while (G__11737__i < G__11737__a.length) {
          G__11737__a[G__11737__i] = arguments[G__11737__i + 2];
          ++G__11737__i;
        }
        more = new cljs.core.IndexedSeq(G__11737__a, 0);
      }
      return G__11736__delegate.call(this, x, y, more);
    };
    G__11736.cljs$lang$maxFixedArity = 2;
    G__11736.cljs$lang$applyTo = function(arglist__11738) {
      var x = cljs.core.first(arglist__11738);
      arglist__11738 = cljs.core.next(arglist__11738);
      var y = cljs.core.first(arglist__11738);
      var more = cljs.core.rest(arglist__11738);
      return G__11736__delegate(x, y, more);
    };
    G__11736.cljs$core$IFn$_invoke$arity$variadic = G__11736__delegate;
    return G__11736;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        var G__11739 = null;
        if (arguments.length > 2) {
          var G__11740__i = 0, G__11740__a = new Array(arguments.length - 2);
          while (G__11740__i < G__11740__a.length) {
            G__11740__a[G__11740__i] = arguments[G__11740__i + 2];
            ++G__11740__i;
          }
          G__11739 = new cljs.core.IndexedSeq(G__11740__a, 0);
        }
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11739);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__11741__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__11741 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11742__i = 0, G__11742__a = new Array(arguments.length - 2);
        while (G__11742__i < G__11742__a.length) {
          G__11742__a[G__11742__i] = arguments[G__11742__i + 2];
          ++G__11742__i;
        }
        more = new cljs.core.IndexedSeq(G__11742__a, 0);
      }
      return G__11741__delegate.call(this, x, y, more);
    };
    G__11741.cljs$lang$maxFixedArity = 2;
    G__11741.cljs$lang$applyTo = function(arglist__11743) {
      var x = cljs.core.first(arglist__11743);
      arglist__11743 = cljs.core.next(arglist__11743);
      var y = cljs.core.first(arglist__11743);
      var more = cljs.core.rest(arglist__11743);
      return G__11741__delegate(x, y, more);
    };
    G__11741.cljs$core$IFn$_invoke$arity$variadic = G__11741__delegate;
    return G__11741;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        var G__11744 = null;
        if (arguments.length > 2) {
          var G__11745__i = 0, G__11745__a = new Array(arguments.length - 2);
          while (G__11745__i < G__11745__a.length) {
            G__11745__a[G__11745__i] = arguments[G__11745__i + 2];
            ++G__11745__i;
          }
          G__11744 = new cljs.core.IndexedSeq(G__11745__a, 0);
        }
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11744);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__11750__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__11750 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11751__i = 0, G__11751__a = new Array(arguments.length - 2);
        while (G__11751__i < G__11751__a.length) {
          G__11751__a[G__11751__i] = arguments[G__11751__i + 2];
          ++G__11751__i;
        }
        more = new cljs.core.IndexedSeq(G__11751__a, 0);
      }
      return G__11750__delegate.call(this, x, y, more);
    };
    G__11750.cljs$lang$maxFixedArity = 2;
    G__11750.cljs$lang$applyTo = function(arglist__11752) {
      var x = cljs.core.first(arglist__11752);
      arglist__11752 = cljs.core.next(arglist__11752);
      var y = cljs.core.first(arglist__11752);
      var more = cljs.core.rest(arglist__11752);
      return G__11750__delegate(x, y, more);
    };
    G__11750.cljs$core$IFn$_invoke$arity$variadic = G__11750__delegate;
    return G__11750;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        var G__11753 = null;
        if (arguments.length > 2) {
          var G__11754__i = 0, G__11754__a = new Array(arguments.length - 2);
          while (G__11754__i < G__11754__a.length) {
            G__11754__a[G__11754__i] = arguments[G__11754__i + 2];
            ++G__11754__i;
          }
          G__11753 = new cljs.core.IndexedSeq(G__11754__a, 0);
        }
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11753);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__11755__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__11755 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11756__i = 0, G__11756__a = new Array(arguments.length - 2);
        while (G__11756__i < G__11756__a.length) {
          G__11756__a[G__11756__i] = arguments[G__11756__i + 2];
          ++G__11756__i;
        }
        more = new cljs.core.IndexedSeq(G__11756__a, 0);
      }
      return G__11755__delegate.call(this, x, y, more);
    };
    G__11755.cljs$lang$maxFixedArity = 2;
    G__11755.cljs$lang$applyTo = function(arglist__11757) {
      var x = cljs.core.first(arglist__11757);
      arglist__11757 = cljs.core.next(arglist__11757);
      var y = cljs.core.first(arglist__11757);
      var more = cljs.core.rest(arglist__11757);
      return G__11755__delegate(x, y, more);
    };
    G__11755.cljs$core$IFn$_invoke$arity$variadic = G__11755__delegate;
    return G__11755;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        var G__11758 = null;
        if (arguments.length > 2) {
          var G__11759__i = 0, G__11759__a = new Array(arguments.length - 2);
          while (G__11759__i < G__11759__a.length) {
            G__11759__a[G__11759__i] = arguments[G__11759__i + 2];
            ++G__11759__i;
          }
          G__11758 = new cljs.core.IndexedSeq(G__11759__a, 0);
        }
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11758);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__11760__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__11760 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11761__i = 0, G__11761__a = new Array(arguments.length - 2);
        while (G__11761__i < G__11761__a.length) {
          G__11761__a[G__11761__i] = arguments[G__11761__i + 2];
          ++G__11761__i;
        }
        more = new cljs.core.IndexedSeq(G__11761__a, 0);
      }
      return G__11760__delegate.call(this, x, y, more);
    };
    G__11760.cljs$lang$maxFixedArity = 2;
    G__11760.cljs$lang$applyTo = function(arglist__11762) {
      var x = cljs.core.first(arglist__11762);
      arglist__11762 = cljs.core.next(arglist__11762);
      var y = cljs.core.first(arglist__11762);
      var more = cljs.core.rest(arglist__11762);
      return G__11760__delegate(x, y, more);
    };
    G__11760.cljs$core$IFn$_invoke$arity$variadic = G__11760__delegate;
    return G__11760;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__11763 = null;
        if (arguments.length > 2) {
          var G__11764__i = 0, G__11764__a = new Array(arguments.length - 2);
          while (G__11764__i < G__11764__a.length) {
            G__11764__a[G__11764__i] = arguments[G__11764__i + 2];
            ++G__11764__i;
          }
          G__11763 = new cljs.core.IndexedSeq(G__11764__a, 0);
        }
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11763);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  var G__11767 = x;
  var G__11768 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__11767, G__11768) : cljs.core.mod.call(null, G__11767, G__11768);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__11769__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract, x - y, more);
    };
    var G__11769 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11770__i = 0, G__11770__a = new Array(arguments.length - 2);
        while (G__11770__i < G__11770__a.length) {
          G__11770__a[G__11770__i] = arguments[G__11770__i + 2];
          ++G__11770__i;
        }
        more = new cljs.core.IndexedSeq(G__11770__a, 0);
      }
      return G__11769__delegate.call(this, x, y, more);
    };
    G__11769.cljs$lang$maxFixedArity = 2;
    G__11769.cljs$lang$applyTo = function(arglist__11771) {
      var x = cljs.core.first(arglist__11771);
      arglist__11771 = cljs.core.next(arglist__11771);
      var y = cljs.core.first(arglist__11771);
      var more = cljs.core.rest(arglist__11771);
      return G__11769__delegate(x, y, more);
    };
    G__11769.cljs$core$IFn$_invoke$arity$variadic = G__11769__delegate;
    return G__11769;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        var G__11772 = null;
        if (arguments.length > 2) {
          var G__11773__i = 0, G__11773__a = new Array(arguments.length - 2);
          while (G__11773__i < G__11773__a.length) {
            G__11773__a[G__11773__i] = arguments[G__11773__i + 2];
            ++G__11773__i;
          }
          G__11772 = new cljs.core.IndexedSeq(G__11773__a, 0);
        }
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11772);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__11774__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int, x - y, more);
    };
    var G__11774 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11775__i = 0, G__11775__a = new Array(arguments.length - 2);
        while (G__11775__i < G__11775__a.length) {
          G__11775__a[G__11775__i] = arguments[G__11775__i + 2];
          ++G__11775__i;
        }
        more = new cljs.core.IndexedSeq(G__11775__a, 0);
      }
      return G__11774__delegate.call(this, x, y, more);
    };
    G__11774.cljs$lang$maxFixedArity = 2;
    G__11774.cljs$lang$applyTo = function(arglist__11776) {
      var x = cljs.core.first(arglist__11776);
      arglist__11776 = cljs.core.next(arglist__11776);
      var y = cljs.core.first(arglist__11776);
      var more = cljs.core.rest(arglist__11776);
      return G__11774__delegate(x, y, more);
    };
    G__11774.cljs$core$IFn$_invoke$arity$variadic = G__11774__delegate;
    return G__11774;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__11777 = null;
        if (arguments.length > 2) {
          var G__11778__i = 0, G__11778__a = new Array(arguments.length - 2);
          while (G__11778__i < G__11778__a.length) {
            G__11778__a[G__11778__i] = arguments[G__11778__i + 2];
            ++G__11778__i;
          }
          G__11777 = new cljs.core.IndexedSeq(G__11778__a, 0);
        }
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11777);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    var G__11781 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11781) : Math.floor.call(null, G__11781);
  } else {
    var G__11782 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__11782) : Math.ceil.call(null, G__11782);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function() {
  var bit_xor = null;
  var bit_xor__2 = function(x, y) {
    return x ^ y;
  };
  var bit_xor__3 = function() {
    var G__11783__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor, x ^ y, more);
    };
    var G__11783 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11784__i = 0, G__11784__a = new Array(arguments.length - 2);
        while (G__11784__i < G__11784__a.length) {
          G__11784__a[G__11784__i] = arguments[G__11784__i + 2];
          ++G__11784__i;
        }
        more = new cljs.core.IndexedSeq(G__11784__a, 0);
      }
      return G__11783__delegate.call(this, x, y, more);
    };
    G__11783.cljs$lang$maxFixedArity = 2;
    G__11783.cljs$lang$applyTo = function(arglist__11785) {
      var x = cljs.core.first(arglist__11785);
      arglist__11785 = cljs.core.next(arglist__11785);
      var y = cljs.core.first(arglist__11785);
      var more = cljs.core.rest(arglist__11785);
      return G__11783__delegate(x, y, more);
    };
    G__11783.cljs$core$IFn$_invoke$arity$variadic = G__11783__delegate;
    return G__11783;
  }();
  bit_xor = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_xor__2.call(this, x, y);
      default:
        var G__11786 = null;
        if (arguments.length > 2) {
          var G__11787__i = 0, G__11787__a = new Array(arguments.length - 2);
          while (G__11787__i < G__11787__a.length) {
            G__11787__a[G__11787__i] = arguments[G__11787__i + 2];
            ++G__11787__i;
          }
          G__11786 = new cljs.core.IndexedSeq(G__11787__a, 0);
        }
        return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11786);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_xor.cljs$lang$maxFixedArity = 2;
  bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
  bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
  bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_xor;
}();
cljs.core.bit_and = function() {
  var bit_and = null;
  var bit_and__2 = function(x, y) {
    return x & y;
  };
  var bit_and__3 = function() {
    var G__11788__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and, x & y, more);
    };
    var G__11788 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11789__i = 0, G__11789__a = new Array(arguments.length - 2);
        while (G__11789__i < G__11789__a.length) {
          G__11789__a[G__11789__i] = arguments[G__11789__i + 2];
          ++G__11789__i;
        }
        more = new cljs.core.IndexedSeq(G__11789__a, 0);
      }
      return G__11788__delegate.call(this, x, y, more);
    };
    G__11788.cljs$lang$maxFixedArity = 2;
    G__11788.cljs$lang$applyTo = function(arglist__11790) {
      var x = cljs.core.first(arglist__11790);
      arglist__11790 = cljs.core.next(arglist__11790);
      var y = cljs.core.first(arglist__11790);
      var more = cljs.core.rest(arglist__11790);
      return G__11788__delegate(x, y, more);
    };
    G__11788.cljs$core$IFn$_invoke$arity$variadic = G__11788__delegate;
    return G__11788;
  }();
  bit_and = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and__2.call(this, x, y);
      default:
        var G__11791 = null;
        if (arguments.length > 2) {
          var G__11792__i = 0, G__11792__a = new Array(arguments.length - 2);
          while (G__11792__i < G__11792__a.length) {
            G__11792__a[G__11792__i] = arguments[G__11792__i + 2];
            ++G__11792__i;
          }
          G__11791 = new cljs.core.IndexedSeq(G__11792__a, 0);
        }
        return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11791);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and.cljs$lang$maxFixedArity = 2;
  bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
  bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
  bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and;
}();
cljs.core.bit_or = function() {
  var bit_or = null;
  var bit_or__2 = function(x, y) {
    return x | y;
  };
  var bit_or__3 = function() {
    var G__11793__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or, x | y, more);
    };
    var G__11793 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11794__i = 0, G__11794__a = new Array(arguments.length - 2);
        while (G__11794__i < G__11794__a.length) {
          G__11794__a[G__11794__i] = arguments[G__11794__i + 2];
          ++G__11794__i;
        }
        more = new cljs.core.IndexedSeq(G__11794__a, 0);
      }
      return G__11793__delegate.call(this, x, y, more);
    };
    G__11793.cljs$lang$maxFixedArity = 2;
    G__11793.cljs$lang$applyTo = function(arglist__11795) {
      var x = cljs.core.first(arglist__11795);
      arglist__11795 = cljs.core.next(arglist__11795);
      var y = cljs.core.first(arglist__11795);
      var more = cljs.core.rest(arglist__11795);
      return G__11793__delegate(x, y, more);
    };
    G__11793.cljs$core$IFn$_invoke$arity$variadic = G__11793__delegate;
    return G__11793;
  }();
  bit_or = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_or__2.call(this, x, y);
      default:
        var G__11796 = null;
        if (arguments.length > 2) {
          var G__11797__i = 0, G__11797__a = new Array(arguments.length - 2);
          while (G__11797__i < G__11797__a.length) {
            G__11797__a[G__11797__i] = arguments[G__11797__i + 2];
            ++G__11797__i;
          }
          G__11796 = new cljs.core.IndexedSeq(G__11797__a, 0);
        }
        return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11796);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_or.cljs$lang$maxFixedArity = 2;
  bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
  bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
  bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_or;
}();
cljs.core.bit_and_not = function() {
  var bit_and_not = null;
  var bit_and_not__2 = function(x, y) {
    return x & ~y;
  };
  var bit_and_not__3 = function() {
    var G__11798__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not, x & ~y, more);
    };
    var G__11798 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11799__i = 0, G__11799__a = new Array(arguments.length - 2);
        while (G__11799__i < G__11799__a.length) {
          G__11799__a[G__11799__i] = arguments[G__11799__i + 2];
          ++G__11799__i;
        }
        more = new cljs.core.IndexedSeq(G__11799__a, 0);
      }
      return G__11798__delegate.call(this, x, y, more);
    };
    G__11798.cljs$lang$maxFixedArity = 2;
    G__11798.cljs$lang$applyTo = function(arglist__11800) {
      var x = cljs.core.first(arglist__11800);
      arglist__11800 = cljs.core.next(arglist__11800);
      var y = cljs.core.first(arglist__11800);
      var more = cljs.core.rest(arglist__11800);
      return G__11798__delegate(x, y, more);
    };
    G__11798.cljs$core$IFn$_invoke$arity$variadic = G__11798__delegate;
    return G__11798;
  }();
  bit_and_not = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and_not__2.call(this, x, y);
      default:
        var G__11801 = null;
        if (arguments.length > 2) {
          var G__11802__i = 0, G__11802__a = new Array(arguments.length - 2);
          while (G__11802__i < G__11802__a.length) {
            G__11802__a[G__11802__i] = arguments[G__11802__i + 2];
            ++G__11802__i;
          }
          G__11801 = new cljs.core.IndexedSeq(G__11802__a, 0);
        }
        return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11801);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and_not.cljs$lang$maxFixedArity = 2;
  bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
  bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
  bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and_not;
}();
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__11807__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__11808 = y;
            var G__11809 = cljs.core.first(more);
            var G__11810 = cljs.core.next(more);
            x = G__11808;
            y = G__11809;
            more = G__11810;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11807 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11811__i = 0, G__11811__a = new Array(arguments.length - 2);
        while (G__11811__i < G__11811__a.length) {
          G__11811__a[G__11811__i] = arguments[G__11811__i + 2];
          ++G__11811__i;
        }
        more = new cljs.core.IndexedSeq(G__11811__a, 0);
      }
      return G__11807__delegate.call(this, x, y, more);
    };
    G__11807.cljs$lang$maxFixedArity = 2;
    G__11807.cljs$lang$applyTo = function(arglist__11812) {
      var x = cljs.core.first(arglist__11812);
      arglist__11812 = cljs.core.next(arglist__11812);
      var y = cljs.core.first(arglist__11812);
      var more = cljs.core.rest(arglist__11812);
      return G__11807__delegate(x, y, more);
    };
    G__11807.cljs$core$IFn$_invoke$arity$variadic = G__11807__delegate;
    return G__11807;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        var G__11813 = null;
        if (arguments.length > 2) {
          var G__11814__i = 0, G__11814__a = new Array(arguments.length - 2);
          while (G__11814__i < G__11814__a.length) {
            G__11814__a[G__11814__i] = arguments[G__11814__i + 2];
            ++G__11814__i;
          }
          G__11813 = new cljs.core.IndexedSeq(G__11814__a, 0);
        }
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11813);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__11815 = n__$1 - 1;
      var G__11816 = cljs.core.next(xs);
      n__$1 = G__11815;
      xs = G__11816;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__11820 = x;
      return goog.string.buildString(G__11820);
    }
  };
  var str__2 = function() {
    var G__11821__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__11822 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__11823 = cljs.core.next(more);
          sb = G__11822;
          more = G__11823;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__11821 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__11824__i = 0, G__11824__a = new Array(arguments.length - 1);
        while (G__11824__i < G__11824__a.length) {
          G__11824__a[G__11824__i] = arguments[G__11824__i + 1];
          ++G__11824__i;
        }
        ys = new cljs.core.IndexedSeq(G__11824__a, 0);
      }
      return G__11821__delegate.call(this, x, ys);
    };
    G__11821.cljs$lang$maxFixedArity = 1;
    G__11821.cljs$lang$applyTo = function(arglist__11825) {
      var x = cljs.core.first(arglist__11825);
      var ys = cljs.core.rest(arglist__11825);
      return G__11821__delegate(x, ys);
    };
    G__11821.cljs$core$IFn$_invoke$arity$variadic = G__11821__delegate;
    return G__11821;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        var G__11826 = null;
        if (arguments.length > 1) {
          var G__11827__i = 0, G__11827__a = new Array(arguments.length - 1);
          while (G__11827__i < G__11827__a.length) {
            G__11827__a[G__11827__i] = arguments[G__11827__i + 1];
            ++G__11827__i;
          }
          G__11826 = new cljs.core.IndexedSeq(G__11827__a, 0);
        }
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11826);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__11828 = cljs.core.next(xs);
            var G__11829 = cljs.core.next(ys);
            xs = G__11828;
            ys = G__11829;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__11830 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__11831 = cljs.core.next(s);
        res = G__11830;
        s = G__11831;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__11836 = (h + (cljs.core.hash(function() {
        var G__11834 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11834) : cljs.core.key.call(null, G__11834);
      }()) ^ cljs.core.hash(function() {
        var G__11835 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11835) : cljs.core.val.call(null, G__11835);
      }()))) % 4503599627370496;
      var G__11837 = cljs.core.next(s);
      h = G__11836;
      s = G__11837;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__11838 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__11839 = cljs.core.next(s__$1);
      h = G__11838;
      s__$1 = G__11839;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__11850_11860 = cljs.core.seq(fn_map);
  var chunk__11851_11861 = null;
  var count__11852_11862 = 0;
  var i__11853_11863 = 0;
  while (true) {
    if (i__11853_11863 < count__11852_11862) {
      var vec__11854_11864 = chunk__11851_11861.cljs$core$IIndexed$_nth$arity$2(null, i__11853_11863);
      var key_name_11865 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11854_11864, 0, null);
      var f_11866 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11854_11864, 1, null);
      var str_name_11867 = function() {
        var G__11855 = key_name_11865;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11855) : cljs.core.name.call(null, G__11855);
      }();
      obj[str_name_11867] = f_11866;
      var G__11868 = seq__11850_11860;
      var G__11869 = chunk__11851_11861;
      var G__11870 = count__11852_11862;
      var G__11871 = i__11853_11863 + 1;
      seq__11850_11860 = G__11868;
      chunk__11851_11861 = G__11869;
      count__11852_11862 = G__11870;
      i__11853_11863 = G__11871;
      continue;
    } else {
      var temp__4126__auto___11872 = cljs.core.seq(seq__11850_11860);
      if (temp__4126__auto___11872) {
        var seq__11850_11873__$1 = temp__4126__auto___11872;
        if (cljs.core.chunked_seq_QMARK_(seq__11850_11873__$1)) {
          var c__9570__auto___11874 = function() {
            var G__11856 = seq__11850_11873__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__11856) : cljs.core.chunk_first.call(null, G__11856);
          }();
          var G__11875 = function() {
            var G__11857 = seq__11850_11873__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__11857) : cljs.core.chunk_rest.call(null, G__11857);
          }();
          var G__11876 = c__9570__auto___11874;
          var G__11877 = cljs.core.count(c__9570__auto___11874);
          var G__11878 = 0;
          seq__11850_11860 = G__11875;
          chunk__11851_11861 = G__11876;
          count__11852_11862 = G__11877;
          i__11853_11863 = G__11878;
          continue;
        } else {
          var vec__11858_11879 = cljs.core.first(seq__11850_11873__$1);
          var key_name_11880 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11858_11879, 0, null);
          var f_11881 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11858_11879, 1, null);
          var str_name_11882 = function() {
            var G__11859 = key_name_11880;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11859) : cljs.core.name.call(null, G__11859);
          }();
          obj[str_name_11882] = f_11881;
          var G__11883 = cljs.core.next(seq__11850_11873__$1);
          var G__11884 = null;
          var G__11885 = 0;
          var G__11886 = 0;
          seq__11850_11860 = G__11883;
          chunk__11851_11861 = G__11884;
          count__11852_11862 = G__11885;
          i__11853_11863 = G__11886;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__11888 = coll;
  if (G__11888) {
    var bit__9464__auto__ = G__11888.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__9464__auto__ || G__11888.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__11888.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__11888);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__11888);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__11889 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__11889;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__11890 = i - 1;
        var G__11891 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__11890;
        r = G__11891;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__11892__i = 0, G__11892__a = new Array(arguments.length - 0);
      while (G__11892__i < G__11892__a.length) {
        G__11892__a[G__11892__i] = arguments[G__11892__i + 0];
        ++G__11892__i;
      }
      xs = new cljs.core.IndexedSeq(G__11892__a, 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__11893) {
    var xs = cljs.core.seq(arglist__11893);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__8783__auto__ = coll == null;
    if (or__8783__auto__) {
      return or__8783__auto__;
    } else {
      var G__11897 = coll;
      if (G__11897) {
        var bit__9457__auto__ = G__11897.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__9457__auto__ || G__11897.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__11899 = x;
  if (G__11899) {
    var bit__9464__auto__ = G__11899.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__9464__auto__ || G__11899.cljs$core$IList$) {
      return true;
    } else {
      if (!G__11899.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__11899);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__11899);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__8771__auto__ = cljs.core.not(a.ns);
      if (and__8771__auto__) {
        return b.ns;
      } else {
        return and__8771__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__11906 = a.ns;
            var G__11907 = b.ns;
            return goog.array.defaultCompare(G__11906, G__11907);
          }();
          if (0 === nsc) {
            var G__11908 = a.name;
            var G__11909 = b.name;
            return goog.array.defaultCompare(G__11908, G__11909);
          } else {
            return nsc;
          }
        }
      } else {
        var G__11910 = a.name;
        var G__11911 = b.name;
        return goog.array.defaultCompare(G__11910, G__11911);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__9204__auto__ = self__._hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__11913 = null;
  var G__11913__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__11913__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__11913 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11913__2.call(this, self__, coll);
      case 3:
        return G__11913__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11913.cljs$core$IFn$_invoke$arity$2 = G__11913__2;
  G__11913.cljs$core$IFn$_invoke$arity$3 = G__11913__3;
  return G__11913;
}();
cljs.core.Keyword.prototype.apply = function(self__, args11912) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11912)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__11915 = x;
    if (G__11915) {
      var bit__9457__auto__ = G__11915.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__9457__auto__ || G__11915.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__11917 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11917) : cljs.core.name.call(null, G__11917);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__11918 = ls.sval();
        ls = G__11918;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__11920 = s;
    if (G__11920) {
      var bit__9457__auto__ = G__11920.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__9457__auto__ || G__11920.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__11921 = cljs.core.next(s__$1);
      s__$1 = G__11921;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_11922 = 0;
  var xs_11923 = cljs.core.seq(coll);
  while (true) {
    if (xs_11923) {
      ret[i_11922] = cljs.core.to_array(cljs.core.first(xs_11923));
      var G__11924 = i_11922 + 1;
      var G__11925 = cljs.core.next(xs_11923);
      i_11922 = G__11924;
      xs_11923 = G__11925;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__11928 = i + 1;
          var G__11929 = cljs.core.next(s__$1);
          i = G__11928;
          s__$1 = G__11929;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__9670__auto___11930 = size;
      var i_11931 = 0;
      while (true) {
        if (i_11931 < n__9670__auto___11930) {
          a[i_11931] = init_val_or_seq;
          var G__11932 = i_11931 + 1;
          i_11931 = G__11932;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__11935 = i + 1;
          var G__11936 = cljs.core.next(s__$1);
          i = G__11935;
          s__$1 = G__11936;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__9670__auto___11937 = size;
      var i_11938 = 0;
      while (true) {
        if (i_11938 < n__9670__auto___11937) {
          a[i_11938] = init_val_or_seq;
          var G__11939 = i_11938 + 1;
          i_11938 = G__11939;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__11942 = i + 1;
          var G__11943 = cljs.core.next(s__$1);
          i = G__11942;
          s__$1 = G__11943;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__9670__auto___11944 = size;
      var i_11945 = 0;
      while (true) {
        if (i_11945 < n__9670__auto___11944) {
          a[i_11945] = init_val_or_seq;
          var G__11946 = i_11945 + 1;
          i_11945 = G__11946;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__11949 = i + 1;
          var G__11950 = cljs.core.next(s__$1);
          i = G__11949;
          s__$1 = G__11950;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__9670__auto___11951 = size;
      var i_11952 = 0;
      while (true) {
        if (i_11952 < n__9670__auto___11951) {
          a[i_11952] = init_val_or_seq;
          var G__11953 = i_11952 + 1;
          i_11952 = G__11953;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__11954 = cljs.core.next(s__$1);
        var G__11955 = i - 1;
        var G__11956 = sum + 1;
        s__$1 = G__11954;
        i = G__11955;
        sum = G__11956;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__11976__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__11976 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__11977__i = 0, G__11977__a = new Array(arguments.length - 2);
        while (G__11977__i < G__11977__a.length) {
          G__11977__a[G__11977__i] = arguments[G__11977__i + 2];
          ++G__11977__i;
        }
        zs = new cljs.core.IndexedSeq(G__11977__a, 0);
      }
      return G__11976__delegate.call(this, x, y, zs);
    };
    G__11976.cljs$lang$maxFixedArity = 2;
    G__11976.cljs$lang$applyTo = function(arglist__11978) {
      var x = cljs.core.first(arglist__11978);
      arglist__11978 = cljs.core.next(arglist__11978);
      var y = cljs.core.first(arglist__11978);
      var zs = cljs.core.rest(arglist__11978);
      return G__11976__delegate(x, y, zs);
    };
    G__11976.cljs$core$IFn$_invoke$arity$variadic = G__11976__delegate;
    return G__11976;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        var G__11979 = null;
        if (arguments.length > 2) {
          var G__11980__i = 0, G__11980__a = new Array(arguments.length - 2);
          while (G__11980__i < G__11980__a.length) {
            G__11980__a[G__11980__i] = arguments[G__11980__i + 2];
            ++G__11980__i;
          }
          G__11979 = new cljs.core.IndexedSeq(G__11980__a, 0);
        }
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11979);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__11981__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__11981 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__11982__i = 0, G__11982__a = new Array(arguments.length - 4);
        while (G__11982__i < G__11982__a.length) {
          G__11982__a[G__11982__i] = arguments[G__11982__i + 4];
          ++G__11982__i;
        }
        more = new cljs.core.IndexedSeq(G__11982__a, 0);
      }
      return G__11981__delegate.call(this, a, b, c, d, more);
    };
    G__11981.cljs$lang$maxFixedArity = 4;
    G__11981.cljs$lang$applyTo = function(arglist__11983) {
      var a = cljs.core.first(arglist__11983);
      arglist__11983 = cljs.core.next(arglist__11983);
      var b = cljs.core.first(arglist__11983);
      arglist__11983 = cljs.core.next(arglist__11983);
      var c = cljs.core.first(arglist__11983);
      arglist__11983 = cljs.core.next(arglist__11983);
      var d = cljs.core.first(arglist__11983);
      var more = cljs.core.rest(arglist__11983);
      return G__11981__delegate(a, b, c, d, more);
    };
    G__11981.cljs$core$IFn$_invoke$arity$variadic = G__11981__delegate;
    return G__11981;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        var G__11984 = null;
        if (arguments.length > 4) {
          var G__11985__i = 0, G__11985__a = new Array(arguments.length - 4);
          while (G__11985__i < G__11985__a.length) {
            G__11985__a[G__11985__i] = arguments[G__11985__i + 4];
            ++G__11985__i;
          }
          G__11984 = new cljs.core.IndexedSeq(G__11985__a, 0);
        }
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__11984);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__11986__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__11987 = ntcoll;
          var G__11988 = cljs.core.first(vals);
          var G__11989 = cljs.core.next(vals);
          tcoll = G__11987;
          val = G__11988;
          vals = G__11989;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11986 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__11990__i = 0, G__11990__a = new Array(arguments.length - 2);
        while (G__11990__i < G__11990__a.length) {
          G__11990__a[G__11990__i] = arguments[G__11990__i + 2];
          ++G__11990__i;
        }
        vals = new cljs.core.IndexedSeq(G__11990__a, 0);
      }
      return G__11986__delegate.call(this, tcoll, val, vals);
    };
    G__11986.cljs$lang$maxFixedArity = 2;
    G__11986.cljs$lang$applyTo = function(arglist__11991) {
      var tcoll = cljs.core.first(arglist__11991);
      arglist__11991 = cljs.core.next(arglist__11991);
      var val = cljs.core.first(arglist__11991);
      var vals = cljs.core.rest(arglist__11991);
      return G__11986__delegate(tcoll, val, vals);
    };
    G__11986.cljs$core$IFn$_invoke$arity$variadic = G__11986__delegate;
    return G__11986;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        var G__11992 = null;
        if (arguments.length > 2) {
          var G__11993__i = 0, G__11993__a = new Array(arguments.length - 2);
          while (G__11993__i < G__11993__a.length) {
            G__11993__a[G__11993__i] = arguments[G__11993__i + 2];
            ++G__11993__i;
          }
          G__11992 = new cljs.core.IndexedSeq(G__11993__a, 0);
        }
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__11992);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__11994__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__11995 = ntcoll;
          var G__11996 = cljs.core.first(kvs);
          var G__11997 = cljs.core.second(kvs);
          var G__11998 = cljs.core.nnext(kvs);
          tcoll = G__11995;
          key = G__11996;
          val = G__11997;
          kvs = G__11998;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11994 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__11999__i = 0, G__11999__a = new Array(arguments.length - 3);
        while (G__11999__i < G__11999__a.length) {
          G__11999__a[G__11999__i] = arguments[G__11999__i + 3];
          ++G__11999__i;
        }
        kvs = new cljs.core.IndexedSeq(G__11999__a, 0);
      }
      return G__11994__delegate.call(this, tcoll, key, val, kvs);
    };
    G__11994.cljs$lang$maxFixedArity = 3;
    G__11994.cljs$lang$applyTo = function(arglist__12000) {
      var tcoll = cljs.core.first(arglist__12000);
      arglist__12000 = cljs.core.next(arglist__12000);
      var key = cljs.core.first(arglist__12000);
      arglist__12000 = cljs.core.next(arglist__12000);
      var val = cljs.core.first(arglist__12000);
      var kvs = cljs.core.rest(arglist__12000);
      return G__11994__delegate(tcoll, key, val, kvs);
    };
    G__11994.cljs$core$IFn$_invoke$arity$variadic = G__11994__delegate;
    return G__11994;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__12001 = null;
        if (arguments.length > 3) {
          var G__12002__i = 0, G__12002__a = new Array(arguments.length - 3);
          while (G__12002__i < G__12002__a.length) {
            G__12002__a[G__12002__i] = arguments[G__12002__i + 3];
            ++G__12002__i;
          }
          G__12001 = new cljs.core.IndexedSeq(G__12002__a, 0);
        }
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__12001);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__12003__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__12004 = ntcoll;
          var G__12005 = cljs.core.first(ks);
          var G__12006 = cljs.core.next(ks);
          tcoll = G__12004;
          key = G__12005;
          ks = G__12006;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__12003 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__12007__i = 0, G__12007__a = new Array(arguments.length - 2);
        while (G__12007__i < G__12007__a.length) {
          G__12007__a[G__12007__i] = arguments[G__12007__i + 2];
          ++G__12007__i;
        }
        ks = new cljs.core.IndexedSeq(G__12007__a, 0);
      }
      return G__12003__delegate.call(this, tcoll, key, ks);
    };
    G__12003.cljs$lang$maxFixedArity = 2;
    G__12003.cljs$lang$applyTo = function(arglist__12008) {
      var tcoll = cljs.core.first(arglist__12008);
      arglist__12008 = cljs.core.next(arglist__12008);
      var key = cljs.core.first(arglist__12008);
      var ks = cljs.core.rest(arglist__12008);
      return G__12003__delegate(tcoll, key, ks);
    };
    G__12003.cljs$core$IFn$_invoke$arity$variadic = G__12003__delegate;
    return G__12003;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__12009 = null;
        if (arguments.length > 2) {
          var G__12010__i = 0, G__12010__a = new Array(arguments.length - 2);
          while (G__12010__i < G__12010__a.length) {
            G__12010__a[G__12010__i] = arguments[G__12010__i + 2];
            ++G__12010__i;
          }
          G__12009 = new cljs.core.IndexedSeq(G__12010__a, 0);
        }
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__12009);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__12011__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__12012 = ntcoll;
          var G__12013 = cljs.core.first(vals);
          var G__12014 = cljs.core.next(vals);
          tcoll = G__12012;
          val = G__12013;
          vals = G__12014;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__12011 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__12015__i = 0, G__12015__a = new Array(arguments.length - 2);
        while (G__12015__i < G__12015__a.length) {
          G__12015__a[G__12015__i] = arguments[G__12015__i + 2];
          ++G__12015__i;
        }
        vals = new cljs.core.IndexedSeq(G__12015__a, 0);
      }
      return G__12011__delegate.call(this, tcoll, val, vals);
    };
    G__12011.cljs$lang$maxFixedArity = 2;
    G__12011.cljs$lang$applyTo = function(arglist__12016) {
      var tcoll = cljs.core.first(arglist__12016);
      arglist__12016 = cljs.core.next(arglist__12016);
      var val = cljs.core.first(arglist__12016);
      var vals = cljs.core.rest(arglist__12016);
      return G__12011__delegate(tcoll, val, vals);
    };
    G__12011.cljs$core$IFn$_invoke$arity$variadic = G__12011__delegate;
    return G__12011;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        var G__12017 = null;
        if (arguments.length > 2) {
          var G__12018__i = 0, G__12018__a = new Array(arguments.length - 2);
          while (G__12018__i < G__12018__a.length) {
            G__12018__a[G__12018__i] = arguments[G__12018__i + 2];
            ++G__12018__i;
          }
          G__12017 = new cljs.core.IndexedSeq(G__12018__a, 0);
        }
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__12017);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a9714 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a9714);
      } else {
        var G__12229 = a9714;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12229) : f.call(null, G__12229);
      }
    } else {
      var b9715 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a9714, b9715);
        } else {
          var G__12230 = a9714;
          var G__12231 = b9715;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12230, G__12231) : f.call(null, G__12230, G__12231);
        }
      } else {
        var c9716 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a9714, b9715, c9716);
          } else {
            var G__12232 = a9714;
            var G__12233 = b9715;
            var G__12234 = c9716;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12232, G__12233, G__12234) : f.call(null, G__12232, G__12233, G__12234);
          }
        } else {
          var d9717 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a9714, b9715, c9716, d9717);
            } else {
              var G__12235 = a9714;
              var G__12236 = b9715;
              var G__12237 = c9716;
              var G__12238 = d9717;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12235, G__12236, G__12237, G__12238) : f.call(null, G__12235, G__12236, G__12237, G__12238);
            }
          } else {
            var e9718 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a9714, b9715, c9716, d9717, e9718);
              } else {
                var G__12239 = a9714;
                var G__12240 = b9715;
                var G__12241 = c9716;
                var G__12242 = d9717;
                var G__12243 = e9718;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12239, G__12240, G__12241, G__12242, G__12243) : f.call(null, G__12239, G__12240, G__12241, G__12242, G__12243);
              }
            } else {
              var f9719 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a9714, b9715, c9716, d9717, e9718, f9719);
                } else {
                  var G__12244 = a9714;
                  var G__12245 = b9715;
                  var G__12246 = c9716;
                  var G__12247 = d9717;
                  var G__12248 = e9718;
                  var G__12249 = f9719;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__12244, G__12245, G__12246, G__12247, G__12248, G__12249) : f.call(null, G__12244, G__12245, G__12246, G__12247, G__12248, G__12249);
                }
              } else {
                var g9720 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a9714, b9715, c9716, d9717, e9718, f9719, g9720);
                  } else {
                    var G__12250 = a9714;
                    var G__12251 = b9715;
                    var G__12252 = c9716;
                    var G__12253 = d9717;
                    var G__12254 = e9718;
                    var G__12255 = f9719;
                    var G__12256 = g9720;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__12250, G__12251, G__12252, G__12253, G__12254, G__12255, G__12256) : f.call(null, G__12250, G__12251, G__12252, G__12253, G__12254, G__12255, G__12256);
                  }
                } else {
                  var h9721 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a9714, b9715, c9716, d9717, e9718, f9719, g9720, h9721);
                    } else {
                      var G__12257 = a9714;
                      var G__12258 = b9715;
                      var G__12259 = c9716;
                      var G__12260 = d9717;
                      var G__12261 = e9718;
                      var G__12262 = f9719;
                      var G__12263 = g9720;
                      var G__12264 = h9721;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__12257, G__12258, G__12259, G__12260, G__12261, G__12262, G__12263, G__12264) : f.call(null, G__12257, G__12258, G__12259, G__12260, G__12261, G__12262, G__12263, G__12264);
                    }
                  } else {
                    var i9722 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a9714, b9715, c9716, d9717, e9718, f9719, g9720, h9721, i9722);
                      } else {
                        var G__12265 = a9714;
                        var G__12266 = b9715;
                        var G__12267 = c9716;
                        var G__12268 = d9717;
                        var G__12269 = e9718;
                        var G__12270 = f9719;
                        var G__12271 = g9720;
                        var G__12272 = h9721;
                        var G__12273 = i9722;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__12265, G__12266, G__12267, G__12268, G__12269, G__12270, G__12271, G__12272, G__12273) : f.call(null, G__12265, G__12266, G__12267, G__12268, G__12269, G__12270, G__12271, G__12272, G__12273);
                      }
                    } else {
                      var j9723 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a9714, b9715, c9716, d9717, e9718, f9719, g9720, h9721, i9722, j9723);
                        } else {
                          var G__12274 = a9714;
                          var G__12275 = b9715;
                          var G__12276 = c9716;
                          var G__12277 = d9717;
                          var G__12278 = e9718;
                          var G__12279 = f9719;
                          var G__12280 = g9720;
                          var G__12281 = h9721;
                          var G__12282 = i9722;
                          var G__12283 = j9723;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__12274, G__12275, G__12276, G__12277, G__12278, G__12279, G__12280, G__12281, G__12282, G__12283) : f.call(null, G__12274, G__12275, G__12276, G__12277, G__12278, G__12279, G__12280, G__12281, G__12282, G__12283);
                        }
                      } else {
                        var k9724 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a9714, b9715, c9716, d9717, e9718, f9719, g9720, h9721, i9722, j9723, k9724);
                          } else {
                            var G__12284 = a9714;
                            var G__12285 = b9715;
                            var G__12286 = c9716;
                            var G__12287 = d9717;
                            var G__12288 = e9718;
                            var G__12289 = f9719;
                            var G__12290 = g9720;
                            var G__12291 = h9721;
                            var G__12292 = i9722;
                            var G__12293 = j9723;
                            var G__12294 = k9724;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__12284, G__12285, G__12286, G__12287, G__12288, G__12289, G__12290, G__12291, G__12292, G__12293, G__12294) : f.call(null, G__12284, G__12285, G__12286, G__12287, G__12288, G__12289, G__12290, G__12291, G__12292, G__12293, G__12294);
                          }
                        } else {
                          var l9725 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a9714, b9715, c9716, d9717, e9718, f9719, g9720, h9721, i9722, j9723, k9724, l9725);
                            } else {
                              var G__12295 = a9714;
                              var G__12296 = b9715;
                              var G__12297 = c9716;
                              var G__12298 = d9717;
                              var G__12299 = e9718;
                              var G__12300 = f9719;
                              var G__12301 = g9720;
                              var G__12302 = h9721;
                              var G__12303 = i9722;
                              var G__12304 = j9723;
                              var G__12305 = k9724;
                              var G__12306 = l9725;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__12295, G__12296, G__12297, G__12298, G__12299, G__12300, G__12301, G__12302, G__12303, G__12304, G__12305, G__12306) : f.call(null, G__12295, G__12296, G__12297, G__12298, G__12299, G__12300, G__12301, G__12302, G__12303, G__12304, G__12305, G__12306);
                            }
                          } else {
                            var m9726 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a9714, b9715, c9716, d9717, e9718, f9719, g9720, h9721, i9722, j9723, k9724, l9725, m9726);
                              } else {
                                var G__12307 = a9714;
                                var G__12308 = b9715;
                                var G__12309 = c9716;
                                var G__12310 = d9717;
                                var G__12311 = e9718;
                                var G__12312 = f9719;
                                var G__12313 = g9720;
                                var G__12314 = h9721;
                                var G__12315 = i9722;
                                var G__12316 = j9723;
                                var G__12317 = k9724;
                                var G__12318 = l9725;
                                var G__12319 = m9726;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__12307, G__12308, G__12309, G__12310, G__12311, G__12312, G__12313, G__12314, G__12315, G__12316, G__12317, G__12318, G__12319) : f.call(null, G__12307, G__12308, G__12309, G__12310, G__12311, G__12312, G__12313, G__12314, G__12315, G__12316, G__12317, G__12318, G__12319);
                              }
                            } else {
                              var n9727 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a9714, b9715, c9716, d9717, e9718, f9719, g9720, h9721, i9722, j9723, k9724, l9725, m9726, n9727);
                                } else {
                                  var G__12320 = a9714;
                                  var G__12321 = b9715;
                                  var G__12322 = c9716;
                                  var G__12323 = d9717;
                                  var G__12324 = e9718;
                                  var G__12325 = f9719;
                                  var G__12326 = g9720;
                                  var G__12327 = h9721;
                                  var G__12328 = i9722;
                                  var G__12329 = j9723;
                                  var G__12330 = k9724;
                                  var G__12331 = l9725;
                                  var G__12332 = m9726;
                                  var G__12333 = n9727;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__12320, G__12321, G__12322, G__12323, G__12324, G__12325, G__12326, G__12327, G__12328, G__12329, G__12330, G__12331, G__12332, G__12333) : f.call(null, G__12320, G__12321, G__12322, G__12323, G__12324, G__12325, G__12326, G__12327, G__12328, G__12329, G__12330, G__12331, G__12332, G__12333);
                                }
                              } else {
                                var o9728 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a9714, b9715, c9716, d9717, e9718, f9719, g9720, h9721, i9722, j9723, k9724, l9725, m9726, n9727, o9728);
                                  } else {
                                    var G__12334 = a9714;
                                    var G__12335 = b9715;
                                    var G__12336 = c9716;
                                    var G__12337 = d9717;
                                    var G__12338 = e9718;
                                    var G__12339 = f9719;
                                    var G__12340 = g9720;
                                    var G__12341 = h9721;
                                    var G__12342 = i9722;
                                    var G__12343 = j9723;
                                    var G__12344 = k9724;
                                    var G__12345 = l9725;
                                    var G__12346 = m9726;
                                    var G__12347 = n9727;
                                    var G__12348 = o9728;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__12334, G__12335, G__12336, G__12337, G__12338, G__12339, G__12340, G__12341, G__12342, G__12343, G__12344, G__12345, G__12346, G__12347, G__12348) : f.call(null, G__12334, G__12335, G__12336, G__12337, G__12338, G__12339, G__12340, G__12341, G__12342, G__12343, G__12344, G__12345, G__12346, G__12347, G__12348);
                                  }
                                } else {
                                  var p9729 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a9714, b9715, c9716, d9717, e9718, f9719, g9720, h9721, i9722, j9723, k9724, l9725, m9726, n9727, o9728, p9729);
                                    } else {
                                      var G__12349 = a9714;
                                      var G__12350 = b9715;
                                      var G__12351 = c9716;
                                      var G__12352 = d9717;
                                      var G__12353 = e9718;
                                      var G__12354 = f9719;
                                      var G__12355 = g9720;
                                      var G__12356 = h9721;
                                      var G__12357 = i9722;
                                      var G__12358 = j9723;
                                      var G__12359 = k9724;
                                      var G__12360 = l9725;
                                      var G__12361 = m9726;
                                      var G__12362 = n9727;
                                      var G__12363 = o9728;
                                      var G__12364 = p9729;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__12349, G__12350, G__12351, G__12352, G__12353, G__12354, G__12355, G__12356, G__12357, G__12358, G__12359, G__12360, G__12361, G__12362, G__12363, G__12364) : f.call(null, G__12349, G__12350, G__12351, G__12352, G__12353, G__12354, G__12355, G__12356, G__12357, G__12358, G__12359, G__12360, G__12361, G__12362, G__12363, G__12364);
                                    }
                                  } else {
                                    var q9730 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a9714, b9715, c9716, d9717, e9718, f9719, g9720, h9721, i9722, j9723, k9724, l9725, m9726, n9727, o9728, p9729, q9730);
                                      } else {
                                        var G__12365 = a9714;
                                        var G__12366 = b9715;
                                        var G__12367 = c9716;
                                        var G__12368 = d9717;
                                        var G__12369 = e9718;
                                        var G__12370 = f9719;
                                        var G__12371 = g9720;
                                        var G__12372 = h9721;
                                        var G__12373 = i9722;
                                        var G__12374 = j9723;
                                        var G__12375 = k9724;
                                        var G__12376 = l9725;
                                        var G__12377 = m9726;
                                        var G__12378 = n9727;
                                        var G__12379 = o9728;
                                        var G__12380 = p9729;
                                        var G__12381 = q9730;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__12365, G__12366, G__12367, G__12368, G__12369, G__12370, G__12371, G__12372, G__12373, G__12374, G__12375, G__12376, G__12377, G__12378, G__12379, G__12380, G__12381) : f.call(null, G__12365, G__12366, G__12367, G__12368, G__12369, G__12370, G__12371, G__12372, G__12373, G__12374, G__12375, G__12376, G__12377, G__12378, G__12379, G__12380, G__12381);
                                      }
                                    } else {
                                      var r9731 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a9714, b9715, c9716, d9717, e9718, f9719, g9720, h9721, i9722, j9723, k9724, l9725, m9726, n9727, o9728, p9729, q9730, r9731);
                                        } else {
                                          var G__12382 = a9714;
                                          var G__12383 = b9715;
                                          var G__12384 = c9716;
                                          var G__12385 = d9717;
                                          var G__12386 = e9718;
                                          var G__12387 = f9719;
                                          var G__12388 = g9720;
                                          var G__12389 = h9721;
                                          var G__12390 = i9722;
                                          var G__12391 = j9723;
                                          var G__12392 = k9724;
                                          var G__12393 = l9725;
                                          var G__12394 = m9726;
                                          var G__12395 = n9727;
                                          var G__12396 = o9728;
                                          var G__12397 = p9729;
                                          var G__12398 = q9730;
                                          var G__12399 = r9731;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__12382, G__12383, G__12384, G__12385, G__12386, G__12387, G__12388, G__12389, G__12390, G__12391, G__12392, G__12393, G__12394, G__12395, G__12396, G__12397, G__12398, G__12399) : f.call(null, G__12382, G__12383, G__12384, G__12385, G__12386, G__12387, G__12388, G__12389, G__12390, G__12391, G__12392, G__12393, G__12394, G__12395, G__12396, G__12397, G__12398, G__12399);
                                        }
                                      } else {
                                        var s9732 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a9714, b9715, c9716, d9717, e9718, f9719, g9720, h9721, i9722, j9723, k9724, l9725, m9726, n9727, o9728, p9729, q9730, r9731, s9732);
                                          } else {
                                            var G__12400 = a9714;
                                            var G__12401 = b9715;
                                            var G__12402 = c9716;
                                            var G__12403 = d9717;
                                            var G__12404 = e9718;
                                            var G__12405 = f9719;
                                            var G__12406 = g9720;
                                            var G__12407 = h9721;
                                            var G__12408 = i9722;
                                            var G__12409 = j9723;
                                            var G__12410 = k9724;
                                            var G__12411 = l9725;
                                            var G__12412 = m9726;
                                            var G__12413 = n9727;
                                            var G__12414 = o9728;
                                            var G__12415 = p9729;
                                            var G__12416 = q9730;
                                            var G__12417 = r9731;
                                            var G__12418 = s9732;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__12400, G__12401, G__12402, G__12403, G__12404, G__12405, G__12406, G__12407, G__12408, G__12409, G__12410, G__12411, G__12412, G__12413, G__12414, G__12415, G__12416, G__12417, G__12418) : f.call(null, G__12400, G__12401, G__12402, G__12403, G__12404, G__12405, G__12406, G__12407, G__12408, G__12409, G__12410, G__12411, G__12412, G__12413, G__12414, G__12415, G__12416, G__12417, 
                                            G__12418);
                                          }
                                        } else {
                                          var t9733 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a9714, b9715, c9716, d9717, e9718, f9719, g9720, h9721, i9722, j9723, k9724, l9725, m9726, n9727, o9728, p9729, q9730, r9731, s9732, t9733);
                                            } else {
                                              var G__12419 = a9714;
                                              var G__12420 = b9715;
                                              var G__12421 = c9716;
                                              var G__12422 = d9717;
                                              var G__12423 = e9718;
                                              var G__12424 = f9719;
                                              var G__12425 = g9720;
                                              var G__12426 = h9721;
                                              var G__12427 = i9722;
                                              var G__12428 = j9723;
                                              var G__12429 = k9724;
                                              var G__12430 = l9725;
                                              var G__12431 = m9726;
                                              var G__12432 = n9727;
                                              var G__12433 = o9728;
                                              var G__12434 = p9729;
                                              var G__12435 = q9730;
                                              var G__12436 = r9731;
                                              var G__12437 = s9732;
                                              var G__12438 = t9733;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__12419, G__12420, G__12421, G__12422, G__12423, G__12424, G__12425, G__12426, G__12427, G__12428, G__12429, G__12430, G__12431, G__12432, G__12433, G__12434, G__12435, G__12436, G__12437, G__12438) : f.call(null, G__12419, G__12420, G__12421, G__12422, G__12423, G__12424, G__12425, G__12426, G__12427, G__12428, G__12429, G__12430, G__12431, G__12432, G__12433, G__12434, G__12435, 
                                              G__12436, G__12437, G__12438);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__12439__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__12439 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__12440__i = 0, G__12440__a = new Array(arguments.length - 5);
        while (G__12440__i < G__12440__a.length) {
          G__12440__a[G__12440__i] = arguments[G__12440__i + 5];
          ++G__12440__i;
        }
        args = new cljs.core.IndexedSeq(G__12440__a, 0);
      }
      return G__12439__delegate.call(this, f, a, b, c, d, args);
    };
    G__12439.cljs$lang$maxFixedArity = 5;
    G__12439.cljs$lang$applyTo = function(arglist__12441) {
      var f = cljs.core.first(arglist__12441);
      arglist__12441 = cljs.core.next(arglist__12441);
      var a = cljs.core.first(arglist__12441);
      arglist__12441 = cljs.core.next(arglist__12441);
      var b = cljs.core.first(arglist__12441);
      arglist__12441 = cljs.core.next(arglist__12441);
      var c = cljs.core.first(arglist__12441);
      arglist__12441 = cljs.core.next(arglist__12441);
      var d = cljs.core.first(arglist__12441);
      var args = cljs.core.rest(arglist__12441);
      return G__12439__delegate(f, a, b, c, d, args);
    };
    G__12439.cljs$core$IFn$_invoke$arity$variadic = G__12439__delegate;
    return G__12439;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        var G__12442 = null;
        if (arguments.length > 5) {
          var G__12443__i = 0, G__12443__a = new Array(arguments.length - 5);
          while (G__12443__i < G__12443__a.length) {
            G__12443__a[G__12443__i] = arguments[G__12443__i + 5];
            ++G__12443__i;
          }
          G__12442 = new cljs.core.IndexedSeq(G__12443__a, 0);
        }
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__12442);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__12459 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12459) : f.call(null, G__12459);
    }());
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__12460 = cljs.core.meta(obj);
      var G__12461 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12460, G__12461) : f.call(null, G__12460, G__12461);
    }());
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__12462 = cljs.core.meta(obj);
      var G__12463 = a;
      var G__12464 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12462, G__12463, G__12464) : f.call(null, G__12462, G__12463, G__12464);
    }());
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__12465 = cljs.core.meta(obj);
      var G__12466 = a;
      var G__12467 = b;
      var G__12468 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12465, G__12466, G__12467, G__12468) : f.call(null, G__12465, G__12466, G__12467, G__12468);
    }());
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__12469 = cljs.core.meta(obj);
      var G__12470 = a;
      var G__12471 = b;
      var G__12472 = c;
      var G__12473 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12469, G__12470, G__12471, G__12472, G__12473) : f.call(null, G__12469, G__12470, G__12471, G__12472, G__12473);
    }());
  };
  var vary_meta__7 = function() {
    var G__12474__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__12474 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__12475__i = 0, G__12475__a = new Array(arguments.length - 6);
        while (G__12475__i < G__12475__a.length) {
          G__12475__a[G__12475__i] = arguments[G__12475__i + 6];
          ++G__12475__i;
        }
        args = new cljs.core.IndexedSeq(G__12475__a, 0);
      }
      return G__12474__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__12474.cljs$lang$maxFixedArity = 6;
    G__12474.cljs$lang$applyTo = function(arglist__12476) {
      var obj = cljs.core.first(arglist__12476);
      arglist__12476 = cljs.core.next(arglist__12476);
      var f = cljs.core.first(arglist__12476);
      arglist__12476 = cljs.core.next(arglist__12476);
      var a = cljs.core.first(arglist__12476);
      arglist__12476 = cljs.core.next(arglist__12476);
      var b = cljs.core.first(arglist__12476);
      arglist__12476 = cljs.core.next(arglist__12476);
      var c = cljs.core.first(arglist__12476);
      arglist__12476 = cljs.core.next(arglist__12476);
      var d = cljs.core.first(arglist__12476);
      var args = cljs.core.rest(arglist__12476);
      return G__12474__delegate(obj, f, a, b, c, d, args);
    };
    G__12474.cljs$core$IFn$_invoke$arity$variadic = G__12474__delegate;
    return G__12474;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__12477 = null;
        if (arguments.length > 6) {
          var G__12478__i = 0, G__12478__a = new Array(arguments.length - 6);
          while (G__12478__i < G__12478__a.length) {
            G__12478__a[G__12478__i] = arguments[G__12478__i + 6];
            ++G__12478__i;
          }
          G__12477 = new cljs.core.IndexedSeq(G__12478__a, 0);
        }
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__12477);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__12479__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__12479 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12480__i = 0, G__12480__a = new Array(arguments.length - 2);
        while (G__12480__i < G__12480__a.length) {
          G__12480__a[G__12480__i] = arguments[G__12480__i + 2];
          ++G__12480__i;
        }
        more = new cljs.core.IndexedSeq(G__12480__a, 0);
      }
      return G__12479__delegate.call(this, x, y, more);
    };
    G__12479.cljs$lang$maxFixedArity = 2;
    G__12479.cljs$lang$applyTo = function(arglist__12481) {
      var x = cljs.core.first(arglist__12481);
      arglist__12481 = cljs.core.next(arglist__12481);
      var y = cljs.core.first(arglist__12481);
      var more = cljs.core.rest(arglist__12481);
      return G__12479__delegate(x, y, more);
    };
    G__12479.cljs$core$IFn$_invoke$arity$variadic = G__12479__delegate;
    return G__12479;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        var G__12482 = null;
        if (arguments.length > 2) {
          var G__12483__i = 0, G__12483__a = new Array(arguments.length - 2);
          while (G__12483__i < G__12483__a.length) {
            G__12483__a[G__12483__i] = arguments[G__12483__i + 2];
            ++G__12483__i;
          }
          G__12482 = new cljs.core.IndexedSeq(G__12483__a, 0);
        }
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12482);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t12487 !== "undefined") {
  } else {
    cljs.core.t12487 = function(nil_iter, meta12488) {
      this.nil_iter = nil_iter;
      this.meta12488 = meta12488;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t12487.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t12487.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t12487.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t12487.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12489) {
      var self__ = this;
      var _12489__$1 = this;
      return self__.meta12488;
    };
    cljs.core.t12487.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12489, meta12488__$1) {
      var self__ = this;
      var _12489__$1 = this;
      return new cljs.core.t12487(self__.nil_iter, meta12488__$1);
    };
    cljs.core.t12487.cljs$lang$type = true;
    cljs.core.t12487.cljs$lang$ctorStr = "cljs.core/t12487";
    cljs.core.t12487.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
      return cljs.core._write(writer__9371__auto__, "cljs.core/t12487");
    };
    cljs.core.__GT_t12487 = function __GT_t12487(nil_iter__$1, meta12488) {
      return new cljs.core.t12487(nil_iter__$1, meta12488);
    };
  }
  return new cljs.core.t12487(nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__8771__auto__ = !(lt.stepper == null);
      if (and__8771__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__8771__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__12490 = lt;
        var G__12491 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__12490, G__12491) : self__.xform.call(null, G__12490, G__12491);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__12492 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__12492) : self__.xform.call(null, G__12492);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__12494 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12494) : xform.call(null, G__12494);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__12496 = cljs.core.next(iters__$1);
        iters__$1 = G__12496;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__9670__auto___12497 = self__.iters.length;
  var i_12498 = 0;
  while (true) {
    if (i_12498 < n__9670__auto___12497) {
      self__.nexts[i_12498] = self__.iters[i_12498].next();
      var G__12499 = i_12498 + 1;
      i_12498 = G__12499;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__8771__auto__ = !(lt.stepper == null);
      if (and__8771__auto__) {
        return this$.hasNext();
      } else {
        return and__8771__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__12495 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__12495) : self__.xform.call(null, G__12495);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__12504 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12504) : xform.call(null, G__12504);
    }(), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__12505_12509 = cljs.core.seq(colls);
  var chunk__12506_12510 = null;
  var count__12507_12511 = 0;
  var i__12508_12512 = 0;
  while (true) {
    if (i__12508_12512 < count__12507_12511) {
      var coll_12513 = chunk__12506_12510.cljs$core$IIndexed$_nth$arity$2(null, i__12508_12512);
      iters.push(cljs.core.iter(coll_12513));
      var G__12514 = seq__12505_12509;
      var G__12515 = chunk__12506_12510;
      var G__12516 = count__12507_12511;
      var G__12517 = i__12508_12512 + 1;
      seq__12505_12509 = G__12514;
      chunk__12506_12510 = G__12515;
      count__12507_12511 = G__12516;
      i__12508_12512 = G__12517;
      continue;
    } else {
      var temp__4126__auto___12518 = cljs.core.seq(seq__12505_12509);
      if (temp__4126__auto___12518) {
        var seq__12505_12519__$1 = temp__4126__auto___12518;
        if (cljs.core.chunked_seq_QMARK_(seq__12505_12519__$1)) {
          var c__9570__auto___12520 = cljs.core.chunk_first(seq__12505_12519__$1);
          var G__12521 = cljs.core.chunk_rest(seq__12505_12519__$1);
          var G__12522 = c__9570__auto___12520;
          var G__12523 = cljs.core.count(c__9570__auto___12520);
          var G__12524 = 0;
          seq__12505_12509 = G__12521;
          chunk__12506_12510 = G__12522;
          count__12507_12511 = G__12523;
          i__12508_12512 = G__12524;
          continue;
        } else {
          var coll_12525 = cljs.core.first(seq__12505_12519__$1);
          iters.push(cljs.core.iter(coll_12525));
          var G__12526 = cljs.core.next(seq__12505_12519__$1);
          var G__12527 = null;
          var G__12528 = 0;
          var G__12529 = 0;
          seq__12505_12509 = G__12526;
          chunk__12506_12510 = G__12527;
          count__12507_12511 = G__12528;
          i__12508_12512 = G__12529;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__8783__auto__ = cljs.core.seq(coll);
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__12530__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__12530 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__12531__i = 0, G__12531__a = new Array(arguments.length - 2);
        while (G__12531__i < G__12531__a.length) {
          G__12531__a[G__12531__i] = arguments[G__12531__i + 2];
          ++G__12531__i;
        }
        colls = new cljs.core.IndexedSeq(G__12531__a, 0);
      }
      return G__12530__delegate.call(this, xform, coll, colls);
    };
    G__12530.cljs$lang$maxFixedArity = 2;
    G__12530.cljs$lang$applyTo = function(arglist__12532) {
      var xform = cljs.core.first(arglist__12532);
      arglist__12532 = cljs.core.next(arglist__12532);
      var coll = cljs.core.first(arglist__12532);
      var colls = cljs.core.rest(arglist__12532);
      return G__12530__delegate(xform, coll, colls);
    };
    G__12530.cljs$core$IFn$_invoke$arity$variadic = G__12530__delegate;
    return G__12530;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        var G__12533 = null;
        if (arguments.length > 2) {
          var G__12534__i = 0, G__12534__a = new Array(arguments.length - 2);
          while (G__12534__i < G__12534__a.length) {
            G__12534__a[G__12534__i] = arguments[G__12534__i + 2];
            ++G__12534__i;
          }
          G__12533 = new cljs.core.IndexedSeq(G__12534__a, 0);
        }
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__12533);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__12536 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12536) : pred.call(null, G__12536);
      }())) {
        var G__12537 = pred;
        var G__12538 = cljs.core.next(coll);
        pred = G__12537;
        coll = G__12538;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__8783__auto__ = function() {
        var G__12542 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12542) : pred.call(null, G__12542);
      }();
      if (cljs.core.truth_(or__8783__auto__)) {
        return or__8783__auto__;
      } else {
        var G__12543 = pred;
        var G__12544 = cljs.core.next(coll);
        pred = G__12543;
        coll = G__12544;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__12551 = null;
    var G__12551__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__12551__1 = function(x) {
      return cljs.core.not(function() {
        var G__12548 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12548) : f.call(null, G__12548);
      }());
    };
    var G__12551__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__12549 = x;
        var G__12550 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12549, G__12550) : f.call(null, G__12549, G__12550);
      }());
    };
    var G__12551__3 = function() {
      var G__12552__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__12552 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__12553__i = 0, G__12553__a = new Array(arguments.length - 2);
          while (G__12553__i < G__12553__a.length) {
            G__12553__a[G__12553__i] = arguments[G__12553__i + 2];
            ++G__12553__i;
          }
          zs = new cljs.core.IndexedSeq(G__12553__a, 0);
        }
        return G__12552__delegate.call(this, x, y, zs);
      };
      G__12552.cljs$lang$maxFixedArity = 2;
      G__12552.cljs$lang$applyTo = function(arglist__12554) {
        var x = cljs.core.first(arglist__12554);
        arglist__12554 = cljs.core.next(arglist__12554);
        var y = cljs.core.first(arglist__12554);
        var zs = cljs.core.rest(arglist__12554);
        return G__12552__delegate(x, y, zs);
      };
      G__12552.cljs$core$IFn$_invoke$arity$variadic = G__12552__delegate;
      return G__12552;
    }();
    G__12551 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__12551__0.call(this);
        case 1:
          return G__12551__1.call(this, x);
        case 2:
          return G__12551__2.call(this, x, y);
        default:
          var G__12555 = null;
          if (arguments.length > 2) {
            var G__12556__i = 0, G__12556__a = new Array(arguments.length - 2);
            while (G__12556__i < G__12556__a.length) {
              G__12556__a[G__12556__i] = arguments[G__12556__i + 2];
              ++G__12556__i;
            }
            G__12555 = new cljs.core.IndexedSeq(G__12556__a, 0);
          }
          return G__12551__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12555);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12551.cljs$lang$maxFixedArity = 2;
    G__12551.cljs$lang$applyTo = G__12551__3.cljs$lang$applyTo;
    G__12551.cljs$core$IFn$_invoke$arity$0 = G__12551__0;
    G__12551.cljs$core$IFn$_invoke$arity$1 = G__12551__1;
    G__12551.cljs$core$IFn$_invoke$arity$2 = G__12551__2;
    G__12551.cljs$core$IFn$_invoke$arity$variadic = G__12551__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__12551;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__12557__delegate = function(args) {
      return x;
    };
    var G__12557 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__12558__i = 0, G__12558__a = new Array(arguments.length - 0);
        while (G__12558__i < G__12558__a.length) {
          G__12558__a[G__12558__i] = arguments[G__12558__i + 0];
          ++G__12558__i;
        }
        args = new cljs.core.IndexedSeq(G__12558__a, 0);
      }
      return G__12557__delegate.call(this, args);
    };
    G__12557.cljs$lang$maxFixedArity = 0;
    G__12557.cljs$lang$applyTo = function(arglist__12559) {
      var args = cljs.core.seq(arglist__12559);
      return G__12557__delegate(args);
    };
    G__12557.cljs$core$IFn$_invoke$arity$variadic = G__12557__delegate;
    return G__12557;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__12614 = null;
      var G__12614__0 = function() {
        var G__12587 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12587) : f.call(null, G__12587);
      };
      var G__12614__1 = function(x) {
        var G__12588 = function() {
          var G__12589 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12589) : g.call(null, G__12589);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12588) : f.call(null, G__12588);
      };
      var G__12614__2 = function(x, y) {
        var G__12590 = function() {
          var G__12591 = x;
          var G__12592 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__12591, G__12592) : g.call(null, G__12591, G__12592);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12590) : f.call(null, G__12590);
      };
      var G__12614__3 = function(x, y, z) {
        var G__12593 = function() {
          var G__12594 = x;
          var G__12595 = y;
          var G__12596 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__12594, G__12595, G__12596) : g.call(null, G__12594, G__12595, G__12596);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12593) : f.call(null, G__12593);
      };
      var G__12614__4 = function() {
        var G__12615__delegate = function(x, y, z, args) {
          var G__12597 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12597) : f.call(null, G__12597);
        };
        var G__12615 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12616__i = 0, G__12616__a = new Array(arguments.length - 3);
            while (G__12616__i < G__12616__a.length) {
              G__12616__a[G__12616__i] = arguments[G__12616__i + 3];
              ++G__12616__i;
            }
            args = new cljs.core.IndexedSeq(G__12616__a, 0);
          }
          return G__12615__delegate.call(this, x, y, z, args);
        };
        G__12615.cljs$lang$maxFixedArity = 3;
        G__12615.cljs$lang$applyTo = function(arglist__12617) {
          var x = cljs.core.first(arglist__12617);
          arglist__12617 = cljs.core.next(arglist__12617);
          var y = cljs.core.first(arglist__12617);
          arglist__12617 = cljs.core.next(arglist__12617);
          var z = cljs.core.first(arglist__12617);
          var args = cljs.core.rest(arglist__12617);
          return G__12615__delegate(x, y, z, args);
        };
        G__12615.cljs$core$IFn$_invoke$arity$variadic = G__12615__delegate;
        return G__12615;
      }();
      G__12614 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12614__0.call(this);
          case 1:
            return G__12614__1.call(this, x);
          case 2:
            return G__12614__2.call(this, x, y);
          case 3:
            return G__12614__3.call(this, x, y, z);
          default:
            var G__12618 = null;
            if (arguments.length > 3) {
              var G__12619__i = 0, G__12619__a = new Array(arguments.length - 3);
              while (G__12619__i < G__12619__a.length) {
                G__12619__a[G__12619__i] = arguments[G__12619__i + 3];
                ++G__12619__i;
              }
              G__12618 = new cljs.core.IndexedSeq(G__12619__a, 0);
            }
            return G__12614__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12618);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12614.cljs$lang$maxFixedArity = 3;
      G__12614.cljs$lang$applyTo = G__12614__4.cljs$lang$applyTo;
      G__12614.cljs$core$IFn$_invoke$arity$0 = G__12614__0;
      G__12614.cljs$core$IFn$_invoke$arity$1 = G__12614__1;
      G__12614.cljs$core$IFn$_invoke$arity$2 = G__12614__2;
      G__12614.cljs$core$IFn$_invoke$arity$3 = G__12614__3;
      G__12614.cljs$core$IFn$_invoke$arity$variadic = G__12614__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12614;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__12620 = null;
      var G__12620__0 = function() {
        var G__12598 = function() {
          var G__12599 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12599) : g.call(null, G__12599);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12598) : f.call(null, G__12598);
      };
      var G__12620__1 = function(x) {
        var G__12600 = function() {
          var G__12601 = function() {
            var G__12602 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__12602) : h.call(null, G__12602);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12601) : g.call(null, G__12601);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12600) : f.call(null, G__12600);
      };
      var G__12620__2 = function(x, y) {
        var G__12603 = function() {
          var G__12604 = function() {
            var G__12605 = x;
            var G__12606 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__12605, G__12606) : h.call(null, G__12605, G__12606);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12604) : g.call(null, G__12604);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12603) : f.call(null, G__12603);
      };
      var G__12620__3 = function(x, y, z) {
        var G__12607 = function() {
          var G__12608 = function() {
            var G__12609 = x;
            var G__12610 = y;
            var G__12611 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__12609, G__12610, G__12611) : h.call(null, G__12609, G__12610, G__12611);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12608) : g.call(null, G__12608);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12607) : f.call(null, G__12607);
      };
      var G__12620__4 = function() {
        var G__12621__delegate = function(x, y, z, args) {
          var G__12612 = function() {
            var G__12613 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12613) : g.call(null, G__12613);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12612) : f.call(null, G__12612);
        };
        var G__12621 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12622__i = 0, G__12622__a = new Array(arguments.length - 3);
            while (G__12622__i < G__12622__a.length) {
              G__12622__a[G__12622__i] = arguments[G__12622__i + 3];
              ++G__12622__i;
            }
            args = new cljs.core.IndexedSeq(G__12622__a, 0);
          }
          return G__12621__delegate.call(this, x, y, z, args);
        };
        G__12621.cljs$lang$maxFixedArity = 3;
        G__12621.cljs$lang$applyTo = function(arglist__12623) {
          var x = cljs.core.first(arglist__12623);
          arglist__12623 = cljs.core.next(arglist__12623);
          var y = cljs.core.first(arglist__12623);
          arglist__12623 = cljs.core.next(arglist__12623);
          var z = cljs.core.first(arglist__12623);
          var args = cljs.core.rest(arglist__12623);
          return G__12621__delegate(x, y, z, args);
        };
        G__12621.cljs$core$IFn$_invoke$arity$variadic = G__12621__delegate;
        return G__12621;
      }();
      G__12620 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12620__0.call(this);
          case 1:
            return G__12620__1.call(this, x);
          case 2:
            return G__12620__2.call(this, x, y);
          case 3:
            return G__12620__3.call(this, x, y, z);
          default:
            var G__12624 = null;
            if (arguments.length > 3) {
              var G__12625__i = 0, G__12625__a = new Array(arguments.length - 3);
              while (G__12625__i < G__12625__a.length) {
                G__12625__a[G__12625__i] = arguments[G__12625__i + 3];
                ++G__12625__i;
              }
              G__12624 = new cljs.core.IndexedSeq(G__12625__a, 0);
            }
            return G__12620__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12624);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12620.cljs$lang$maxFixedArity = 3;
      G__12620.cljs$lang$applyTo = G__12620__4.cljs$lang$applyTo;
      G__12620.cljs$core$IFn$_invoke$arity$0 = G__12620__0;
      G__12620.cljs$core$IFn$_invoke$arity$1 = G__12620__1;
      G__12620.cljs$core$IFn$_invoke$arity$2 = G__12620__2;
      G__12620.cljs$core$IFn$_invoke$arity$3 = G__12620__3;
      G__12620.cljs$core$IFn$_invoke$arity$variadic = G__12620__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12620;
    }();
  };
  var comp__4 = function() {
    var G__12626__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__12627__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__12628 = cljs.core.first(fs__$2).call(null, ret);
                var G__12629 = cljs.core.next(fs__$2);
                ret = G__12628;
                fs__$2 = G__12629;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__12627 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__12630__i = 0, G__12630__a = new Array(arguments.length - 0);
              while (G__12630__i < G__12630__a.length) {
                G__12630__a[G__12630__i] = arguments[G__12630__i + 0];
                ++G__12630__i;
              }
              args = new cljs.core.IndexedSeq(G__12630__a, 0);
            }
            return G__12627__delegate.call(this, args);
          };
          G__12627.cljs$lang$maxFixedArity = 0;
          G__12627.cljs$lang$applyTo = function(arglist__12631) {
            var args = cljs.core.seq(arglist__12631);
            return G__12627__delegate(args);
          };
          G__12627.cljs$core$IFn$_invoke$arity$variadic = G__12627__delegate;
          return G__12627;
        }();
      }(fs__$1);
    };
    var G__12626 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__12632__i = 0, G__12632__a = new Array(arguments.length - 3);
        while (G__12632__i < G__12632__a.length) {
          G__12632__a[G__12632__i] = arguments[G__12632__i + 3];
          ++G__12632__i;
        }
        fs = new cljs.core.IndexedSeq(G__12632__a, 0);
      }
      return G__12626__delegate.call(this, f1, f2, f3, fs);
    };
    G__12626.cljs$lang$maxFixedArity = 3;
    G__12626.cljs$lang$applyTo = function(arglist__12633) {
      var f1 = cljs.core.first(arglist__12633);
      arglist__12633 = cljs.core.next(arglist__12633);
      var f2 = cljs.core.first(arglist__12633);
      arglist__12633 = cljs.core.next(arglist__12633);
      var f3 = cljs.core.first(arglist__12633);
      var fs = cljs.core.rest(arglist__12633);
      return G__12626__delegate(f1, f2, f3, fs);
    };
    G__12626.cljs$core$IFn$_invoke$arity$variadic = G__12626__delegate;
    return G__12626;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        var G__12634 = null;
        if (arguments.length > 3) {
          var G__12635__i = 0, G__12635__a = new Array(arguments.length - 3);
          while (G__12635__i < G__12635__a.length) {
            G__12635__a[G__12635__i] = arguments[G__12635__i + 3];
            ++G__12635__i;
          }
          G__12634 = new cljs.core.IndexedSeq(G__12635__a, 0);
        }
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__12634);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__12720 = null;
      var G__12720__0 = function() {
        var G__12678 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12678) : f.call(null, G__12678);
      };
      var G__12720__1 = function(x) {
        var G__12679 = arg1;
        var G__12680 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12679, G__12680) : f.call(null, G__12679, G__12680);
      };
      var G__12720__2 = function(x, y) {
        var G__12681 = arg1;
        var G__12682 = x;
        var G__12683 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12681, G__12682, G__12683) : f.call(null, G__12681, G__12682, G__12683);
      };
      var G__12720__3 = function(x, y, z) {
        var G__12684 = arg1;
        var G__12685 = x;
        var G__12686 = y;
        var G__12687 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12684, G__12685, G__12686, G__12687) : f.call(null, G__12684, G__12685, G__12686, G__12687);
      };
      var G__12720__4 = function() {
        var G__12721__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__12721 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12722__i = 0, G__12722__a = new Array(arguments.length - 3);
            while (G__12722__i < G__12722__a.length) {
              G__12722__a[G__12722__i] = arguments[G__12722__i + 3];
              ++G__12722__i;
            }
            args = new cljs.core.IndexedSeq(G__12722__a, 0);
          }
          return G__12721__delegate.call(this, x, y, z, args);
        };
        G__12721.cljs$lang$maxFixedArity = 3;
        G__12721.cljs$lang$applyTo = function(arglist__12723) {
          var x = cljs.core.first(arglist__12723);
          arglist__12723 = cljs.core.next(arglist__12723);
          var y = cljs.core.first(arglist__12723);
          arglist__12723 = cljs.core.next(arglist__12723);
          var z = cljs.core.first(arglist__12723);
          var args = cljs.core.rest(arglist__12723);
          return G__12721__delegate(x, y, z, args);
        };
        G__12721.cljs$core$IFn$_invoke$arity$variadic = G__12721__delegate;
        return G__12721;
      }();
      G__12720 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12720__0.call(this);
          case 1:
            return G__12720__1.call(this, x);
          case 2:
            return G__12720__2.call(this, x, y);
          case 3:
            return G__12720__3.call(this, x, y, z);
          default:
            var G__12724 = null;
            if (arguments.length > 3) {
              var G__12725__i = 0, G__12725__a = new Array(arguments.length - 3);
              while (G__12725__i < G__12725__a.length) {
                G__12725__a[G__12725__i] = arguments[G__12725__i + 3];
                ++G__12725__i;
              }
              G__12724 = new cljs.core.IndexedSeq(G__12725__a, 0);
            }
            return G__12720__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12724);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12720.cljs$lang$maxFixedArity = 3;
      G__12720.cljs$lang$applyTo = G__12720__4.cljs$lang$applyTo;
      G__12720.cljs$core$IFn$_invoke$arity$0 = G__12720__0;
      G__12720.cljs$core$IFn$_invoke$arity$1 = G__12720__1;
      G__12720.cljs$core$IFn$_invoke$arity$2 = G__12720__2;
      G__12720.cljs$core$IFn$_invoke$arity$3 = G__12720__3;
      G__12720.cljs$core$IFn$_invoke$arity$variadic = G__12720__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12720;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__12726 = null;
      var G__12726__0 = function() {
        var G__12688 = arg1;
        var G__12689 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12688, G__12689) : f.call(null, G__12688, G__12689);
      };
      var G__12726__1 = function(x) {
        var G__12690 = arg1;
        var G__12691 = arg2;
        var G__12692 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12690, G__12691, G__12692) : f.call(null, G__12690, G__12691, G__12692);
      };
      var G__12726__2 = function(x, y) {
        var G__12693 = arg1;
        var G__12694 = arg2;
        var G__12695 = x;
        var G__12696 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12693, G__12694, G__12695, G__12696) : f.call(null, G__12693, G__12694, G__12695, G__12696);
      };
      var G__12726__3 = function(x, y, z) {
        var G__12697 = arg1;
        var G__12698 = arg2;
        var G__12699 = x;
        var G__12700 = y;
        var G__12701 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12697, G__12698, G__12699, G__12700, G__12701) : f.call(null, G__12697, G__12698, G__12699, G__12700, G__12701);
      };
      var G__12726__4 = function() {
        var G__12727__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__12727 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12728__i = 0, G__12728__a = new Array(arguments.length - 3);
            while (G__12728__i < G__12728__a.length) {
              G__12728__a[G__12728__i] = arguments[G__12728__i + 3];
              ++G__12728__i;
            }
            args = new cljs.core.IndexedSeq(G__12728__a, 0);
          }
          return G__12727__delegate.call(this, x, y, z, args);
        };
        G__12727.cljs$lang$maxFixedArity = 3;
        G__12727.cljs$lang$applyTo = function(arglist__12729) {
          var x = cljs.core.first(arglist__12729);
          arglist__12729 = cljs.core.next(arglist__12729);
          var y = cljs.core.first(arglist__12729);
          arglist__12729 = cljs.core.next(arglist__12729);
          var z = cljs.core.first(arglist__12729);
          var args = cljs.core.rest(arglist__12729);
          return G__12727__delegate(x, y, z, args);
        };
        G__12727.cljs$core$IFn$_invoke$arity$variadic = G__12727__delegate;
        return G__12727;
      }();
      G__12726 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12726__0.call(this);
          case 1:
            return G__12726__1.call(this, x);
          case 2:
            return G__12726__2.call(this, x, y);
          case 3:
            return G__12726__3.call(this, x, y, z);
          default:
            var G__12730 = null;
            if (arguments.length > 3) {
              var G__12731__i = 0, G__12731__a = new Array(arguments.length - 3);
              while (G__12731__i < G__12731__a.length) {
                G__12731__a[G__12731__i] = arguments[G__12731__i + 3];
                ++G__12731__i;
              }
              G__12730 = new cljs.core.IndexedSeq(G__12731__a, 0);
            }
            return G__12726__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12730);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12726.cljs$lang$maxFixedArity = 3;
      G__12726.cljs$lang$applyTo = G__12726__4.cljs$lang$applyTo;
      G__12726.cljs$core$IFn$_invoke$arity$0 = G__12726__0;
      G__12726.cljs$core$IFn$_invoke$arity$1 = G__12726__1;
      G__12726.cljs$core$IFn$_invoke$arity$2 = G__12726__2;
      G__12726.cljs$core$IFn$_invoke$arity$3 = G__12726__3;
      G__12726.cljs$core$IFn$_invoke$arity$variadic = G__12726__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12726;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__12732 = null;
      var G__12732__0 = function() {
        var G__12702 = arg1;
        var G__12703 = arg2;
        var G__12704 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12702, G__12703, G__12704) : f.call(null, G__12702, G__12703, G__12704);
      };
      var G__12732__1 = function(x) {
        var G__12705 = arg1;
        var G__12706 = arg2;
        var G__12707 = arg3;
        var G__12708 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12705, G__12706, G__12707, G__12708) : f.call(null, G__12705, G__12706, G__12707, G__12708);
      };
      var G__12732__2 = function(x, y) {
        var G__12709 = arg1;
        var G__12710 = arg2;
        var G__12711 = arg3;
        var G__12712 = x;
        var G__12713 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12709, G__12710, G__12711, G__12712, G__12713) : f.call(null, G__12709, G__12710, G__12711, G__12712, G__12713);
      };
      var G__12732__3 = function(x, y, z) {
        var G__12714 = arg1;
        var G__12715 = arg2;
        var G__12716 = arg3;
        var G__12717 = x;
        var G__12718 = y;
        var G__12719 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__12714, G__12715, G__12716, G__12717, G__12718, G__12719) : f.call(null, G__12714, G__12715, G__12716, G__12717, G__12718, G__12719);
      };
      var G__12732__4 = function() {
        var G__12733__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__12733 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12734__i = 0, G__12734__a = new Array(arguments.length - 3);
            while (G__12734__i < G__12734__a.length) {
              G__12734__a[G__12734__i] = arguments[G__12734__i + 3];
              ++G__12734__i;
            }
            args = new cljs.core.IndexedSeq(G__12734__a, 0);
          }
          return G__12733__delegate.call(this, x, y, z, args);
        };
        G__12733.cljs$lang$maxFixedArity = 3;
        G__12733.cljs$lang$applyTo = function(arglist__12735) {
          var x = cljs.core.first(arglist__12735);
          arglist__12735 = cljs.core.next(arglist__12735);
          var y = cljs.core.first(arglist__12735);
          arglist__12735 = cljs.core.next(arglist__12735);
          var z = cljs.core.first(arglist__12735);
          var args = cljs.core.rest(arglist__12735);
          return G__12733__delegate(x, y, z, args);
        };
        G__12733.cljs$core$IFn$_invoke$arity$variadic = G__12733__delegate;
        return G__12733;
      }();
      G__12732 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12732__0.call(this);
          case 1:
            return G__12732__1.call(this, x);
          case 2:
            return G__12732__2.call(this, x, y);
          case 3:
            return G__12732__3.call(this, x, y, z);
          default:
            var G__12736 = null;
            if (arguments.length > 3) {
              var G__12737__i = 0, G__12737__a = new Array(arguments.length - 3);
              while (G__12737__i < G__12737__a.length) {
                G__12737__a[G__12737__i] = arguments[G__12737__i + 3];
                ++G__12737__i;
              }
              G__12736 = new cljs.core.IndexedSeq(G__12737__a, 0);
            }
            return G__12732__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12736);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12732.cljs$lang$maxFixedArity = 3;
      G__12732.cljs$lang$applyTo = G__12732__4.cljs$lang$applyTo;
      G__12732.cljs$core$IFn$_invoke$arity$0 = G__12732__0;
      G__12732.cljs$core$IFn$_invoke$arity$1 = G__12732__1;
      G__12732.cljs$core$IFn$_invoke$arity$2 = G__12732__2;
      G__12732.cljs$core$IFn$_invoke$arity$3 = G__12732__3;
      G__12732.cljs$core$IFn$_invoke$arity$variadic = G__12732__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12732;
    }();
  };
  var partial__5 = function() {
    var G__12738__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__12739__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__12739 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__12740__i = 0, G__12740__a = new Array(arguments.length - 0);
            while (G__12740__i < G__12740__a.length) {
              G__12740__a[G__12740__i] = arguments[G__12740__i + 0];
              ++G__12740__i;
            }
            args = new cljs.core.IndexedSeq(G__12740__a, 0);
          }
          return G__12739__delegate.call(this, args);
        };
        G__12739.cljs$lang$maxFixedArity = 0;
        G__12739.cljs$lang$applyTo = function(arglist__12741) {
          var args = cljs.core.seq(arglist__12741);
          return G__12739__delegate(args);
        };
        G__12739.cljs$core$IFn$_invoke$arity$variadic = G__12739__delegate;
        return G__12739;
      }();
    };
    var G__12738 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__12742__i = 0, G__12742__a = new Array(arguments.length - 4);
        while (G__12742__i < G__12742__a.length) {
          G__12742__a[G__12742__i] = arguments[G__12742__i + 4];
          ++G__12742__i;
        }
        more = new cljs.core.IndexedSeq(G__12742__a, 0);
      }
      return G__12738__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__12738.cljs$lang$maxFixedArity = 4;
    G__12738.cljs$lang$applyTo = function(arglist__12743) {
      var f = cljs.core.first(arglist__12743);
      arglist__12743 = cljs.core.next(arglist__12743);
      var arg1 = cljs.core.first(arglist__12743);
      arglist__12743 = cljs.core.next(arglist__12743);
      var arg2 = cljs.core.first(arglist__12743);
      arglist__12743 = cljs.core.next(arglist__12743);
      var arg3 = cljs.core.first(arglist__12743);
      var more = cljs.core.rest(arglist__12743);
      return G__12738__delegate(f, arg1, arg2, arg3, more);
    };
    G__12738.cljs$core$IFn$_invoke$arity$variadic = G__12738__delegate;
    return G__12738;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__12744 = null;
        if (arguments.length > 4) {
          var G__12745__i = 0, G__12745__a = new Array(arguments.length - 4);
          while (G__12745__i < G__12745__a.length) {
            G__12745__a[G__12745__i] = arguments[G__12745__i + 4];
            ++G__12745__i;
          }
          G__12744 = new cljs.core.IndexedSeq(G__12745__a, 0);
        }
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__12744);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__12778 = null;
      var G__12778__1 = function(a) {
        var G__12762 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12762) : f.call(null, G__12762);
      };
      var G__12778__2 = function(a, b) {
        var G__12763 = a == null ? x : a;
        var G__12764 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12763, G__12764) : f.call(null, G__12763, G__12764);
      };
      var G__12778__3 = function(a, b, c) {
        var G__12765 = a == null ? x : a;
        var G__12766 = b;
        var G__12767 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12765, G__12766, G__12767) : f.call(null, G__12765, G__12766, G__12767);
      };
      var G__12778__4 = function() {
        var G__12779__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__12779 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__12780__i = 0, G__12780__a = new Array(arguments.length - 3);
            while (G__12780__i < G__12780__a.length) {
              G__12780__a[G__12780__i] = arguments[G__12780__i + 3];
              ++G__12780__i;
            }
            ds = new cljs.core.IndexedSeq(G__12780__a, 0);
          }
          return G__12779__delegate.call(this, a, b, c, ds);
        };
        G__12779.cljs$lang$maxFixedArity = 3;
        G__12779.cljs$lang$applyTo = function(arglist__12781) {
          var a = cljs.core.first(arglist__12781);
          arglist__12781 = cljs.core.next(arglist__12781);
          var b = cljs.core.first(arglist__12781);
          arglist__12781 = cljs.core.next(arglist__12781);
          var c = cljs.core.first(arglist__12781);
          var ds = cljs.core.rest(arglist__12781);
          return G__12779__delegate(a, b, c, ds);
        };
        G__12779.cljs$core$IFn$_invoke$arity$variadic = G__12779__delegate;
        return G__12779;
      }();
      G__12778 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__12778__1.call(this, a);
          case 2:
            return G__12778__2.call(this, a, b);
          case 3:
            return G__12778__3.call(this, a, b, c);
          default:
            var G__12782 = null;
            if (arguments.length > 3) {
              var G__12783__i = 0, G__12783__a = new Array(arguments.length - 3);
              while (G__12783__i < G__12783__a.length) {
                G__12783__a[G__12783__i] = arguments[G__12783__i + 3];
                ++G__12783__i;
              }
              G__12782 = new cljs.core.IndexedSeq(G__12783__a, 0);
            }
            return G__12778__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__12782);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12778.cljs$lang$maxFixedArity = 3;
      G__12778.cljs$lang$applyTo = G__12778__4.cljs$lang$applyTo;
      G__12778.cljs$core$IFn$_invoke$arity$1 = G__12778__1;
      G__12778.cljs$core$IFn$_invoke$arity$2 = G__12778__2;
      G__12778.cljs$core$IFn$_invoke$arity$3 = G__12778__3;
      G__12778.cljs$core$IFn$_invoke$arity$variadic = G__12778__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12778;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__12784 = null;
      var G__12784__2 = function(a, b) {
        var G__12768 = a == null ? x : a;
        var G__12769 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12768, G__12769) : f.call(null, G__12768, G__12769);
      };
      var G__12784__3 = function(a, b, c) {
        var G__12770 = a == null ? x : a;
        var G__12771 = b == null ? y : b;
        var G__12772 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12770, G__12771, G__12772) : f.call(null, G__12770, G__12771, G__12772);
      };
      var G__12784__4 = function() {
        var G__12785__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__12785 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__12786__i = 0, G__12786__a = new Array(arguments.length - 3);
            while (G__12786__i < G__12786__a.length) {
              G__12786__a[G__12786__i] = arguments[G__12786__i + 3];
              ++G__12786__i;
            }
            ds = new cljs.core.IndexedSeq(G__12786__a, 0);
          }
          return G__12785__delegate.call(this, a, b, c, ds);
        };
        G__12785.cljs$lang$maxFixedArity = 3;
        G__12785.cljs$lang$applyTo = function(arglist__12787) {
          var a = cljs.core.first(arglist__12787);
          arglist__12787 = cljs.core.next(arglist__12787);
          var b = cljs.core.first(arglist__12787);
          arglist__12787 = cljs.core.next(arglist__12787);
          var c = cljs.core.first(arglist__12787);
          var ds = cljs.core.rest(arglist__12787);
          return G__12785__delegate(a, b, c, ds);
        };
        G__12785.cljs$core$IFn$_invoke$arity$variadic = G__12785__delegate;
        return G__12785;
      }();
      G__12784 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__12784__2.call(this, a, b);
          case 3:
            return G__12784__3.call(this, a, b, c);
          default:
            var G__12788 = null;
            if (arguments.length > 3) {
              var G__12789__i = 0, G__12789__a = new Array(arguments.length - 3);
              while (G__12789__i < G__12789__a.length) {
                G__12789__a[G__12789__i] = arguments[G__12789__i + 3];
                ++G__12789__i;
              }
              G__12788 = new cljs.core.IndexedSeq(G__12789__a, 0);
            }
            return G__12784__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__12788);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12784.cljs$lang$maxFixedArity = 3;
      G__12784.cljs$lang$applyTo = G__12784__4.cljs$lang$applyTo;
      G__12784.cljs$core$IFn$_invoke$arity$2 = G__12784__2;
      G__12784.cljs$core$IFn$_invoke$arity$3 = G__12784__3;
      G__12784.cljs$core$IFn$_invoke$arity$variadic = G__12784__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12784;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__12790 = null;
      var G__12790__2 = function(a, b) {
        var G__12773 = a == null ? x : a;
        var G__12774 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12773, G__12774) : f.call(null, G__12773, G__12774);
      };
      var G__12790__3 = function(a, b, c) {
        var G__12775 = a == null ? x : a;
        var G__12776 = b == null ? y : b;
        var G__12777 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12775, G__12776, G__12777) : f.call(null, G__12775, G__12776, G__12777);
      };
      var G__12790__4 = function() {
        var G__12791__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__12791 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__12792__i = 0, G__12792__a = new Array(arguments.length - 3);
            while (G__12792__i < G__12792__a.length) {
              G__12792__a[G__12792__i] = arguments[G__12792__i + 3];
              ++G__12792__i;
            }
            ds = new cljs.core.IndexedSeq(G__12792__a, 0);
          }
          return G__12791__delegate.call(this, a, b, c, ds);
        };
        G__12791.cljs$lang$maxFixedArity = 3;
        G__12791.cljs$lang$applyTo = function(arglist__12793) {
          var a = cljs.core.first(arglist__12793);
          arglist__12793 = cljs.core.next(arglist__12793);
          var b = cljs.core.first(arglist__12793);
          arglist__12793 = cljs.core.next(arglist__12793);
          var c = cljs.core.first(arglist__12793);
          var ds = cljs.core.rest(arglist__12793);
          return G__12791__delegate(a, b, c, ds);
        };
        G__12791.cljs$core$IFn$_invoke$arity$variadic = G__12791__delegate;
        return G__12791;
      }();
      G__12790 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__12790__2.call(this, a, b);
          case 3:
            return G__12790__3.call(this, a, b, c);
          default:
            var G__12794 = null;
            if (arguments.length > 3) {
              var G__12795__i = 0, G__12795__a = new Array(arguments.length - 3);
              while (G__12795__i < G__12795__a.length) {
                G__12795__a[G__12795__i] = arguments[G__12795__i + 3];
                ++G__12795__i;
              }
              G__12794 = new cljs.core.IndexedSeq(G__12795__a, 0);
            }
            return G__12790__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__12794);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12790.cljs$lang$maxFixedArity = 3;
      G__12790.cljs$lang$applyTo = G__12790__4.cljs$lang$applyTo;
      G__12790.cljs$core$IFn$_invoke$arity$2 = G__12790__2;
      G__12790.cljs$core$IFn$_invoke$arity$3 = G__12790__3;
      G__12790.cljs$core$IFn$_invoke$arity$variadic = G__12790__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12790;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function() {
  var map_indexed = null;
  var map_indexed__1 = function(f) {
    return function(rf) {
      var i = function() {
        var G__12826 = -1;
        return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__12826) : cljs.core.volatile_BANG_.call(null, G__12826);
      }();
      return function(i) {
        return function() {
          var G__12856 = null;
          var G__12856__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__12856__1 = function(result) {
            var G__12827 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12827) : rf.call(null, G__12827);
          };
          var G__12856__2 = function(result, input) {
            var G__12828 = result;
            var G__12829 = function() {
              var G__12830 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
              var G__12831 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12830, G__12831) : f.call(null, G__12830, G__12831);
            }();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12828, G__12829) : rf.call(null, G__12828, G__12829);
          };
          G__12856 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__12856__0.call(this);
              case 1:
                return G__12856__1.call(this, result);
              case 2:
                return G__12856__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__12856.cljs$core$IFn$_invoke$arity$0 = G__12856__0;
          G__12856.cljs$core$IFn$_invoke$arity$1 = G__12856__1;
          G__12856.cljs$core$IFn$_invoke$arity$2 = G__12856__2;
          return G__12856;
        }();
      }(i);
    };
  };
  var map_indexed__2 = function(f, coll) {
    var mapi = function mapi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__9670__auto___12857 = size;
            var i_12858 = 0;
            while (true) {
              if (i_12858 < n__9670__auto___12857) {
                cljs.core.chunk_append(b, function() {
                  var G__12852 = idx + i_12858;
                  var G__12853 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_12858);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12852, G__12853) : f.call(null, G__12852, G__12853);
                }());
                var G__12859 = i_12858 + 1;
                i_12858 = G__12859;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            return cljs.core.cons(function() {
              var G__12854 = idx;
              var G__12855 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12854, G__12855) : f.call(null, G__12854, G__12855);
            }(), mapi(idx + 1, cljs.core.rest(s)));
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return mapi(0, coll);
  };
  map_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return map_indexed__1.call(this, f);
      case 2:
        return map_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
  map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
  return map_indexed;
}();
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__12878 = null;
        var G__12878__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__12878__1 = function(result) {
          var G__12872 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12872) : rf.call(null, G__12872);
        };
        var G__12878__2 = function(result, input) {
          var v = function() {
            var G__12873 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12873) : f.call(null, G__12873);
          }();
          if (v == null) {
            return result;
          } else {
            var G__12874 = result;
            var G__12875 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12874, G__12875) : rf.call(null, G__12874, G__12875);
          }
        };
        G__12878 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__12878__0.call(this);
            case 1:
              return G__12878__1.call(this, result);
            case 2:
              return G__12878__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12878.cljs$core$IFn$_invoke$arity$0 = G__12878__0;
        G__12878.cljs$core$IFn$_invoke$arity$1 = G__12878__1;
        G__12878.cljs$core$IFn$_invoke$arity$2 = G__12878__2;
        return G__12878;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__9670__auto___12879 = size;
          var i_12880 = 0;
          while (true) {
            if (i_12880 < n__9670__auto___12879) {
              var x_12881 = function() {
                var G__12876 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_12880);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12876) : f.call(null, G__12876);
              }();
              if (x_12881 == null) {
              } else {
                cljs.core.chunk_append(b, x_12881);
              }
              var G__12882 = i_12880 + 1;
              i_12880 = G__12882;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__12877 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12877) : f.call(null, G__12877);
          }();
          if (x == null) {
            return keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__12883 = this$__$1;
  return goog.getUid(G__12883);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__12884 = cljs.core.seq(self__.watches);
  var chunk__12885 = null;
  var count__12886 = 0;
  var i__12887 = 0;
  while (true) {
    if (i__12887 < count__12886) {
      var vec__12888 = chunk__12885.cljs$core$IIndexed$_nth$arity$2(null, i__12887);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12888, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12888, 1, null);
      var G__12889_12898 = key;
      var G__12890_12899 = this$__$1;
      var G__12891_12900 = oldval;
      var G__12892_12901 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12889_12898, G__12890_12899, G__12891_12900, G__12892_12901) : f.call(null, G__12889_12898, G__12890_12899, G__12891_12900, G__12892_12901);
      var G__12902 = seq__12884;
      var G__12903 = chunk__12885;
      var G__12904 = count__12886;
      var G__12905 = i__12887 + 1;
      seq__12884 = G__12902;
      chunk__12885 = G__12903;
      count__12886 = G__12904;
      i__12887 = G__12905;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__12884);
      if (temp__4126__auto__) {
        var seq__12884__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12884__$1)) {
          var c__9570__auto__ = cljs.core.chunk_first(seq__12884__$1);
          var G__12906 = cljs.core.chunk_rest(seq__12884__$1);
          var G__12907 = c__9570__auto__;
          var G__12908 = cljs.core.count(c__9570__auto__);
          var G__12909 = 0;
          seq__12884 = G__12906;
          chunk__12885 = G__12907;
          count__12886 = G__12908;
          i__12887 = G__12909;
          continue;
        } else {
          var vec__12893 = cljs.core.first(seq__12884__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12893, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12893, 1, null);
          var G__12894_12910 = key;
          var G__12895_12911 = this$__$1;
          var G__12896_12912 = oldval;
          var G__12897_12913 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12894_12910, G__12895_12911, G__12896_12912, G__12897_12913) : f.call(null, G__12894_12910, G__12895_12911, G__12896_12912, G__12897_12913);
          var G__12914 = cljs.core.next(seq__12884__$1);
          var G__12915 = null;
          var G__12916 = 0;
          var G__12917 = 0;
          seq__12884 = G__12914;
          chunk__12885 = G__12915;
          count__12886 = G__12916;
          i__12887 = G__12917;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__12921__delegate = function(x, p__12918) {
      var map__12920 = p__12918;
      var map__12920__$1 = cljs.core.seq_QMARK_(map__12920) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12920) : map__12920;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12920__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12920__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__12921 = function(x, var_args) {
      var p__12918 = null;
      if (arguments.length > 1) {
        var G__12922__i = 0, G__12922__a = new Array(arguments.length - 1);
        while (G__12922__i < G__12922__a.length) {
          G__12922__a[G__12922__i] = arguments[G__12922__i + 1];
          ++G__12922__i;
        }
        p__12918 = new cljs.core.IndexedSeq(G__12922__a, 0);
      }
      return G__12921__delegate.call(this, x, p__12918);
    };
    G__12921.cljs$lang$maxFixedArity = 1;
    G__12921.cljs$lang$applyTo = function(arglist__12923) {
      var x = cljs.core.first(arglist__12923);
      var p__12918 = cljs.core.rest(arglist__12923);
      return G__12921__delegate(x, p__12918);
    };
    G__12921.cljs$core$IFn$_invoke$arity$variadic = G__12921__delegate;
    return G__12921;
  }();
  atom = function(x, var_args) {
    var p__12918 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__12924 = null;
        if (arguments.length > 1) {
          var G__12925__i = 0, G__12925__a = new Array(arguments.length - 1);
          while (G__12925__i < G__12925__a.length) {
            G__12925__a[G__12925__i] = arguments[G__12925__i + 1];
            ++G__12925__i;
          }
          G__12924 = new cljs.core.IndexedSeq(G__12925__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12924);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__12928 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__12928) : validate.call(null, G__12928);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__12929 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__12929) : cljs.core.pr_str.call(null, G__12929);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__12936 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12936) : f.call(null, G__12936);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__12937 = a.state;
        var G__12938 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12937, G__12938) : f.call(null, G__12937, G__12938);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__12939 = a.state;
        var G__12940 = x;
        var G__12941 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12939, G__12940, G__12941) : f.call(null, G__12939, G__12940, G__12941);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__12942__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__12942 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__12943__i = 0, G__12943__a = new Array(arguments.length - 4);
        while (G__12943__i < G__12943__a.length) {
          G__12943__a[G__12943__i] = arguments[G__12943__i + 4];
          ++G__12943__i;
        }
        more = new cljs.core.IndexedSeq(G__12943__a, 0);
      }
      return G__12942__delegate.call(this, a, f, x, y, more);
    };
    G__12942.cljs$lang$maxFixedArity = 4;
    G__12942.cljs$lang$applyTo = function(arglist__12944) {
      var a = cljs.core.first(arglist__12944);
      arglist__12944 = cljs.core.next(arglist__12944);
      var f = cljs.core.first(arglist__12944);
      arglist__12944 = cljs.core.next(arglist__12944);
      var x = cljs.core.first(arglist__12944);
      arglist__12944 = cljs.core.next(arglist__12944);
      var y = cljs.core.first(arglist__12944);
      var more = cljs.core.rest(arglist__12944);
      return G__12942__delegate(a, f, x, y, more);
    };
    G__12942.cljs$core$IFn$_invoke$arity$variadic = G__12942__delegate;
    return G__12942;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__12945 = null;
        if (arguments.length > 4) {
          var G__12946__i = 0, G__12946__a = new Array(arguments.length - 4);
          while (G__12946__i < G__12946__a.length) {
            G__12946__a[G__12946__i] = arguments[G__12946__i + 4];
            ++G__12946__i;
          }
          G__12945 = new cljs.core.IndexedSeq(G__12946__a, 0);
        }
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__12945);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__13013 = null;
          var G__13013__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13013__1 = function(result) {
            var G__12980 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12980) : rf.call(null, G__12980);
          };
          var G__13013__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__12981 = i;
              var G__12982 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12981, G__12982) : f.call(null, G__12981, G__12982);
            }();
            if (v == null) {
              return result;
            } else {
              var G__12983 = result;
              var G__12984 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12983, G__12984) : rf.call(null, G__12983, G__12984);
            }
          };
          G__13013 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13013__0.call(this);
              case 1:
                return G__13013__1.call(this, result);
              case 2:
                return G__13013__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13013.cljs$core$IFn$_invoke$arity$0 = G__13013__0;
          G__13013.cljs$core$IFn$_invoke$arity$1 = G__13013__1;
          G__13013.cljs$core$IFn$_invoke$arity$2 = G__13013__2;
          return G__13013;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__9670__auto___13014 = size;
            var i_13015 = 0;
            while (true) {
              if (i_13015 < n__9670__auto___13014) {
                var x_13016 = function() {
                  var G__13009 = idx + i_13015;
                  var G__13010 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13015);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13009, G__13010) : f.call(null, G__13009, G__13010);
                }();
                if (x_13016 == null) {
                } else {
                  cljs.core.chunk_append(b, x_13016);
                }
                var G__13017 = i_13015 + 1;
                i_13015 = G__13017;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__13011 = idx;
              var G__13012 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13011, G__13012) : f.call(null, G__13011, G__13012);
            }();
            if (x == null) {
              return keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__13231 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13231) : p.call(null, G__13231);
        }());
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__8771__auto__ = function() {
            var G__13233 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13233) : p.call(null, G__13233);
          }();
          if (cljs.core.truth_(and__8771__auto__)) {
            var G__13234 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13234) : p.call(null, G__13234);
          } else {
            return and__8771__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__8771__auto__ = function() {
            var G__13236 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13236) : p.call(null, G__13236);
          }();
          if (cljs.core.truth_(and__8771__auto__)) {
            var and__8771__auto____$1 = function() {
              var G__13238 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13238) : p.call(null, G__13238);
            }();
            if (cljs.core.truth_(and__8771__auto____$1)) {
              var G__13239 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13239) : p.call(null, G__13239);
            } else {
              return and__8771__auto____$1;
            }
          } else {
            return and__8771__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__13408__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__13408 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13409__i = 0, G__13409__a = new Array(arguments.length - 3);
            while (G__13409__i < G__13409__a.length) {
              G__13409__a[G__13409__i] = arguments[G__13409__i + 3];
              ++G__13409__i;
            }
            args = new cljs.core.IndexedSeq(G__13409__a, 0);
          }
          return G__13408__delegate.call(this, x, y, z, args);
        };
        G__13408.cljs$lang$maxFixedArity = 3;
        G__13408.cljs$lang$applyTo = function(arglist__13410) {
          var x = cljs.core.first(arglist__13410);
          arglist__13410 = cljs.core.next(arglist__13410);
          var y = cljs.core.first(arglist__13410);
          arglist__13410 = cljs.core.next(arglist__13410);
          var z = cljs.core.first(arglist__13410);
          var args = cljs.core.rest(arglist__13410);
          return G__13408__delegate(x, y, z, args);
        };
        G__13408.cljs$core$IFn$_invoke$arity$variadic = G__13408__delegate;
        return G__13408;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            var G__13411 = null;
            if (arguments.length > 3) {
              var G__13412__i = 0, G__13412__a = new Array(arguments.length - 3);
              while (G__13412__i < G__13412__a.length) {
                G__13412__a[G__13412__i] = arguments[G__13412__i + 3];
                ++G__13412__i;
              }
              G__13411 = new cljs.core.IndexedSeq(G__13412__a, 0);
            }
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13411);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__8771__auto__ = function() {
            var G__13271 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13271) : p1.call(null, G__13271);
          }();
          if (cljs.core.truth_(and__8771__auto__)) {
            var G__13272 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13272) : p2.call(null, G__13272);
          } else {
            return and__8771__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__8771__auto__ = function() {
            var G__13274 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13274) : p1.call(null, G__13274);
          }();
          if (cljs.core.truth_(and__8771__auto__)) {
            var and__8771__auto____$1 = function() {
              var G__13276 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13276) : p1.call(null, G__13276);
            }();
            if (cljs.core.truth_(and__8771__auto____$1)) {
              var and__8771__auto____$2 = function() {
                var G__13278 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13278) : p2.call(null, G__13278);
              }();
              if (cljs.core.truth_(and__8771__auto____$2)) {
                var G__13279 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13279) : p2.call(null, G__13279);
              } else {
                return and__8771__auto____$2;
              }
            } else {
              return and__8771__auto____$1;
            }
          } else {
            return and__8771__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__8771__auto__ = function() {
            var G__13281 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13281) : p1.call(null, G__13281);
          }();
          if (cljs.core.truth_(and__8771__auto__)) {
            var and__8771__auto____$1 = function() {
              var G__13283 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13283) : p1.call(null, G__13283);
            }();
            if (cljs.core.truth_(and__8771__auto____$1)) {
              var and__8771__auto____$2 = function() {
                var G__13285 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13285) : p1.call(null, G__13285);
              }();
              if (cljs.core.truth_(and__8771__auto____$2)) {
                var and__8771__auto____$3 = function() {
                  var G__13287 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13287) : p2.call(null, G__13287);
                }();
                if (cljs.core.truth_(and__8771__auto____$3)) {
                  var and__8771__auto____$4 = function() {
                    var G__13289 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13289) : p2.call(null, G__13289);
                  }();
                  if (cljs.core.truth_(and__8771__auto____$4)) {
                    var G__13290 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13290) : p2.call(null, G__13290);
                  } else {
                    return and__8771__auto____$4;
                  }
                } else {
                  return and__8771__auto____$3;
                }
              } else {
                return and__8771__auto____$2;
              }
            } else {
              return and__8771__auto____$1;
            }
          } else {
            return and__8771__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__13413__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__13018_SHARP_) {
            var and__8771__auto__ = function() {
              var G__13295 = p1__13018_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13295) : p1.call(null, G__13295);
            }();
            if (cljs.core.truth_(and__8771__auto__)) {
              var G__13296 = p1__13018_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13296) : p2.call(null, G__13296);
            } else {
              return and__8771__auto__;
            }
          }, args));
        };
        var G__13413 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13414__i = 0, G__13414__a = new Array(arguments.length - 3);
            while (G__13414__i < G__13414__a.length) {
              G__13414__a[G__13414__i] = arguments[G__13414__i + 3];
              ++G__13414__i;
            }
            args = new cljs.core.IndexedSeq(G__13414__a, 0);
          }
          return G__13413__delegate.call(this, x, y, z, args);
        };
        G__13413.cljs$lang$maxFixedArity = 3;
        G__13413.cljs$lang$applyTo = function(arglist__13415) {
          var x = cljs.core.first(arglist__13415);
          arglist__13415 = cljs.core.next(arglist__13415);
          var y = cljs.core.first(arglist__13415);
          arglist__13415 = cljs.core.next(arglist__13415);
          var z = cljs.core.first(arglist__13415);
          var args = cljs.core.rest(arglist__13415);
          return G__13413__delegate(x, y, z, args);
        };
        G__13413.cljs$core$IFn$_invoke$arity$variadic = G__13413__delegate;
        return G__13413;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            var G__13416 = null;
            if (arguments.length > 3) {
              var G__13417__i = 0, G__13417__a = new Array(arguments.length - 3);
              while (G__13417__i < G__13417__a.length) {
                G__13417__a[G__13417__i] = arguments[G__13417__i + 3];
                ++G__13417__i;
              }
              G__13416 = new cljs.core.IndexedSeq(G__13417__a, 0);
            }
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13416);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__8771__auto__ = function() {
            var G__13342 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13342) : p1.call(null, G__13342);
          }();
          if (cljs.core.truth_(and__8771__auto__)) {
            var and__8771__auto____$1 = function() {
              var G__13344 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13344) : p2.call(null, G__13344);
            }();
            if (cljs.core.truth_(and__8771__auto____$1)) {
              var G__13345 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13345) : p3.call(null, G__13345);
            } else {
              return and__8771__auto____$1;
            }
          } else {
            return and__8771__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__8771__auto__ = function() {
            var G__13347 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13347) : p1.call(null, G__13347);
          }();
          if (cljs.core.truth_(and__8771__auto__)) {
            var and__8771__auto____$1 = function() {
              var G__13349 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13349) : p2.call(null, G__13349);
            }();
            if (cljs.core.truth_(and__8771__auto____$1)) {
              var and__8771__auto____$2 = function() {
                var G__13351 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13351) : p3.call(null, G__13351);
              }();
              if (cljs.core.truth_(and__8771__auto____$2)) {
                var and__8771__auto____$3 = function() {
                  var G__13353 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13353) : p1.call(null, G__13353);
                }();
                if (cljs.core.truth_(and__8771__auto____$3)) {
                  var and__8771__auto____$4 = function() {
                    var G__13355 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13355) : p2.call(null, G__13355);
                  }();
                  if (cljs.core.truth_(and__8771__auto____$4)) {
                    var G__13356 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13356) : p3.call(null, G__13356);
                  } else {
                    return and__8771__auto____$4;
                  }
                } else {
                  return and__8771__auto____$3;
                }
              } else {
                return and__8771__auto____$2;
              }
            } else {
              return and__8771__auto____$1;
            }
          } else {
            return and__8771__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__8771__auto__ = function() {
            var G__13358 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13358) : p1.call(null, G__13358);
          }();
          if (cljs.core.truth_(and__8771__auto__)) {
            var and__8771__auto____$1 = function() {
              var G__13360 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13360) : p2.call(null, G__13360);
            }();
            if (cljs.core.truth_(and__8771__auto____$1)) {
              var and__8771__auto____$2 = function() {
                var G__13362 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13362) : p3.call(null, G__13362);
              }();
              if (cljs.core.truth_(and__8771__auto____$2)) {
                var and__8771__auto____$3 = function() {
                  var G__13364 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13364) : p1.call(null, G__13364);
                }();
                if (cljs.core.truth_(and__8771__auto____$3)) {
                  var and__8771__auto____$4 = function() {
                    var G__13366 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13366) : p2.call(null, G__13366);
                  }();
                  if (cljs.core.truth_(and__8771__auto____$4)) {
                    var and__8771__auto____$5 = function() {
                      var G__13368 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13368) : p3.call(null, G__13368);
                    }();
                    if (cljs.core.truth_(and__8771__auto____$5)) {
                      var and__8771__auto____$6 = function() {
                        var G__13370 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13370) : p1.call(null, G__13370);
                      }();
                      if (cljs.core.truth_(and__8771__auto____$6)) {
                        var and__8771__auto____$7 = function() {
                          var G__13372 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13372) : p2.call(null, G__13372);
                        }();
                        if (cljs.core.truth_(and__8771__auto____$7)) {
                          var G__13373 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13373) : p3.call(null, G__13373);
                        } else {
                          return and__8771__auto____$7;
                        }
                      } else {
                        return and__8771__auto____$6;
                      }
                    } else {
                      return and__8771__auto____$5;
                    }
                  } else {
                    return and__8771__auto____$4;
                  }
                } else {
                  return and__8771__auto____$3;
                }
              } else {
                return and__8771__auto____$2;
              }
            } else {
              return and__8771__auto____$1;
            }
          } else {
            return and__8771__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__13418__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__13019_SHARP_) {
            var and__8771__auto__ = function() {
              var G__13380 = p1__13019_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13380) : p1.call(null, G__13380);
            }();
            if (cljs.core.truth_(and__8771__auto__)) {
              var and__8771__auto____$1 = function() {
                var G__13382 = p1__13019_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13382) : p2.call(null, G__13382);
              }();
              if (cljs.core.truth_(and__8771__auto____$1)) {
                var G__13383 = p1__13019_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13383) : p3.call(null, G__13383);
              } else {
                return and__8771__auto____$1;
              }
            } else {
              return and__8771__auto__;
            }
          }, args));
        };
        var G__13418 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13419__i = 0, G__13419__a = new Array(arguments.length - 3);
            while (G__13419__i < G__13419__a.length) {
              G__13419__a[G__13419__i] = arguments[G__13419__i + 3];
              ++G__13419__i;
            }
            args = new cljs.core.IndexedSeq(G__13419__a, 0);
          }
          return G__13418__delegate.call(this, x, y, z, args);
        };
        G__13418.cljs$lang$maxFixedArity = 3;
        G__13418.cljs$lang$applyTo = function(arglist__13420) {
          var x = cljs.core.first(arglist__13420);
          arglist__13420 = cljs.core.next(arglist__13420);
          var y = cljs.core.first(arglist__13420);
          arglist__13420 = cljs.core.next(arglist__13420);
          var z = cljs.core.first(arglist__13420);
          var args = cljs.core.rest(arglist__13420);
          return G__13418__delegate(x, y, z, args);
        };
        G__13418.cljs$core$IFn$_invoke$arity$variadic = G__13418__delegate;
        return G__13418;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            var G__13421 = null;
            if (arguments.length > 3) {
              var G__13422__i = 0, G__13422__a = new Array(arguments.length - 3);
              while (G__13422__i < G__13422__a.length) {
                G__13422__a[G__13422__i] = arguments[G__13422__i + 3];
                ++G__13422__i;
              }
              G__13421 = new cljs.core.IndexedSeq(G__13422__a, 0);
            }
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13421);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__13423__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__13020_SHARP_) {
                var G__13399 = x;
                return p1__13020_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13020_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13399) : p1__13020_SHARP_.call(null, G__13399);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__13021_SHARP_) {
                var and__8771__auto__ = function() {
                  var G__13401 = x;
                  return p1__13021_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13021_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13401) : p1__13021_SHARP_.call(null, G__13401);
                }();
                if (cljs.core.truth_(and__8771__auto__)) {
                  var G__13402 = y;
                  return p1__13021_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13021_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13402) : p1__13021_SHARP_.call(null, G__13402);
                } else {
                  return and__8771__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__13022_SHARP_) {
                var and__8771__auto__ = function() {
                  var G__13404 = x;
                  return p1__13022_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13022_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13404) : p1__13022_SHARP_.call(null, G__13404);
                }();
                if (cljs.core.truth_(and__8771__auto__)) {
                  var and__8771__auto____$1 = function() {
                    var G__13406 = y;
                    return p1__13022_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13022_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13406) : p1__13022_SHARP_.call(null, G__13406);
                  }();
                  if (cljs.core.truth_(and__8771__auto____$1)) {
                    var G__13407 = z;
                    return p1__13022_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13022_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13407) : p1__13022_SHARP_.call(null, G__13407);
                  } else {
                    return and__8771__auto____$1;
                  }
                } else {
                  return and__8771__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__13424__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__13023_SHARP_) {
                  return cljs.core.every_QMARK_(p1__13023_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__13424 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__13425__i = 0, G__13425__a = new Array(arguments.length - 3);
                while (G__13425__i < G__13425__a.length) {
                  G__13425__a[G__13425__i] = arguments[G__13425__i + 3];
                  ++G__13425__i;
                }
                args = new cljs.core.IndexedSeq(G__13425__a, 0);
              }
              return G__13424__delegate.call(this, x, y, z, args);
            };
            G__13424.cljs$lang$maxFixedArity = 3;
            G__13424.cljs$lang$applyTo = function(arglist__13426) {
              var x = cljs.core.first(arglist__13426);
              arglist__13426 = cljs.core.next(arglist__13426);
              var y = cljs.core.first(arglist__13426);
              arglist__13426 = cljs.core.next(arglist__13426);
              var z = cljs.core.first(arglist__13426);
              var args = cljs.core.rest(arglist__13426);
              return G__13424__delegate(x, y, z, args);
            };
            G__13424.cljs$core$IFn$_invoke$arity$variadic = G__13424__delegate;
            return G__13424;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                var G__13427 = null;
                if (arguments.length > 3) {
                  var G__13428__i = 0, G__13428__a = new Array(arguments.length - 3);
                  while (G__13428__i < G__13428__a.length) {
                    G__13428__a[G__13428__i] = arguments[G__13428__i + 3];
                    ++G__13428__i;
                  }
                  G__13427 = new cljs.core.IndexedSeq(G__13428__a, 0);
                }
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13427);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__13423 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__13429__i = 0, G__13429__a = new Array(arguments.length - 3);
        while (G__13429__i < G__13429__a.length) {
          G__13429__a[G__13429__i] = arguments[G__13429__i + 3];
          ++G__13429__i;
        }
        ps = new cljs.core.IndexedSeq(G__13429__a, 0);
      }
      return G__13423__delegate.call(this, p1, p2, p3, ps);
    };
    G__13423.cljs$lang$maxFixedArity = 3;
    G__13423.cljs$lang$applyTo = function(arglist__13430) {
      var p1 = cljs.core.first(arglist__13430);
      arglist__13430 = cljs.core.next(arglist__13430);
      var p2 = cljs.core.first(arglist__13430);
      arglist__13430 = cljs.core.next(arglist__13430);
      var p3 = cljs.core.first(arglist__13430);
      var ps = cljs.core.rest(arglist__13430);
      return G__13423__delegate(p1, p2, p3, ps);
    };
    G__13423.cljs$core$IFn$_invoke$arity$variadic = G__13423__delegate;
    return G__13423;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        var G__13431 = null;
        if (arguments.length > 3) {
          var G__13432__i = 0, G__13432__a = new Array(arguments.length - 3);
          while (G__13432__i < G__13432__a.length) {
            G__13432__a[G__13432__i] = arguments[G__13432__i + 3];
            ++G__13432__i;
          }
          G__13431 = new cljs.core.IndexedSeq(G__13432__a, 0);
        }
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__13431);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        var G__13638 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13638) : p.call(null, G__13638);
      };
      var sp1__2 = function(x, y) {
        var or__8783__auto__ = function() {
          var G__13640 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13640) : p.call(null, G__13640);
        }();
        if (cljs.core.truth_(or__8783__auto__)) {
          return or__8783__auto__;
        } else {
          var G__13641 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13641) : p.call(null, G__13641);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__8783__auto__ = function() {
          var G__13643 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13643) : p.call(null, G__13643);
        }();
        if (cljs.core.truth_(or__8783__auto__)) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = function() {
            var G__13645 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13645) : p.call(null, G__13645);
          }();
          if (cljs.core.truth_(or__8783__auto____$1)) {
            return or__8783__auto____$1;
          } else {
            var G__13646 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13646) : p.call(null, G__13646);
          }
        }
      };
      var sp1__4 = function() {
        var G__13807__delegate = function(x, y, z, args) {
          var or__8783__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__8783__auto__)) {
            return or__8783__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__13807 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13808__i = 0, G__13808__a = new Array(arguments.length - 3);
            while (G__13808__i < G__13808__a.length) {
              G__13808__a[G__13808__i] = arguments[G__13808__i + 3];
              ++G__13808__i;
            }
            args = new cljs.core.IndexedSeq(G__13808__a, 0);
          }
          return G__13807__delegate.call(this, x, y, z, args);
        };
        G__13807.cljs$lang$maxFixedArity = 3;
        G__13807.cljs$lang$applyTo = function(arglist__13809) {
          var x = cljs.core.first(arglist__13809);
          arglist__13809 = cljs.core.next(arglist__13809);
          var y = cljs.core.first(arglist__13809);
          arglist__13809 = cljs.core.next(arglist__13809);
          var z = cljs.core.first(arglist__13809);
          var args = cljs.core.rest(arglist__13809);
          return G__13807__delegate(x, y, z, args);
        };
        G__13807.cljs$core$IFn$_invoke$arity$variadic = G__13807__delegate;
        return G__13807;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            var G__13810 = null;
            if (arguments.length > 3) {
              var G__13811__i = 0, G__13811__a = new Array(arguments.length - 3);
              while (G__13811__i < G__13811__a.length) {
                G__13811__a[G__13811__i] = arguments[G__13811__i + 3];
                ++G__13811__i;
              }
              G__13810 = new cljs.core.IndexedSeq(G__13811__a, 0);
            }
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13810);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__8783__auto__ = function() {
          var G__13678 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13678) : p1.call(null, G__13678);
        }();
        if (cljs.core.truth_(or__8783__auto__)) {
          return or__8783__auto__;
        } else {
          var G__13679 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13679) : p2.call(null, G__13679);
        }
      };
      var sp2__2 = function(x, y) {
        var or__8783__auto__ = function() {
          var G__13681 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13681) : p1.call(null, G__13681);
        }();
        if (cljs.core.truth_(or__8783__auto__)) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = function() {
            var G__13683 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13683) : p1.call(null, G__13683);
          }();
          if (cljs.core.truth_(or__8783__auto____$1)) {
            return or__8783__auto____$1;
          } else {
            var or__8783__auto____$2 = function() {
              var G__13685 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13685) : p2.call(null, G__13685);
            }();
            if (cljs.core.truth_(or__8783__auto____$2)) {
              return or__8783__auto____$2;
            } else {
              var G__13686 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13686) : p2.call(null, G__13686);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__8783__auto__ = function() {
          var G__13688 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13688) : p1.call(null, G__13688);
        }();
        if (cljs.core.truth_(or__8783__auto__)) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = function() {
            var G__13690 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13690) : p1.call(null, G__13690);
          }();
          if (cljs.core.truth_(or__8783__auto____$1)) {
            return or__8783__auto____$1;
          } else {
            var or__8783__auto____$2 = function() {
              var G__13692 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13692) : p1.call(null, G__13692);
            }();
            if (cljs.core.truth_(or__8783__auto____$2)) {
              return or__8783__auto____$2;
            } else {
              var or__8783__auto____$3 = function() {
                var G__13694 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13694) : p2.call(null, G__13694);
              }();
              if (cljs.core.truth_(or__8783__auto____$3)) {
                return or__8783__auto____$3;
              } else {
                var or__8783__auto____$4 = function() {
                  var G__13696 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13696) : p2.call(null, G__13696);
                }();
                if (cljs.core.truth_(or__8783__auto____$4)) {
                  return or__8783__auto____$4;
                } else {
                  var G__13697 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13697) : p2.call(null, G__13697);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__13812__delegate = function(x, y, z, args) {
          var or__8783__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__8783__auto__)) {
            return or__8783__auto__;
          } else {
            return cljs.core.some(function(or__8783__auto__) {
              return function(p1__13433_SHARP_) {
                var or__8783__auto____$1 = function() {
                  var G__13699 = p1__13433_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13699) : p1.call(null, G__13699);
                }();
                if (cljs.core.truth_(or__8783__auto____$1)) {
                  return or__8783__auto____$1;
                } else {
                  var G__13700 = p1__13433_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13700) : p2.call(null, G__13700);
                }
              };
            }(or__8783__auto__), args);
          }
        };
        var G__13812 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13813__i = 0, G__13813__a = new Array(arguments.length - 3);
            while (G__13813__i < G__13813__a.length) {
              G__13813__a[G__13813__i] = arguments[G__13813__i + 3];
              ++G__13813__i;
            }
            args = new cljs.core.IndexedSeq(G__13813__a, 0);
          }
          return G__13812__delegate.call(this, x, y, z, args);
        };
        G__13812.cljs$lang$maxFixedArity = 3;
        G__13812.cljs$lang$applyTo = function(arglist__13814) {
          var x = cljs.core.first(arglist__13814);
          arglist__13814 = cljs.core.next(arglist__13814);
          var y = cljs.core.first(arglist__13814);
          arglist__13814 = cljs.core.next(arglist__13814);
          var z = cljs.core.first(arglist__13814);
          var args = cljs.core.rest(arglist__13814);
          return G__13812__delegate(x, y, z, args);
        };
        G__13812.cljs$core$IFn$_invoke$arity$variadic = G__13812__delegate;
        return G__13812;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            var G__13815 = null;
            if (arguments.length > 3) {
              var G__13816__i = 0, G__13816__a = new Array(arguments.length - 3);
              while (G__13816__i < G__13816__a.length) {
                G__13816__a[G__13816__i] = arguments[G__13816__i + 3];
                ++G__13816__i;
              }
              G__13815 = new cljs.core.IndexedSeq(G__13816__a, 0);
            }
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13815);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__8783__auto__ = function() {
          var G__13746 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13746) : p1.call(null, G__13746);
        }();
        if (cljs.core.truth_(or__8783__auto__)) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = function() {
            var G__13748 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13748) : p2.call(null, G__13748);
          }();
          if (cljs.core.truth_(or__8783__auto____$1)) {
            return or__8783__auto____$1;
          } else {
            var G__13749 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13749) : p3.call(null, G__13749);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__8783__auto__ = function() {
          var G__13751 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13751) : p1.call(null, G__13751);
        }();
        if (cljs.core.truth_(or__8783__auto__)) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = function() {
            var G__13753 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13753) : p2.call(null, G__13753);
          }();
          if (cljs.core.truth_(or__8783__auto____$1)) {
            return or__8783__auto____$1;
          } else {
            var or__8783__auto____$2 = function() {
              var G__13755 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13755) : p3.call(null, G__13755);
            }();
            if (cljs.core.truth_(or__8783__auto____$2)) {
              return or__8783__auto____$2;
            } else {
              var or__8783__auto____$3 = function() {
                var G__13757 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13757) : p1.call(null, G__13757);
              }();
              if (cljs.core.truth_(or__8783__auto____$3)) {
                return or__8783__auto____$3;
              } else {
                var or__8783__auto____$4 = function() {
                  var G__13759 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13759) : p2.call(null, G__13759);
                }();
                if (cljs.core.truth_(or__8783__auto____$4)) {
                  return or__8783__auto____$4;
                } else {
                  var G__13760 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13760) : p3.call(null, G__13760);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__8783__auto__ = function() {
          var G__13762 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13762) : p1.call(null, G__13762);
        }();
        if (cljs.core.truth_(or__8783__auto__)) {
          return or__8783__auto__;
        } else {
          var or__8783__auto____$1 = function() {
            var G__13764 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13764) : p2.call(null, G__13764);
          }();
          if (cljs.core.truth_(or__8783__auto____$1)) {
            return or__8783__auto____$1;
          } else {
            var or__8783__auto____$2 = function() {
              var G__13766 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13766) : p3.call(null, G__13766);
            }();
            if (cljs.core.truth_(or__8783__auto____$2)) {
              return or__8783__auto____$2;
            } else {
              var or__8783__auto____$3 = function() {
                var G__13768 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13768) : p1.call(null, G__13768);
              }();
              if (cljs.core.truth_(or__8783__auto____$3)) {
                return or__8783__auto____$3;
              } else {
                var or__8783__auto____$4 = function() {
                  var G__13770 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13770) : p2.call(null, G__13770);
                }();
                if (cljs.core.truth_(or__8783__auto____$4)) {
                  return or__8783__auto____$4;
                } else {
                  var or__8783__auto____$5 = function() {
                    var G__13772 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13772) : p3.call(null, G__13772);
                  }();
                  if (cljs.core.truth_(or__8783__auto____$5)) {
                    return or__8783__auto____$5;
                  } else {
                    var or__8783__auto____$6 = function() {
                      var G__13774 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13774) : p1.call(null, G__13774);
                    }();
                    if (cljs.core.truth_(or__8783__auto____$6)) {
                      return or__8783__auto____$6;
                    } else {
                      var or__8783__auto____$7 = function() {
                        var G__13776 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13776) : p2.call(null, G__13776);
                      }();
                      if (cljs.core.truth_(or__8783__auto____$7)) {
                        return or__8783__auto____$7;
                      } else {
                        var G__13777 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13777) : p3.call(null, G__13777);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__13817__delegate = function(x, y, z, args) {
          var or__8783__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__8783__auto__)) {
            return or__8783__auto__;
          } else {
            return cljs.core.some(function(or__8783__auto__) {
              return function(p1__13434_SHARP_) {
                var or__8783__auto____$1 = function() {
                  var G__13779 = p1__13434_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13779) : p1.call(null, G__13779);
                }();
                if (cljs.core.truth_(or__8783__auto____$1)) {
                  return or__8783__auto____$1;
                } else {
                  var or__8783__auto____$2 = function() {
                    var G__13781 = p1__13434_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13781) : p2.call(null, G__13781);
                  }();
                  if (cljs.core.truth_(or__8783__auto____$2)) {
                    return or__8783__auto____$2;
                  } else {
                    var G__13782 = p1__13434_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13782) : p3.call(null, G__13782);
                  }
                }
              };
            }(or__8783__auto__), args);
          }
        };
        var G__13817 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13818__i = 0, G__13818__a = new Array(arguments.length - 3);
            while (G__13818__i < G__13818__a.length) {
              G__13818__a[G__13818__i] = arguments[G__13818__i + 3];
              ++G__13818__i;
            }
            args = new cljs.core.IndexedSeq(G__13818__a, 0);
          }
          return G__13817__delegate.call(this, x, y, z, args);
        };
        G__13817.cljs$lang$maxFixedArity = 3;
        G__13817.cljs$lang$applyTo = function(arglist__13819) {
          var x = cljs.core.first(arglist__13819);
          arglist__13819 = cljs.core.next(arglist__13819);
          var y = cljs.core.first(arglist__13819);
          arglist__13819 = cljs.core.next(arglist__13819);
          var z = cljs.core.first(arglist__13819);
          var args = cljs.core.rest(arglist__13819);
          return G__13817__delegate(x, y, z, args);
        };
        G__13817.cljs$core$IFn$_invoke$arity$variadic = G__13817__delegate;
        return G__13817;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            var G__13820 = null;
            if (arguments.length > 3) {
              var G__13821__i = 0, G__13821__a = new Array(arguments.length - 3);
              while (G__13821__i < G__13821__a.length) {
                G__13821__a[G__13821__i] = arguments[G__13821__i + 3];
                ++G__13821__i;
              }
              G__13820 = new cljs.core.IndexedSeq(G__13821__a, 0);
            }
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13820);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__13822__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__13435_SHARP_) {
                var G__13798 = x;
                return p1__13435_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13435_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13798) : p1__13435_SHARP_.call(null, G__13798);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__13436_SHARP_) {
                var or__8783__auto__ = function() {
                  var G__13800 = x;
                  return p1__13436_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13436_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13800) : p1__13436_SHARP_.call(null, G__13800);
                }();
                if (cljs.core.truth_(or__8783__auto__)) {
                  return or__8783__auto__;
                } else {
                  var G__13801 = y;
                  return p1__13436_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13436_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13801) : p1__13436_SHARP_.call(null, G__13801);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__13437_SHARP_) {
                var or__8783__auto__ = function() {
                  var G__13803 = x;
                  return p1__13437_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13437_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13803) : p1__13437_SHARP_.call(null, G__13803);
                }();
                if (cljs.core.truth_(or__8783__auto__)) {
                  return or__8783__auto__;
                } else {
                  var or__8783__auto____$1 = function() {
                    var G__13805 = y;
                    return p1__13437_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13437_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13805) : p1__13437_SHARP_.call(null, G__13805);
                  }();
                  if (cljs.core.truth_(or__8783__auto____$1)) {
                    return or__8783__auto____$1;
                  } else {
                    var G__13806 = z;
                    return p1__13437_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13437_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13806) : p1__13437_SHARP_.call(null, G__13806);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__13823__delegate = function(x, y, z, args) {
              var or__8783__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__8783__auto__)) {
                return or__8783__auto__;
              } else {
                return cljs.core.some(function(or__8783__auto__, ps__$1) {
                  return function(p1__13438_SHARP_) {
                    return cljs.core.some(p1__13438_SHARP_, args);
                  };
                }(or__8783__auto__, ps__$1), ps__$1);
              }
            };
            var G__13823 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__13824__i = 0, G__13824__a = new Array(arguments.length - 3);
                while (G__13824__i < G__13824__a.length) {
                  G__13824__a[G__13824__i] = arguments[G__13824__i + 3];
                  ++G__13824__i;
                }
                args = new cljs.core.IndexedSeq(G__13824__a, 0);
              }
              return G__13823__delegate.call(this, x, y, z, args);
            };
            G__13823.cljs$lang$maxFixedArity = 3;
            G__13823.cljs$lang$applyTo = function(arglist__13825) {
              var x = cljs.core.first(arglist__13825);
              arglist__13825 = cljs.core.next(arglist__13825);
              var y = cljs.core.first(arglist__13825);
              arglist__13825 = cljs.core.next(arglist__13825);
              var z = cljs.core.first(arglist__13825);
              var args = cljs.core.rest(arglist__13825);
              return G__13823__delegate(x, y, z, args);
            };
            G__13823.cljs$core$IFn$_invoke$arity$variadic = G__13823__delegate;
            return G__13823;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                var G__13826 = null;
                if (arguments.length > 3) {
                  var G__13827__i = 0, G__13827__a = new Array(arguments.length - 3);
                  while (G__13827__i < G__13827__a.length) {
                    G__13827__a[G__13827__i] = arguments[G__13827__i + 3];
                    ++G__13827__i;
                  }
                  G__13826 = new cljs.core.IndexedSeq(G__13827__a, 0);
                }
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13826);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__13822 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__13828__i = 0, G__13828__a = new Array(arguments.length - 3);
        while (G__13828__i < G__13828__a.length) {
          G__13828__a[G__13828__i] = arguments[G__13828__i + 3];
          ++G__13828__i;
        }
        ps = new cljs.core.IndexedSeq(G__13828__a, 0);
      }
      return G__13822__delegate.call(this, p1, p2, p3, ps);
    };
    G__13822.cljs$lang$maxFixedArity = 3;
    G__13822.cljs$lang$applyTo = function(arglist__13829) {
      var p1 = cljs.core.first(arglist__13829);
      arglist__13829 = cljs.core.next(arglist__13829);
      var p2 = cljs.core.first(arglist__13829);
      arglist__13829 = cljs.core.next(arglist__13829);
      var p3 = cljs.core.first(arglist__13829);
      var ps = cljs.core.rest(arglist__13829);
      return G__13822__delegate(p1, p2, p3, ps);
    };
    G__13822.cljs$core$IFn$_invoke$arity$variadic = G__13822__delegate;
    return G__13822;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        var G__13830 = null;
        if (arguments.length > 3) {
          var G__13831__i = 0, G__13831__a = new Array(arguments.length - 3);
          while (G__13831__i < G__13831__a.length) {
            G__13831__a[G__13831__i] = arguments[G__13831__i + 3];
            ++G__13831__i;
          }
          G__13830 = new cljs.core.IndexedSeq(G__13831__a, 0);
        }
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__13830);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__13886 = null;
        var G__13886__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__13886__1 = function(result) {
          var G__13872 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13872) : rf.call(null, G__13872);
        };
        var G__13886__2 = function(result, input) {
          var G__13873 = result;
          var G__13874 = function() {
            var G__13875 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13875) : f.call(null, G__13875);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13873, G__13874) : rf.call(null, G__13873, G__13874);
        };
        var G__13886__3 = function() {
          var G__13887__delegate = function(result, input, inputs) {
            var G__13876 = result;
            var G__13877 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13876, G__13877) : rf.call(null, G__13876, G__13877);
          };
          var G__13887 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__13888__i = 0, G__13888__a = new Array(arguments.length - 2);
              while (G__13888__i < G__13888__a.length) {
                G__13888__a[G__13888__i] = arguments[G__13888__i + 2];
                ++G__13888__i;
              }
              inputs = new cljs.core.IndexedSeq(G__13888__a, 0);
            }
            return G__13887__delegate.call(this, result, input, inputs);
          };
          G__13887.cljs$lang$maxFixedArity = 2;
          G__13887.cljs$lang$applyTo = function(arglist__13889) {
            var result = cljs.core.first(arglist__13889);
            arglist__13889 = cljs.core.next(arglist__13889);
            var input = cljs.core.first(arglist__13889);
            var inputs = cljs.core.rest(arglist__13889);
            return G__13887__delegate(result, input, inputs);
          };
          G__13887.cljs$core$IFn$_invoke$arity$variadic = G__13887__delegate;
          return G__13887;
        }();
        G__13886 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__13886__0.call(this);
            case 1:
              return G__13886__1.call(this, result);
            case 2:
              return G__13886__2.call(this, result, input);
            default:
              var G__13890 = null;
              if (arguments.length > 2) {
                var G__13891__i = 0, G__13891__a = new Array(arguments.length - 2);
                while (G__13891__i < G__13891__a.length) {
                  G__13891__a[G__13891__i] = arguments[G__13891__i + 2];
                  ++G__13891__i;
                }
                G__13890 = new cljs.core.IndexedSeq(G__13891__a, 0);
              }
              return G__13886__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__13890);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13886.cljs$lang$maxFixedArity = 2;
        G__13886.cljs$lang$applyTo = G__13886__3.cljs$lang$applyTo;
        G__13886.cljs$core$IFn$_invoke$arity$0 = G__13886__0;
        G__13886.cljs$core$IFn$_invoke$arity$1 = G__13886__1;
        G__13886.cljs$core$IFn$_invoke$arity$2 = G__13886__2;
        G__13886.cljs$core$IFn$_invoke$arity$variadic = G__13886__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__13886;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__9670__auto___13892 = size;
          var i_13893 = 0;
          while (true) {
            if (i_13893 < n__9670__auto___13892) {
              cljs.core.chunk_append(b, function() {
                var G__13878 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13893);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13878) : f.call(null, G__13878);
              }());
              var G__13894 = i_13893 + 1;
              i_13893 = G__13894;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__13879 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13879) : f.call(null, G__13879);
          }(), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__13880 = cljs.core.first(s1);
          var G__13881 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13880, G__13881) : f.call(null, G__13880, G__13881);
        }(), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__13882 = cljs.core.first(s1);
          var G__13883 = cljs.core.first(s2);
          var G__13884 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13882, G__13883, G__13884) : f.call(null, G__13882, G__13883, G__13884);
        }(), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__13895__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__13832_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__13832_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__13895 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__13896__i = 0, G__13896__a = new Array(arguments.length - 4);
        while (G__13896__i < G__13896__a.length) {
          G__13896__a[G__13896__i] = arguments[G__13896__i + 4];
          ++G__13896__i;
        }
        colls = new cljs.core.IndexedSeq(G__13896__a, 0);
      }
      return G__13895__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__13895.cljs$lang$maxFixedArity = 4;
    G__13895.cljs$lang$applyTo = function(arglist__13897) {
      var f = cljs.core.first(arglist__13897);
      arglist__13897 = cljs.core.next(arglist__13897);
      var c1 = cljs.core.first(arglist__13897);
      arglist__13897 = cljs.core.next(arglist__13897);
      var c2 = cljs.core.first(arglist__13897);
      arglist__13897 = cljs.core.next(arglist__13897);
      var c3 = cljs.core.first(arglist__13897);
      var colls = cljs.core.rest(arglist__13897);
      return G__13895__delegate(f, c1, c2, c3, colls);
    };
    G__13895.cljs$core$IFn$_invoke$arity$variadic = G__13895__delegate;
    return G__13895;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        var G__13898 = null;
        if (arguments.length > 4) {
          var G__13899__i = 0, G__13899__a = new Array(arguments.length - 4);
          while (G__13899__i < G__13899__a.length) {
            G__13899__a[G__13899__i] = arguments[G__13899__i + 4];
            ++G__13899__i;
          }
          G__13898 = new cljs.core.IndexedSeq(G__13899__a, 0);
        }
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__13898);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__13908 = null;
          var G__13908__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13908__1 = function(result) {
            var G__13905 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13905) : rf.call(null, G__13905);
          };
          var G__13908__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__13906 = result;
              var G__13907 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13906, G__13907) : rf.call(null, G__13906, G__13907);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__13908 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13908__0.call(this);
              case 1:
                return G__13908__1.call(this, result);
              case 2:
                return G__13908__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13908.cljs$core$IFn$_invoke$arity$0 = G__13908__0;
          G__13908.cljs$core$IFn$_invoke$arity$1 = G__13908__1;
          G__13908.cljs$core$IFn$_invoke$arity$2 = G__13908__2;
          return G__13908;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__13915 = null;
          var G__13915__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13915__1 = function(result) {
            var G__13912 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13912) : rf.call(null, G__13912);
          };
          var G__13915__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__13913 = result;
              var G__13914 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13913, G__13914) : rf.call(null, G__13913, G__13914);
            }
          };
          G__13915 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13915__0.call(this);
              case 1:
                return G__13915__1.call(this, result);
              case 2:
                return G__13915__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13915.cljs$core$IFn$_invoke$arity$0 = G__13915__0;
          G__13915.cljs$core$IFn$_invoke$arity$1 = G__13915__1;
          G__13915.cljs$core$IFn$_invoke$arity$2 = G__13915__2;
          return G__13915;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__13916 = n__$1 - 1;
          var G__13917 = cljs.core.rest(s);
          n__$1 = G__13916;
          coll__$1 = G__13917;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__13920 = cljs.core.next(s);
      var G__13921 = cljs.core.next(lead);
      s = G__13920;
      lead = G__13921;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__13934 = null;
          var G__13934__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13934__1 = function(result) {
            var G__13928 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13928) : rf.call(null, G__13928);
          };
          var G__13934__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__8771__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__8771__auto__)) {
                var G__13929 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13929) : pred.call(null, G__13929);
              } else {
                return and__8771__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__13930 = result;
              var G__13931 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13930, G__13931) : rf.call(null, G__13930, G__13931);
            }
          };
          G__13934 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13934__0.call(this);
              case 1:
                return G__13934__1.call(this, result);
              case 2:
                return G__13934__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13934.cljs$core$IFn$_invoke$arity$0 = G__13934__0;
          G__13934.cljs$core$IFn$_invoke$arity$1 = G__13934__1;
          G__13934.cljs$core$IFn$_invoke$arity$2 = G__13934__2;
          return G__13934;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__8771__auto__ = s;
          if (and__8771__auto__) {
            var G__13933 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__13933) : pred__$1.call(null, G__13933);
          } else {
            return and__8771__auto__;
          }
        }())) {
          var G__13935 = pred__$1;
          var G__13936 = cljs.core.rest(s);
          pred__$1 = G__13935;
          coll__$1 = G__13936;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, function() {
      var G__13945 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13945) : f.call(null, G__13945);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__13948__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__13948 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__13949__i = 0, G__13949__a = new Array(arguments.length - 2);
        while (G__13949__i < G__13949__a.length) {
          G__13949__a[G__13949__i] = arguments[G__13949__i + 2];
          ++G__13949__i;
        }
        colls = new cljs.core.IndexedSeq(G__13949__a, 0);
      }
      return G__13948__delegate.call(this, c1, c2, colls);
    };
    G__13948.cljs$lang$maxFixedArity = 2;
    G__13948.cljs$lang$applyTo = function(arglist__13950) {
      var c1 = cljs.core.first(arglist__13950);
      arglist__13950 = cljs.core.next(arglist__13950);
      var c2 = cljs.core.first(arglist__13950);
      var colls = cljs.core.rest(arglist__13950);
      return G__13948__delegate(c1, c2, colls);
    };
    G__13948.cljs$core$IFn$_invoke$arity$variadic = G__13948__delegate;
    return G__13948;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        var G__13951 = null;
        if (arguments.length > 2) {
          var G__13952__i = 0, G__13952__a = new Array(arguments.length - 2);
          while (G__13952__i < G__13952__a.length) {
            G__13952__a[G__13952__i] = arguments[G__13952__i + 2];
            ++G__13952__i;
          }
          G__13951 = new cljs.core.IndexedSeq(G__13952__a, 0);
        }
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__13951);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function() {
  var interpose = null;
  var interpose__1 = function(sep) {
    return function(rf) {
      var started = cljs.core.volatile_BANG_(false);
      return function(started) {
        return function() {
          var G__13967 = null;
          var G__13967__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13967__1 = function(result) {
            var G__13960 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13960) : rf.call(null, G__13960);
          };
          var G__13967__2 = function(result, input) {
            if (cljs.core.truth_(cljs.core.deref(started))) {
              var sepr = function() {
                var G__13961 = result;
                var G__13962 = sep;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13961, G__13962) : rf.call(null, G__13961, G__13962);
              }();
              if (cljs.core.reduced_QMARK_(sepr)) {
                return sepr;
              } else {
                var G__13963 = sepr;
                var G__13964 = input;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13963, G__13964) : rf.call(null, G__13963, G__13964);
              }
            } else {
              cljs.core.vreset_BANG_(started, true);
              var G__13965 = result;
              var G__13966 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13965, G__13966) : rf.call(null, G__13965, G__13966);
            }
          };
          G__13967 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13967__0.call(this);
              case 1:
                return G__13967__1.call(this, result);
              case 2:
                return G__13967__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13967.cljs$core$IFn$_invoke$arity$0 = G__13967__0;
          G__13967.cljs$core$IFn$_invoke$arity$1 = G__13967__1;
          G__13967.cljs$core$IFn$_invoke$arity$2 = G__13967__2;
          return G__13967;
        }();
      }(started);
    };
  };
  var interpose__2 = function(sep, coll) {
    return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
  };
  interpose = function(sep, coll) {
    switch(arguments.length) {
      case 1:
        return interpose__1.call(this, sep);
      case 2:
        return interpose__2.call(this, sep, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
  interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
  return interpose;
}();
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__13976__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__13976 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__13977__i = 0, G__13977__a = new Array(arguments.length - 1);
        while (G__13977__i < G__13977__a.length) {
          G__13977__a[G__13977__i] = arguments[G__13977__i + 1];
          ++G__13977__i;
        }
        colls = new cljs.core.IndexedSeq(G__13977__a, 0);
      }
      return G__13976__delegate.call(this, f, colls);
    };
    G__13976.cljs$lang$maxFixedArity = 1;
    G__13976.cljs$lang$applyTo = function(arglist__13978) {
      var f = cljs.core.first(arglist__13978);
      var colls = cljs.core.rest(arglist__13978);
      return G__13976__delegate(f, colls);
    };
    G__13976.cljs$core$IFn$_invoke$arity$variadic = G__13976__delegate;
    return G__13976;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        var G__13979 = null;
        if (arguments.length > 1) {
          var G__13980__i = 0, G__13980__a = new Array(arguments.length - 1);
          while (G__13980__i < G__13980__a.length) {
            G__13980__a[G__13980__i] = arguments[G__13980__i + 1];
            ++G__13980__i;
          }
          G__13979 = new cljs.core.IndexedSeq(G__13980__a, 0);
        }
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__13979);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__13999 = null;
        var G__13999__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__13999__1 = function(result) {
          var G__13993 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13993) : rf.call(null, G__13993);
        };
        var G__13999__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__13994 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13994) : pred.call(null, G__13994);
          }())) {
            var G__13995 = result;
            var G__13996 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13995, G__13996) : rf.call(null, G__13995, G__13996);
          } else {
            return result;
          }
        };
        G__13999 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__13999__0.call(this);
            case 1:
              return G__13999__1.call(this, result);
            case 2:
              return G__13999__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13999.cljs$core$IFn$_invoke$arity$0 = G__13999__0;
        G__13999.cljs$core$IFn$_invoke$arity$1 = G__13999__1;
        G__13999.cljs$core$IFn$_invoke$arity$2 = G__13999__2;
        return G__13999;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__9670__auto___14000 = size;
          var i_14001 = 0;
          while (true) {
            if (i_14001 < n__9670__auto___14000) {
              if (cljs.core.truth_(function() {
                var G__13997 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14001);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13997) : pred.call(null, G__13997);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14001));
              } else {
              }
              var G__14002 = i_14001 + 1;
              i_14001 = G__14002;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__13998 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13998) : pred.call(null, G__13998);
          }())) {
            return cljs.core.cons(f, filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__14009 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__14009) : branch_QMARK_.call(null, G__14009);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk, cljs.core.array_seq([function() {
        var G__14010 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__14010) : children.call(null, G__14010);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__14011_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__14011_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__14014 = to;
        if (G__14014) {
          var bit__9457__auto__ = G__14014.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__9457__auto__ || G__14014.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__14015 = to;
      if (G__14015) {
        var bit__9457__auto__ = G__14015.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__9457__auto__ || G__14015.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__14017 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14017) : f.call(null, G__14017);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__14018__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__14018 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__14019__i = 0, G__14019__a = new Array(arguments.length - 4);
        while (G__14019__i < G__14019__a.length) {
          G__14019__a[G__14019__i] = arguments[G__14019__i + 4];
          ++G__14019__i;
        }
        colls = new cljs.core.IndexedSeq(G__14019__a, 0);
      }
      return G__14018__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__14018.cljs$lang$maxFixedArity = 4;
    G__14018.cljs$lang$applyTo = function(arglist__14020) {
      var f = cljs.core.first(arglist__14020);
      arglist__14020 = cljs.core.next(arglist__14020);
      var c1 = cljs.core.first(arglist__14020);
      arglist__14020 = cljs.core.next(arglist__14020);
      var c2 = cljs.core.first(arglist__14020);
      arglist__14020 = cljs.core.next(arglist__14020);
      var c3 = cljs.core.first(arglist__14020);
      var colls = cljs.core.rest(arglist__14020);
      return G__14018__delegate(f, c1, c2, c3, colls);
    };
    G__14018.cljs$core$IFn$_invoke$arity$variadic = G__14018__delegate;
    return G__14018;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__14021 = null;
        if (arguments.length > 4) {
          var G__14022__i = 0, G__14022__a = new Array(arguments.length - 4);
          while (G__14022__i < G__14022__a.length) {
            G__14022__a[G__14022__i] = arguments[G__14022__i + 4];
            ++G__14022__i;
          }
          G__14021 = new cljs.core.IndexedSeq(G__14022__a, 0);
        }
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__14021);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__14024 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14024) : pred.call(null, G__14024);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__14039 = m__$1;
          if (G__14039) {
            var bit__9464__auto__ = G__14039.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__9464__auto__ || G__14039.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__14039.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__14039);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__14039);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__14040 = sentinel;
            var G__14041 = m__$2;
            var G__14042 = cljs.core.next(ks__$1);
            sentinel = G__14040;
            m__$1 = G__14041;
            ks__$1 = G__14042;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__14043, v) {
  var vec__14048 = p__14043;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14048, 0, null);
  var ks = cljs.core.nthnext(vec__14048, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__14049, f) {
    var vec__14087 = p__14049;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14087, 0, null);
    var ks = cljs.core.nthnext(vec__14087, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__14088 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14088) : f.call(null, G__14088);
      }());
    }
  };
  var update_in__4 = function(m, p__14050, f, a) {
    var vec__14089 = p__14050;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14089, 0, null);
    var ks = cljs.core.nthnext(vec__14089, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__14090 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__14091 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14090, G__14091) : f.call(null, G__14090, G__14091);
      }());
    }
  };
  var update_in__5 = function(m, p__14051, f, a, b) {
    var vec__14092 = p__14051;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14092, 0, null);
    var ks = cljs.core.nthnext(vec__14092, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__14093 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__14094 = a;
        var G__14095 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14093, G__14094, G__14095) : f.call(null, G__14093, G__14094, G__14095);
      }());
    }
  };
  var update_in__6 = function(m, p__14052, f, a, b, c) {
    var vec__14096 = p__14052;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14096, 0, null);
    var ks = cljs.core.nthnext(vec__14096, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__14097 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__14098 = a;
        var G__14099 = b;
        var G__14100 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14097, G__14098, G__14099, G__14100) : f.call(null, G__14097, G__14098, G__14099, G__14100);
      }());
    }
  };
  var update_in__7 = function() {
    var G__14102__delegate = function(m, p__14053, f, a, b, c, args) {
      var vec__14101 = p__14053;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14101, 0, null);
      var ks = cljs.core.nthnext(vec__14101, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__14102 = function(m, p__14053, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__14103__i = 0, G__14103__a = new Array(arguments.length - 6);
        while (G__14103__i < G__14103__a.length) {
          G__14103__a[G__14103__i] = arguments[G__14103__i + 6];
          ++G__14103__i;
        }
        args = new cljs.core.IndexedSeq(G__14103__a, 0);
      }
      return G__14102__delegate.call(this, m, p__14053, f, a, b, c, args);
    };
    G__14102.cljs$lang$maxFixedArity = 6;
    G__14102.cljs$lang$applyTo = function(arglist__14104) {
      var m = cljs.core.first(arglist__14104);
      arglist__14104 = cljs.core.next(arglist__14104);
      var p__14053 = cljs.core.first(arglist__14104);
      arglist__14104 = cljs.core.next(arglist__14104);
      var f = cljs.core.first(arglist__14104);
      arglist__14104 = cljs.core.next(arglist__14104);
      var a = cljs.core.first(arglist__14104);
      arglist__14104 = cljs.core.next(arglist__14104);
      var b = cljs.core.first(arglist__14104);
      arglist__14104 = cljs.core.next(arglist__14104);
      var c = cljs.core.first(arglist__14104);
      var args = cljs.core.rest(arglist__14104);
      return G__14102__delegate(m, p__14053, f, a, b, c, args);
    };
    G__14102.cljs$core$IFn$_invoke$arity$variadic = G__14102__delegate;
    return G__14102;
  }();
  update_in = function(m, p__14053, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__14053, f);
      case 4:
        return update_in__4.call(this, m, p__14053, f, a);
      case 5:
        return update_in__5.call(this, m, p__14053, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__14053, f, a, b, c);
      default:
        var G__14105 = null;
        if (arguments.length > 6) {
          var G__14106__i = 0, G__14106__a = new Array(arguments.length - 6);
          while (G__14106__i < G__14106__a.length) {
            G__14106__a[G__14106__i] = arguments[G__14106__i + 6];
            ++G__14106__i;
          }
          G__14105 = new cljs.core.IndexedSeq(G__14106__a, 0);
        }
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__14053, f, a, b, c, G__14105);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14117 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14117) : f.call(null, G__14117);
    }());
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14118 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__14119 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14118, G__14119) : f.call(null, G__14118, G__14119);
    }());
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14120 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__14121 = x;
      var G__14122 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14120, G__14121, G__14122) : f.call(null, G__14120, G__14121, G__14122);
    }());
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14123 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__14124 = x;
      var G__14125 = y;
      var G__14126 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14123, G__14124, G__14125, G__14126) : f.call(null, G__14123, G__14124, G__14125, G__14126);
    }());
  };
  var update__7 = function() {
    var G__14127__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__14127 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__14128__i = 0, G__14128__a = new Array(arguments.length - 6);
        while (G__14128__i < G__14128__a.length) {
          G__14128__a[G__14128__i] = arguments[G__14128__i + 6];
          ++G__14128__i;
        }
        more = new cljs.core.IndexedSeq(G__14128__a, 0);
      }
      return G__14127__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__14127.cljs$lang$maxFixedArity = 6;
    G__14127.cljs$lang$applyTo = function(arglist__14129) {
      var m = cljs.core.first(arglist__14129);
      arglist__14129 = cljs.core.next(arglist__14129);
      var k = cljs.core.first(arglist__14129);
      arglist__14129 = cljs.core.next(arglist__14129);
      var f = cljs.core.first(arglist__14129);
      arglist__14129 = cljs.core.next(arglist__14129);
      var x = cljs.core.first(arglist__14129);
      arglist__14129 = cljs.core.next(arglist__14129);
      var y = cljs.core.first(arglist__14129);
      arglist__14129 = cljs.core.next(arglist__14129);
      var z = cljs.core.first(arglist__14129);
      var more = cljs.core.rest(arglist__14129);
      return G__14127__delegate(m, k, f, x, y, z, more);
    };
    G__14127.cljs$core$IFn$_invoke$arity$variadic = G__14127__delegate;
    return G__14127;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        var G__14130 = null;
        if (arguments.length > 6) {
          var G__14131__i = 0, G__14131__a = new Array(arguments.length - 6);
          while (G__14131__i < G__14131__a.length) {
            G__14131__a[G__14131__i] = arguments[G__14131__i + 6];
            ++G__14131__i;
          }
          G__14130 = new cljs.core.IndexedSeq(G__14131__a, 0);
        }
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__14130);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__14132 = ll - 5;
      var G__14133 = r;
      ll = G__14132;
      ret = G__14133;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__14138 = cljs.core.pv_aget(node, 0);
      var G__14139 = level - 5;
      node = G__14138;
      level = G__14139;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__14140 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__14141 = level - 5;
        node = G__14140;
        level = G__14141;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__14151 = init__$2;
              var G__14152 = j + i;
              var G__14153 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14151, G__14152, G__14153) : f.call(null, G__14151, G__14152, G__14153);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__14164 = j + 1;
              var G__14165 = init__$3;
              j = G__14164;
              init__$2 = G__14165;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__14154 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14154) : cljs.core.deref.call(null, G__14154);
      } else {
        var G__14166 = i + len;
        var G__14167 = init__$2;
        i = G__14166;
        init__$1 = G__14167;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__14155 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__14155) : cljs.core.tv_editable_root.call(null, G__14155);
  }(), function() {
    var G__14156 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__14156) : cljs.core.tv_editable_tail.call(null, G__14156);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__14157 = init__$2;
              var G__14158 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14157, G__14158) : f.call(null, G__14157, G__14158);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__14168 = j + 1;
              var G__14169 = init__$3;
              j = G__14168;
              init__$2 = G__14169;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__14159 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14159) : cljs.core.deref.call(null, G__14159);
      } else {
        var G__14170 = i + len;
        var G__14171 = init__$2;
        i = G__14170;
        init__$1 = G__14171;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__14160 = coll__$1;
      var G__14161 = cljs.core.first_array_for_longvec(coll__$1);
      var G__14162 = 0;
      var G__14163 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14160, G__14161, G__14162, G__14163) : cljs.core.chunked_seq.call(null, G__14160, G__14161, G__14162, G__14163);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__9670__auto___14172 = len;
    var i_14173 = 0;
    while (true) {
      if (i_14173 < n__9670__auto___14172) {
        new_tail[i_14173] = self__.tail[i_14173];
        var G__14174 = i_14173 + 1;
        i_14173 = G__14174;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__14175 = null;
  var G__14175__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__14175__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__14175 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14175__2.call(this, self__, k);
      case 3:
        return G__14175__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14175.cljs$core$IFn$_invoke$arity$2 = G__14175__2;
  G__14175.cljs$core$IFn$_invoke$arity$3 = G__14175__3;
  return G__14175;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args14150) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14150)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__14176 = i + 1;
        var G__14177 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__14176;
        out = G__14177;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.vec = function vec(coll) {
  if (coll instanceof Array) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__14178__i = 0, G__14178__a = new Array(arguments.length - 0);
      while (G__14178__i < G__14178__a.length) {
        G__14178__a[G__14178__i] = arguments[G__14178__i + 0];
        ++G__14178__i;
      }
      args = new cljs.core.IndexedSeq(G__14178__a, 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__14179) {
    var args = cljs.core.seq(arglist__14179);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__14180 = self__.vec;
      var G__14181 = self__.node;
      var G__14182 = self__.i;
      var G__14183 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14180, G__14181, G__14182, G__14183) : cljs.core.chunked_seq.call(null, G__14180, G__14181, G__14182, G__14183);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__14184 = self__.vec;
    var G__14185 = self__.i + self__.off;
    var G__14186 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14184, G__14185, G__14186) : cljs.core.subvec.call(null, G__14184, G__14185, G__14186);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__14187 = self__.vec;
    var G__14188 = self__.i + self__.off;
    var G__14189 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__14187, G__14188, G__14189) : cljs.core.subvec.call(null, G__14187, G__14188, G__14189);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__14190 = self__.vec;
      var G__14191 = self__.node;
      var G__14192 = self__.i;
      var G__14193 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14190, G__14191, G__14192, G__14193) : cljs.core.chunked_seq.call(null, G__14190, G__14191, G__14192, G__14193);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__14194 = self__.vec;
    var G__14195 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__14196 = end;
    var G__14197 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14194, G__14195, G__14196, G__14197) : cljs.core.chunked_seq.call(null, G__14194, G__14195, G__14196, G__14197);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__14198 = self__.vec;
  var G__14199 = self__.node;
  var G__14200 = self__.i;
  var G__14201 = self__.off;
  var G__14202 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__14198, G__14199, G__14200, G__14201, G__14202) : cljs.core.chunked_seq.call(null, G__14198, G__14199, G__14200, G__14201, G__14202);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__14203 = self__.vec;
    var G__14204 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__14205 = end;
    var G__14206 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__14203, G__14204, G__14205, G__14206) : cljs.core.chunked_seq.call(null, G__14203, G__14204, G__14205, G__14206);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__14208 = self__.meta;
  var G__14209 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__14210 = self__.start;
  var G__14211 = function() {
    var x__9100__auto__ = self__.end;
    var y__9101__auto__ = v_pos + 1;
    return x__9100__auto__ > y__9101__auto__ ? x__9100__auto__ : y__9101__auto__;
  }();
  var G__14212 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14208, G__14209, G__14210, G__14211, G__14212) : cljs.core.build_subvec.call(null, G__14208, G__14209, G__14210, G__14211, G__14212);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__14213 = self__.meta;
    var G__14214 = self__.v;
    var G__14215 = self__.start;
    var G__14216 = self__.end - 1;
    var G__14217 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14213, G__14214, G__14215, G__14216, G__14217) : cljs.core.build_subvec.call(null, G__14213, G__14214, G__14215, G__14216, G__14217);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__14219 = meta__$1;
  var G__14220 = self__.v;
  var G__14221 = self__.start;
  var G__14222 = self__.end;
  var G__14223 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14219, G__14220, G__14221, G__14222, G__14223) : cljs.core.build_subvec.call(null, G__14219, G__14220, G__14221, G__14222, G__14223);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__14224 = self__.meta;
  var G__14225 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__14226 = self__.start;
  var G__14227 = self__.end + 1;
  var G__14228 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__14224, G__14225, G__14226, G__14227, G__14228) : cljs.core.build_subvec.call(null, G__14224, G__14225, G__14226, G__14227, G__14228);
};
cljs.core.Subvec.prototype.call = function() {
  var G__14229 = null;
  var G__14229__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__14229__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__14229 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14229__2.call(this, self__, k);
      case 3:
        return G__14229__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14229.cljs$core$IFn$_invoke$arity$2 = G__14229__2;
  G__14229.cljs$core$IFn$_invoke$arity$3 = G__14229__3;
  return G__14229;
}();
cljs.core.Subvec.prototype.apply = function(self__, args14207) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14207)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__14230 = meta;
      var G__14231 = v.v;
      var G__14232 = v.start + start;
      var G__14233 = v.start + end;
      var G__14234 = __hash;
      meta = G__14230;
      v = G__14231;
      start = G__14232;
      end = G__14233;
      __hash = G__14234;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj14241 = {};
    return obj14241;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__14249 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__14250 = level - 5;
        node = G__14249;
        level = G__14250;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__14254 = null;
  var G__14254__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14254__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14254 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14254__2.call(this, self__, k);
      case 3:
        return G__14254__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14254.cljs$core$IFn$_invoke$arity$2 = G__14254__2;
  G__14254.cljs$core$IFn$_invoke$arity$3 = G__14254__3;
  return G__14254;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args14251) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14251)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__8783__auto__ = self__.front;
    if (cljs.core.truth_(or__8783__auto__)) {
      return or__8783__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__8783__auto__ = self__.rear;
      if (cljs.core.truth_(or__8783__auto__)) {
        return or__8783__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__14255 = i + incr;
        i = G__14255;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__14256 = i + 1;
      var G__14257 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__14256;
      out = G__14257;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj14261 = {};
    return obj14261;
  }();
  var l = ks.length;
  var i_14262 = 0;
  while (true) {
    if (i_14262 < l) {
      var k_14263 = ks[i_14262];
      new_obj[k_14263] = obj[k_14263];
      var G__14264 = i_14262 + 1;
      i_14262 = G__14264;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__8771__auto__ = function() {
      var G__14268 = k;
      return goog.isString(G__14268);
    }();
    if (cljs.core.truth_(and__8771__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__8771__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__14269 = init__$1;
        var G__14270 = k;
        var G__14271 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14269, G__14270, G__14271) : f.call(null, G__14269, G__14270, G__14271);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__14272 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14272) : cljs.core.deref.call(null, G__14272);
      } else {
        var G__14278 = cljs.core.rest(keys__$1);
        var G__14279 = init__$2;
        keys__$1 = G__14278;
        init__$1 = G__14279;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__8771__auto__ = function() {
      var G__14274 = k;
      return goog.isString(G__14274);
    }();
    if (cljs.core.truth_(and__8771__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__8771__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__14275 = k;
    return goog.isString(G__14275);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__8771__auto__ = function() {
      var G__14277 = k;
      return goog.isString(G__14277);
    }();
    if (cljs.core.truth_(and__8771__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__8771__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__14265_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__14265_SHARP_, self__.strobj[p1__14265_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__14280 = null;
  var G__14280__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14280__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14280 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14280__2.call(this, self__, k);
      case 3:
        return G__14280__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14280.cljs$core$IFn$_invoke$arity$2 = G__14280__2;
  G__14280.cljs$core$IFn$_invoke$arity$3 = G__14280__3;
  return G__14280;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args14266) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14266)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj14282 = {};
  return obj14282;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__14283 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14283, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14283, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__14284 = i + 2;
        i = G__14284;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__14285 = i + 2;
        i = G__14285;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__14286 = i + 2;
        i = G__14286;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__14287 = i + 2;
        i = G__14287;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__14288 = i + 2;
        i = G__14288;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__8783__auto__ = function() {
        var G__14292 = k;
        return goog.isString(G__14292);
      }();
      if (cljs.core.truth_(or__8783__auto__)) {
        return or__8783__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_14293 = 0;
  while (true) {
    if (i_14293 < l) {
      narr[i_14293] = arr[i_14293];
      var G__14294 = i_14293 + 1;
      i_14293 = G__14294;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__14296 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__14296) : cljs.core.keys.call(null, G__14296);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__14297 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__14297) : cljs.core.vals.call(null, G__14297);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14298 = cljs.core.seq(coll);
  var chunk__14299 = null;
  var count__14300 = 0;
  var i__14301 = 0;
  while (true) {
    if (i__14301 < count__14300) {
      var vec__14302 = chunk__14299.cljs$core$IIndexed$_nth$arity$2(null, i__14301);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14302, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14302, 1, null);
      var G__14303_14316 = v;
      var G__14304_14317 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14303_14316, G__14304_14317) : f.call(null, G__14303_14316, G__14304_14317);
      var G__14318 = seq__14298;
      var G__14319 = chunk__14299;
      var G__14320 = count__14300;
      var G__14321 = i__14301 + 1;
      seq__14298 = G__14318;
      chunk__14299 = G__14319;
      count__14300 = G__14320;
      i__14301 = G__14321;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__14298);
      if (temp__4126__auto__) {
        var seq__14298__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14298__$1)) {
          var c__9570__auto__ = cljs.core.chunk_first(seq__14298__$1);
          var G__14322 = cljs.core.chunk_rest(seq__14298__$1);
          var G__14323 = c__9570__auto__;
          var G__14324 = cljs.core.count(c__9570__auto__);
          var G__14325 = 0;
          seq__14298 = G__14322;
          chunk__14299 = G__14323;
          count__14300 = G__14324;
          i__14301 = G__14325;
          continue;
        } else {
          var vec__14305 = cljs.core.first(seq__14298__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14305, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14305, 1, null);
          var G__14306_14326 = v;
          var G__14307_14327 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14306_14326, G__14307_14327) : f.call(null, G__14306_14326, G__14307_14327);
          var G__14328 = cljs.core.next(seq__14298__$1);
          var G__14329 = null;
          var G__14330 = 0;
          var G__14331 = 0;
          seq__14298 = G__14328;
          chunk__14299 = G__14329;
          count__14300 = G__14330;
          i__14301 = G__14331;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__14308 = init__$1;
        var G__14309 = self__.arr[i];
        var G__14310 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14308, G__14309, G__14310) : f.call(null, G__14308, G__14309, G__14310);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__14311 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14311) : cljs.core.deref.call(null, G__14311);
      } else {
        var G__14332 = i + 2;
        var G__14333 = init__$2;
        i = G__14332;
        init__$1 = G__14333;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__14312 = other;
    if (G__14312) {
      var bit__9457__auto__ = G__14312.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__9457__auto__ || G__14312.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__14334 = i + 2;
              i = G__14334;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj14314 = {};
    return obj14314;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__14335 = s + 2;
            var G__14336 = d;
            s = G__14335;
            d = G__14336;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__14337 = s + 2;
            var G__14338 = d + 2;
            s = G__14337;
            d = G__14338;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__14315 = cljs.core.aclone(self__.arr);
        G__14315[idx + 1] = v;
        return G__14315;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__14339 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__14340 = cljs.core.next(es);
          ret = G__14339;
          es = G__14340;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__14341 = null;
  var G__14341__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14341__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14341 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14341__2.call(this, self__, k);
      case 3:
        return G__14341__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14341.cljs$core$IFn$_invoke$arity$2 = G__14341__2;
  G__14341.cljs$core$IFn$_invoke$arity$3 = G__14341__3;
  return G__14341;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args14295) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14295)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__14342 = i + 2;
        var G__14343 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__14342;
        ret = G__14343;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__14344_14352 = self__.arr;
      G__14344_14352.pop();
      G__14344_14352.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__14345 = self__.len;
          var G__14346 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__14345, G__14346) : cljs.core.array__GT_transient_hash_map.call(null, G__14345, G__14346);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__14347 = o;
      if (G__14347) {
        var bit__9464__auto__ = G__14347.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__9464__auto__ || G__14347.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__14347.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__14347);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__14347);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__14348 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14348) : cljs.core.key.call(null, G__14348);
      }(), function() {
        var G__14349 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14349) : cljs.core.val.call(null, G__14349);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__14353 = cljs.core.next(es);
          var G__14354 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__14350 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14350) : cljs.core.key.call(null, G__14350);
          }(), function() {
            var G__14351 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14351) : cljs.core.val.call(null, G__14351);
          }());
          es = G__14353;
          tcoll__$2 = G__14354;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__14355 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__14356 = i + 2;
      out = G__14355;
      i = G__14356;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__14359 = cljs.core.aclone(arr);
    G__14359[i] = a;
    return G__14359;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__14360 = cljs.core.aclone(arr);
    G__14360[i] = a;
    G__14360[j] = b;
    return G__14360;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__14365 = init__$1;
          var G__14366 = k;
          var G__14367 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14365, G__14366, G__14367) : f.call(null, G__14365, G__14366, G__14367);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__14368 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14368) : cljs.core.deref.call(null, G__14368);
      } else {
        var G__14369 = i + 2;
        var G__14370 = init__$2;
        i = G__14369;
        init__$1 = G__14370;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__14371 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__14371) : cljs.core.create_inode_seq.call(null, G__14371);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_14385 = 0;
        var j_14386 = 0;
        while (true) {
          if (i_14385 < 32) {
            if ((self__.bitmap >>> i_14385 & 1) === 0) {
              var G__14387 = i_14385 + 1;
              var G__14388 = j_14386;
              i_14385 = G__14387;
              j_14386 = G__14388;
              continue;
            } else {
              nodes[i_14385] = !(self__.arr[j_14386] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_14386]), self__.arr[j_14386], self__.arr[j_14386 + 1], added_leaf_QMARK_) : self__.arr[j_14386 + 1];
              var G__14389 = i_14385 + 1;
              var G__14390 = j_14386 + 2;
              i_14385 = G__14389;
              j_14386 = G__14390;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__14372 = edit__$1;
          var G__14373 = shift + 5;
          var G__14374 = key_or_nil;
          var G__14375 = val_or_node;
          var G__14376 = hash;
          var G__14377 = key;
          var G__14378 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__14372, G__14373, G__14374, G__14375, G__14376, G__14377, G__14378) : cljs.core.create_node.call(null, G__14372, G__14373, G__14374, G__14375, G__14376, G__14377, G__14378);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_14391 = 0;
      var j_14392 = 0;
      while (true) {
        if (i_14391 < 32) {
          if ((self__.bitmap >>> i_14391 & 1) === 0) {
            var G__14393 = i_14391 + 1;
            var G__14394 = j_14392;
            i_14391 = G__14393;
            j_14392 = G__14394;
            continue;
          } else {
            nodes[i_14391] = !(self__.arr[j_14392] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_14392]), self__.arr[j_14392], self__.arr[j_14392 + 1], added_leaf_QMARK_) : self__.arr[j_14392 + 1];
            var G__14395 = i_14391 + 1;
            var G__14396 = j_14392 + 2;
            i_14391 = G__14395;
            j_14392 = G__14396;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__14379 = shift + 5;
          var G__14380 = key_or_nil;
          var G__14381 = val_or_node;
          var G__14382 = hash;
          var G__14383 = key;
          var G__14384 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__14379, G__14380, G__14381, G__14382, G__14383, G__14384) : cljs.core.create_node.call(null, G__14379, G__14380, G__14381, G__14382, G__14383, G__14384);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__14397 = i + 1;
        var G__14398 = j + 2;
        var G__14399 = bitmap | 1 << i;
        i = G__14397;
        j = G__14398;
        bitmap = G__14399;
        continue;
      } else {
        var G__14400 = i + 1;
        var G__14401 = j;
        var G__14402 = bitmap;
        i = G__14400;
        j = G__14401;
        bitmap = G__14402;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__14403 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__14403) : cljs.core.create_array_node_seq.call(null, G__14403);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__14404 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14404) : cljs.core.deref.call(null, G__14404);
        } else {
          var G__14405 = i + 1;
          var G__14406 = init__$2;
          i = G__14405;
          init__$1 = G__14406;
          continue;
        }
      } else {
        var G__14407 = i + 1;
        var G__14408 = init__$1;
        i = G__14407;
        init__$1 = G__14408;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__14409 = i + 2;
        i = G__14409;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__14410 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__14410) : cljs.core.create_inode_seq.call(null, G__14410);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__14411 = self__.nodes;
    var G__14412 = self__.i + 2;
    var G__14413 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__14411, G__14412, G__14413) : cljs.core.create_inode_seq.call(null, G__14411, G__14412, G__14413);
  } else {
    var G__14414 = self__.nodes;
    var G__14415 = self__.i;
    var G__14416 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__14414, G__14415, G__14416) : cljs.core.create_inode_seq.call(null, G__14414, G__14415, G__14416);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__14420 = j + 2;
                j = G__14420;
                continue;
              }
            } else {
              var G__14421 = j + 2;
              j = G__14421;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__14422 = null;
  var G__14423 = self__.nodes;
  var G__14424 = self__.i;
  var G__14425 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__14422, G__14423, G__14424, G__14425) : cljs.core.create_array_node_seq.call(null, G__14422, G__14423, G__14424, G__14425);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__14430 = j + 1;
              j = G__14430;
              continue;
            }
          } else {
            var G__14431 = j + 1;
            j = G__14431;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__14433 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__14433) : cljs.core.keys.call(null, G__14433);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__14434 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__14434) : cljs.core.vals.call(null, G__14434);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14435 = cljs.core.seq(coll);
  var chunk__14436 = null;
  var count__14437 = 0;
  var i__14438 = 0;
  while (true) {
    if (i__14438 < count__14437) {
      var vec__14439 = chunk__14436.cljs$core$IIndexed$_nth$arity$2(null, i__14438);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14439, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14439, 1, null);
      var G__14440_14451 = v;
      var G__14441_14452 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14440_14451, G__14441_14452) : f.call(null, G__14440_14451, G__14441_14452);
      var G__14453 = seq__14435;
      var G__14454 = chunk__14436;
      var G__14455 = count__14437;
      var G__14456 = i__14438 + 1;
      seq__14435 = G__14453;
      chunk__14436 = G__14454;
      count__14437 = G__14455;
      i__14438 = G__14456;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__14435);
      if (temp__4126__auto__) {
        var seq__14435__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14435__$1)) {
          var c__9570__auto__ = cljs.core.chunk_first(seq__14435__$1);
          var G__14457 = cljs.core.chunk_rest(seq__14435__$1);
          var G__14458 = c__9570__auto__;
          var G__14459 = cljs.core.count(c__9570__auto__);
          var G__14460 = 0;
          seq__14435 = G__14457;
          chunk__14436 = G__14458;
          count__14437 = G__14459;
          i__14438 = G__14460;
          continue;
        } else {
          var vec__14442 = cljs.core.first(seq__14435__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14442, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14442, 1, null);
          var G__14443_14461 = v;
          var G__14444_14462 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14443_14461, G__14444_14462) : f.call(null, G__14443_14461, G__14444_14462);
          var G__14463 = cljs.core.next(seq__14435__$1);
          var G__14464 = null;
          var G__14465 = 0;
          var G__14466 = 0;
          seq__14435 = G__14463;
          chunk__14436 = G__14464;
          count__14437 = G__14465;
          i__14438 = G__14466;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__14445 = init;
    var G__14446 = null;
    var G__14447 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14445, G__14446, G__14447) : f.call(null, G__14445, G__14446, G__14447);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__14448 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14448) : cljs.core.deref.call(null, G__14448);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj14450 = {};
    return obj14450;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__14467 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__14468 = cljs.core.next(es);
          ret = G__14467;
          es = G__14468;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__14469 = null;
  var G__14469__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14469__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14469 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14469__2.call(this, self__, k);
      case 3:
        return G__14469__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14469.cljs$core$IFn$_invoke$arity$2 = G__14469__2;
  G__14469.cljs$core$IFn$_invoke$arity$3 = G__14469__3;
  return G__14469;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args14432) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14432)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__14470 = i + 2;
      var G__14471 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__14470;
      ret = G__14471;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__14472 = i + 1;
      var G__14473 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__14472;
      out = G__14473;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__14474 = o;
      if (G__14474) {
        var bit__9464__auto__ = G__14474.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__9464__auto__ || G__14474.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__14474.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__14474);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__14474);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__14475 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14475) : cljs.core.key.call(null, G__14475);
      }(), function() {
        var G__14476 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14476) : cljs.core.val.call(null, G__14476);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__14479 = cljs.core.next(es);
          var G__14480 = tcoll__$1.assoc_BANG_(function() {
            var G__14477 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14477) : cljs.core.key.call(null, G__14477);
          }(), function() {
            var G__14478 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14478) : cljs.core.val.call(null, G__14478);
          }());
          es = G__14479;
          tcoll__$1 = G__14480;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__14481 = ascending_QMARK_ ? t.left : t.right;
      var G__14482 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__14481;
      stack__$1 = G__14482;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__14495 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14495) : cljs.core.deref.call(null, G__14495);
  } else {
    var init__$2 = function() {
      var G__14496 = init__$1;
      var G__14497 = node.key;
      var G__14498 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14496, G__14497, G__14498) : f.call(null, G__14496, G__14497, G__14498);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__14499 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14499) : cljs.core.deref.call(null, G__14499);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__14500 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14500) : cljs.core.deref.call(null, G__14500);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__14502 = null;
  var G__14502__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14502__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14502 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14502__2.call(this, self__, k);
      case 3:
        return G__14502__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14502.cljs$core$IFn$_invoke$arity$2 = G__14502__2;
  G__14502.cljs$core$IFn$_invoke$arity$3 = G__14502__3;
  return G__14502;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args14501) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14501)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__14504 = null;
  var G__14504__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14504__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14504 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14504__2.call(this, self__, k);
      case 3:
        return G__14504__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14504.cljs$core$IFn$_invoke$arity$2 = G__14504__2;
  G__14504.cljs$core$IFn$_invoke$arity$3 = G__14504__3;
  return G__14504;
}();
cljs.core.RedNode.prototype.apply = function(self__, args14503) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14503)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__14517 = k;
      var G__14518 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14517, G__14518) : comp.call(null, G__14517, G__14518);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__14537 = k;
      var G__14538 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14537, G__14538) : comp.call(null, G__14537, G__14538);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__14549 = k;
    var G__14550 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14549, G__14550) : comp.call(null, G__14549, G__14550);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14552 = cljs.core.seq(coll);
  var chunk__14553 = null;
  var count__14554 = 0;
  var i__14555 = 0;
  while (true) {
    if (i__14555 < count__14554) {
      var vec__14556 = chunk__14553.cljs$core$IIndexed$_nth$arity$2(null, i__14555);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14556, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14556, 1, null);
      var G__14557_14569 = v;
      var G__14558_14570 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14557_14569, G__14558_14570) : f.call(null, G__14557_14569, G__14558_14570);
      var G__14571 = seq__14552;
      var G__14572 = chunk__14553;
      var G__14573 = count__14554;
      var G__14574 = i__14555 + 1;
      seq__14552 = G__14571;
      chunk__14553 = G__14572;
      count__14554 = G__14573;
      i__14555 = G__14574;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__14552);
      if (temp__4126__auto__) {
        var seq__14552__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14552__$1)) {
          var c__9570__auto__ = cljs.core.chunk_first(seq__14552__$1);
          var G__14575 = cljs.core.chunk_rest(seq__14552__$1);
          var G__14576 = c__9570__auto__;
          var G__14577 = cljs.core.count(c__9570__auto__);
          var G__14578 = 0;
          seq__14552 = G__14575;
          chunk__14553 = G__14576;
          count__14554 = G__14577;
          i__14555 = G__14578;
          continue;
        } else {
          var vec__14559 = cljs.core.first(seq__14552__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14559, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14559, 1, null);
          var G__14560_14579 = v;
          var G__14561_14580 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14560_14579, G__14561_14580) : f.call(null, G__14560_14579, G__14561_14580);
          var G__14581 = cljs.core.next(seq__14552__$1);
          var G__14582 = null;
          var G__14583 = 0;
          var G__14584 = 0;
          seq__14552 = G__14581;
          chunk__14553 = G__14582;
          count__14554 = G__14583;
          i__14555 = G__14584;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__14562 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__14562) : cljs.core.keys.call(null, G__14562);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__14563 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__14563) : cljs.core.vals.call(null, G__14563);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__14564 = k;
        var G__14565 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__14564, G__14565) : self__.comp.call(null, G__14564, G__14565);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__14585 = t.left;
          t = G__14585;
          continue;
        } else {
          var G__14586 = t.right;
          t = G__14586;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__14587 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__14588 = cljs.core.next(es);
          ret = G__14587;
          es = G__14588;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__14589 = null;
  var G__14589__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14589__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14589 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14589__2.call(this, self__, k);
      case 3:
        return G__14589__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14589.cljs$core$IFn$_invoke$arity$2 = G__14589__2;
  G__14589.cljs$core$IFn$_invoke$arity$3 = G__14589__3;
  return G__14589;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args14551) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14551)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__14566 = k;
          var G__14567 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__14566, G__14567) : self__.comp.call(null, G__14566, G__14567);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__14590 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__14591 = t.left;
              stack = G__14590;
              t = G__14591;
              continue;
            } else {
              var G__14592 = stack;
              var G__14593 = t.right;
              stack = G__14592;
              t = G__14593;
              continue;
            }
          } else {
            if (c > 0) {
              var G__14594 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__14595 = t.right;
              stack = G__14594;
              t = G__14595;
              continue;
            } else {
              var G__14596 = stack;
              var G__14597 = t.left;
              stack = G__14596;
              t = G__14597;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__14568 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14568) : cljs.core.key.call(null, G__14568);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__14598 = cljs.core.nnext(in$);
        var G__14599 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__14598;
        out = G__14599;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__14600__i = 0, G__14600__a = new Array(arguments.length - 0);
      while (G__14600__i < G__14600__a.length) {
        G__14600__a[G__14600__i] = arguments[G__14600__i + 0];
        ++G__14600__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__14600__a, 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__14601) {
    var keyvals = cljs.core.seq(arglist__14601);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__14602__i = 0, G__14602__a = new Array(arguments.length - 0);
      while (G__14602__i < G__14602__a.length) {
        G__14602__a[G__14602__i] = arguments[G__14602__i + 0];
        ++G__14602__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__14602__a, 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__14603) {
    var keyvals = cljs.core.seq(arglist__14603);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj14607 = {};
      return obj14607;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__14608 = cljs.core.nnext(kvs);
        kvs = G__14608;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__14609__i = 0, G__14609__a = new Array(arguments.length - 0);
      while (G__14609__i < G__14609__a.length) {
        G__14609__a[G__14609__i] = arguments[G__14609__i + 0];
        ++G__14609__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__14609__a, 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__14610) {
    var keyvals = cljs.core.seq(arglist__14610);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__14611 = cljs.core.nnext(in$);
        var G__14612 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__14611;
        out = G__14612;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__14613__i = 0, G__14613__a = new Array(arguments.length - 0);
      while (G__14613__i < G__14613__a.length) {
        G__14613__a[G__14613__i] = arguments[G__14613__i + 0];
        ++G__14613__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__14613__a, 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__14614) {
    var keyvals = cljs.core.seq(arglist__14614);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__14615 = cljs.core.nnext(in$);
        var G__14616 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__14615;
        out = G__14616;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__14617__i = 0, G__14617__a = new Array(arguments.length - 1);
      while (G__14617__i < G__14617__a.length) {
        G__14617__a[G__14617__i] = arguments[G__14617__i + 1];
        ++G__14617__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__14617__a, 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__14618) {
    var comparator = cljs.core.first(arglist__14618);
    var keyvals = cljs.core.rest(arglist__14618);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__14619 = self__.mseq;
    if (G__14619) {
      var bit__9464__auto__ = G__14619.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__9464__auto__ || G__14619.cljs$core$INext$) {
        return true;
      } else {
        if (!G__14619.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__14619);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__14619);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__14620 = self__.mseq;
    if (G__14620) {
      var bit__9464__auto__ = G__14620.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__9464__auto__ || G__14620.cljs$core$INext$) {
        return true;
      } else {
        if (!G__14620.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__14620);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__14620);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__14621 = self__.mseq;
    if (G__14621) {
      var bit__9464__auto__ = G__14621.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__9464__auto__ || G__14621.cljs$core$INext$) {
        return true;
      } else {
        if (!G__14621.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__14621);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__14621);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__14622 = self__.mseq;
    if (G__14622) {
      var bit__9464__auto__ = G__14622.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__9464__auto__ || G__14622.cljs$core$INext$) {
        return true;
      } else {
        if (!G__14622.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__14622);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__14622);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__14623_SHARP_, p2__14624_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__8783__auto__ = p1__14623_SHARP_;
          if (cljs.core.truth_(or__8783__auto__)) {
            return or__8783__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__14624_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__14625__i = 0, G__14625__a = new Array(arguments.length - 0);
      while (G__14625__i < G__14625__a.length) {
        G__14625__a[G__14625__i] = arguments[G__14625__i + 0];
        ++G__14625__i;
      }
      maps = new cljs.core.IndexedSeq(G__14625__a, 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__14626) {
    var maps = cljs.core.seq(arglist__14626);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__14629 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__14630 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14629, G__14630) : f.call(null, G__14629, G__14630);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__8783__auto__ = m1;
            if (cljs.core.truth_(or__8783__auto__)) {
              return or__8783__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__14631__i = 0, G__14631__a = new Array(arguments.length - 1);
      while (G__14631__i < G__14631__a.length) {
        G__14631__a[G__14631__i] = arguments[G__14631__i + 1];
        ++G__14631__i;
      }
      maps = new cljs.core.IndexedSeq(G__14631__a, 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__14632) {
    var f = cljs.core.first(arglist__14632);
    var maps = cljs.core.rest(arglist__14632);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__14633 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__14634 = cljs.core.next(keys);
      ret = G__14633;
      keys = G__14634;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14637 = cljs.core.seq(coll);
  var chunk__14638 = null;
  var count__14639 = 0;
  var i__14640 = 0;
  while (true) {
    if (i__14640 < count__14639) {
      var vec__14641 = chunk__14638.cljs$core$IIndexed$_nth$arity$2(null, i__14640);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14641, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14641, 1, null);
      var G__14642_14647 = v;
      var G__14643_14648 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14642_14647, G__14643_14648) : f.call(null, G__14642_14647, G__14643_14648);
      var G__14649 = seq__14637;
      var G__14650 = chunk__14638;
      var G__14651 = count__14639;
      var G__14652 = i__14640 + 1;
      seq__14637 = G__14649;
      chunk__14638 = G__14650;
      count__14639 = G__14651;
      i__14640 = G__14652;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__14637);
      if (temp__4126__auto__) {
        var seq__14637__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14637__$1)) {
          var c__9570__auto__ = cljs.core.chunk_first(seq__14637__$1);
          var G__14653 = cljs.core.chunk_rest(seq__14637__$1);
          var G__14654 = c__9570__auto__;
          var G__14655 = cljs.core.count(c__9570__auto__);
          var G__14656 = 0;
          seq__14637 = G__14653;
          chunk__14638 = G__14654;
          count__14639 = G__14655;
          i__14640 = G__14656;
          continue;
        } else {
          var vec__14644 = cljs.core.first(seq__14637__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14644, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14644, 1, null);
          var G__14645_14657 = v;
          var G__14646_14658 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14645_14657, G__14646_14658) : f.call(null, G__14645_14657, G__14646_14658);
          var G__14659 = cljs.core.next(seq__14637__$1);
          var G__14660 = null;
          var G__14661 = 0;
          var G__14662 = 0;
          seq__14637 = G__14659;
          chunk__14638 = G__14660;
          count__14639 = G__14661;
          i__14640 = G__14662;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__14635_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__14635_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__14663 = null;
  var G__14663__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14663__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14663 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14663__2.call(this, self__, k);
      case 3:
        return G__14663__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14663.cljs$core$IFn$_invoke$arity$2 = G__14663__2;
  G__14663.cljs$core$IFn$_invoke$arity$3 = G__14663__3;
  return G__14663;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args14636) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14636)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__14664 = i + 1;
        var G__14665 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__14664;
        out = G__14665;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__14666 = i + 1;
        var G__14667 = cljs.core._conj_BANG_(out, items[i]);
        i = G__14666;
        out = G__14667;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__14669 = null;
  var G__14669__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__14669__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__14669 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14669__2.call(this, self__, k);
      case 3:
        return G__14669__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14669.cljs$core$IFn$_invoke$arity$2 = G__14669__2;
  G__14669.cljs$core$IFn$_invoke$arity$3 = G__14669__3;
  return G__14669;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args14668) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14668)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14672 = cljs.core.seq(coll);
  var chunk__14673 = null;
  var count__14674 = 0;
  var i__14675 = 0;
  while (true) {
    if (i__14675 < count__14674) {
      var vec__14676 = chunk__14673.cljs$core$IIndexed$_nth$arity$2(null, i__14675);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14676, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14676, 1, null);
      var G__14677_14682 = v;
      var G__14678_14683 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14677_14682, G__14678_14683) : f.call(null, G__14677_14682, G__14678_14683);
      var G__14684 = seq__14672;
      var G__14685 = chunk__14673;
      var G__14686 = count__14674;
      var G__14687 = i__14675 + 1;
      seq__14672 = G__14684;
      chunk__14673 = G__14685;
      count__14674 = G__14686;
      i__14675 = G__14687;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__14672);
      if (temp__4126__auto__) {
        var seq__14672__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14672__$1)) {
          var c__9570__auto__ = cljs.core.chunk_first(seq__14672__$1);
          var G__14688 = cljs.core.chunk_rest(seq__14672__$1);
          var G__14689 = c__9570__auto__;
          var G__14690 = cljs.core.count(c__9570__auto__);
          var G__14691 = 0;
          seq__14672 = G__14688;
          chunk__14673 = G__14689;
          count__14674 = G__14690;
          i__14675 = G__14691;
          continue;
        } else {
          var vec__14679 = cljs.core.first(seq__14672__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14679, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14679, 1, null);
          var G__14680_14692 = v;
          var G__14681_14693 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14680_14692, G__14681_14693) : f.call(null, G__14680_14692, G__14681_14693);
          var G__14694 = cljs.core.next(seq__14672__$1);
          var G__14695 = null;
          var G__14696 = 0;
          var G__14697 = 0;
          seq__14672 = G__14694;
          chunk__14673 = G__14695;
          count__14674 = G__14696;
          i__14675 = G__14697;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__14670_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__14670_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__14698 = null;
  var G__14698__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14698__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14698 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14698__2.call(this, self__, k);
      case 3:
        return G__14698__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14698.cljs$core$IFn$_invoke$arity$2 = G__14698__2;
  G__14698.cljs$core$IFn$_invoke$arity$3 = G__14698__3;
  return G__14698;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args14671) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14671)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__9664__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__9664__auto__.length) {
        var G__14699 = i + 1;
        var G__14700 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__14699;
        res = G__14700;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__14701 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__14702 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__14701;
          out = G__14702;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__14703__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__14703 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__14704__i = 0, G__14704__a = new Array(arguments.length - 0);
        while (G__14704__i < G__14704__a.length) {
          G__14704__a[G__14704__i] = arguments[G__14704__i + 0];
          ++G__14704__i;
        }
        keys = new cljs.core.IndexedSeq(G__14704__a, 0);
      }
      return G__14703__delegate.call(this, keys);
    };
    G__14703.cljs$lang$maxFixedArity = 0;
    G__14703.cljs$lang$applyTo = function(arglist__14705) {
      var keys = cljs.core.seq(arglist__14705);
      return G__14703__delegate(keys);
    };
    G__14703.cljs$core$IFn$_invoke$arity$variadic = G__14703__delegate;
    return G__14703;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        var G__14706 = null;
        if (arguments.length > 0) {
          var G__14707__i = 0, G__14707__a = new Array(arguments.length - 0);
          while (G__14707__i < G__14707__a.length) {
            G__14707__a[G__14707__i] = arguments[G__14707__i + 0];
            ++G__14707__i;
          }
          G__14706 = new cljs.core.IndexedSeq(G__14707__a, 0);
        }
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__14706);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__14708__i = 0, G__14708__a = new Array(arguments.length - 0);
      while (G__14708__i < G__14708__a.length) {
        G__14708__a[G__14708__i] = arguments[G__14708__i + 0];
        ++G__14708__i;
      }
      keys = new cljs.core.IndexedSeq(G__14708__a, 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__14709) {
    var keys = cljs.core.seq(arglist__14709);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__14710__i = 0, G__14710__a = new Array(arguments.length - 1);
      while (G__14710__i < G__14710__a.length) {
        G__14710__a[G__14710__i] = arguments[G__14710__i + 1];
        ++G__14710__i;
      }
      keys = new cljs.core.IndexedSeq(G__14710__a, 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__14711) {
    var comparator = cljs.core.first(arglist__14711);
    var keys = cljs.core.rest(arglist__14711);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__14712_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__14712_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__14712_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__14713_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__14713_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__14713_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function() {
  var distinct = null;
  var distinct__0 = function() {
    return function(rf) {
      var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
      return function(seen) {
        return function() {
          var G__14734 = null;
          var G__14734__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14734__1 = function(result) {
            var G__14724 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14724) : rf.call(null, G__14724);
          };
          var G__14734__2 = function(result, input) {
            if (cljs.core.contains_QMARK_(function() {
              var G__14725 = seen;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14725) : cljs.core.deref.call(null, G__14725);
            }(), input)) {
              return result;
            } else {
              seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
              var G__14726 = result;
              var G__14727 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14726, G__14727) : rf.call(null, G__14726, G__14727);
            }
          };
          G__14734 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14734__0.call(this);
              case 1:
                return G__14734__1.call(this, result);
              case 2:
                return G__14734__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14734.cljs$core$IFn$_invoke$arity$0 = G__14734__0;
          G__14734.cljs$core$IFn$_invoke$arity$1 = G__14734__1;
          G__14734.cljs$core$IFn$_invoke$arity$2 = G__14734__2;
          return G__14734;
        }();
      }(seen);
    };
  };
  var distinct__1 = function(coll) {
    var step = function step(xs, seen) {
      return new cljs.core.LazySeq(null, function() {
        return function(p__14732, seen__$1) {
          while (true) {
            var vec__14733 = p__14732;
            var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14733, 0, null);
            var xs__$1 = vec__14733;
            var temp__4126__auto__ = cljs.core.seq(xs__$1);
            if (temp__4126__auto__) {
              var s = temp__4126__auto__;
              if (cljs.core.contains_QMARK_(seen__$1, f)) {
                var G__14735 = cljs.core.rest(s);
                var G__14736 = seen__$1;
                p__14732 = G__14735;
                seen__$1 = G__14736;
                continue;
              } else {
                return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
              }
            } else {
              return null;
            }
            break;
          }
        }.call(null, xs, seen);
      }, null, null);
    };
    return step(coll, cljs.core.PersistentHashSet.EMPTY);
  };
  distinct = function(coll) {
    switch(arguments.length) {
      case 0:
        return distinct__0.call(this);
      case 1:
        return distinct__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
  distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
  return distinct;
}();
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__14737 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__14738 = cljs.core.next(s__$1);
      ret = G__14737;
      s__$1 = G__14738;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__14740 = x;
    if (G__14740) {
      var bit__9457__auto__ = G__14740.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__9457__auto__ || G__14740.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__14741 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__14742 = cljs.core.next(ks);
      var G__14743 = cljs.core.next(vs);
      map = G__14741;
      ks = G__14742;
      vs = G__14743;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (function() {
      var G__14754 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14754) : k.call(null, G__14754);
    }() > function() {
      var G__14755 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14755) : k.call(null, G__14755);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__14756__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__14744_SHARP_, p2__14745_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__14744_SHARP_, p2__14745_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__14756 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__14757__i = 0, G__14757__a = new Array(arguments.length - 3);
        while (G__14757__i < G__14757__a.length) {
          G__14757__a[G__14757__i] = arguments[G__14757__i + 3];
          ++G__14757__i;
        }
        more = new cljs.core.IndexedSeq(G__14757__a, 0);
      }
      return G__14756__delegate.call(this, k, x, y, more);
    };
    G__14756.cljs$lang$maxFixedArity = 3;
    G__14756.cljs$lang$applyTo = function(arglist__14758) {
      var k = cljs.core.first(arglist__14758);
      arglist__14758 = cljs.core.next(arglist__14758);
      var x = cljs.core.first(arglist__14758);
      arglist__14758 = cljs.core.next(arglist__14758);
      var y = cljs.core.first(arglist__14758);
      var more = cljs.core.rest(arglist__14758);
      return G__14756__delegate(k, x, y, more);
    };
    G__14756.cljs$core$IFn$_invoke$arity$variadic = G__14756__delegate;
    return G__14756;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        var G__14759 = null;
        if (arguments.length > 3) {
          var G__14760__i = 0, G__14760__a = new Array(arguments.length - 3);
          while (G__14760__i < G__14760__a.length) {
            G__14760__a[G__14760__i] = arguments[G__14760__i + 3];
            ++G__14760__i;
          }
          G__14759 = new cljs.core.IndexedSeq(G__14760__a, 0);
        }
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__14759);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (function() {
      var G__14771 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14771) : k.call(null, G__14771);
    }() < function() {
      var G__14772 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14772) : k.call(null, G__14772);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__14773__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__14761_SHARP_, p2__14762_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__14761_SHARP_, p2__14762_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__14773 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__14774__i = 0, G__14774__a = new Array(arguments.length - 3);
        while (G__14774__i < G__14774__a.length) {
          G__14774__a[G__14774__i] = arguments[G__14774__i + 3];
          ++G__14774__i;
        }
        more = new cljs.core.IndexedSeq(G__14774__a, 0);
      }
      return G__14773__delegate.call(this, k, x, y, more);
    };
    G__14773.cljs$lang$maxFixedArity = 3;
    G__14773.cljs$lang$applyTo = function(arglist__14775) {
      var k = cljs.core.first(arglist__14775);
      arglist__14775 = cljs.core.next(arglist__14775);
      var x = cljs.core.first(arglist__14775);
      arglist__14775 = cljs.core.next(arglist__14775);
      var y = cljs.core.first(arglist__14775);
      var more = cljs.core.rest(arglist__14775);
      return G__14773__delegate(k, x, y, more);
    };
    G__14773.cljs$core$IFn$_invoke$arity$variadic = G__14773__delegate;
    return G__14773;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        var G__14776 = null;
        if (arguments.length > 3) {
          var G__14777__i = 0, G__14777__a = new Array(arguments.length - 3);
          while (G__14777__i < G__14777__a.length) {
            G__14777__a[G__14777__i] = arguments[G__14777__i + 3];
            ++G__14777__i;
          }
          G__14776 = new cljs.core.IndexedSeq(G__14777__a, 0);
        }
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__14776);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__14794 = null;
          var G__14794__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14794__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__14789 = result;
                var G__14790 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14789, G__14790) : rf.call(null, G__14789, G__14790);
              }());
            }();
            var G__14791 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14791) : rf.call(null, G__14791);
          };
          var G__14794__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__14792 = result;
              var G__14793 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14792, G__14793) : rf.call(null, G__14792, G__14793);
            } else {
              return result;
            }
          };
          G__14794 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14794__0.call(this);
              case 1:
                return G__14794__1.call(this, result);
              case 2:
                return G__14794__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14794.cljs$core$IFn$_invoke$arity$0 = G__14794__0;
          G__14794.cljs$core$IFn$_invoke$arity$1 = G__14794__1;
          G__14794.cljs$core$IFn$_invoke$arity$2 = G__14794__2;
          return G__14794;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__14807 = null;
        var G__14807__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14807__1 = function(result) {
          var G__14802 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14802) : rf.call(null, G__14802);
        };
        var G__14807__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__14803 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14803) : pred.call(null, G__14803);
          }())) {
            var G__14804 = result;
            var G__14805 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14804, G__14805) : rf.call(null, G__14804, G__14805);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__14807 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__14807__0.call(this);
            case 1:
              return G__14807__1.call(this, result);
            case 2:
              return G__14807__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14807.cljs$core$IFn$_invoke$arity$0 = G__14807__0;
        G__14807.cljs$core$IFn$_invoke$arity$1 = G__14807__1;
        G__14807.cljs$core$IFn$_invoke$arity$2 = G__14807__2;
        return G__14807;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__14806 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14806) : pred.call(null, G__14806);
        }())) {
          return cljs.core.cons(cljs.core.first(s), take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__14812 = function() {
      var G__14814 = cljs.core._entry_key(sc, e);
      var G__14815 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14814, G__14815) : comp.call(null, G__14814, G__14815);
    }();
    var G__14813 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__14812, G__14813) : test.call(null, G__14812, G__14813);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__14819 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14819, 0, null);
        var s = vec__14819;
        if (cljs.core.truth_(function() {
          var G__14820 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__14820) : include.call(null, G__14820);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__14821 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14821, 0, null);
      var s = vec__14821;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__14825 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14825, 0, null);
        var s = vec__14825;
        if (cljs.core.truth_(function() {
          var G__14826 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__14826) : include.call(null, G__14826);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__14827 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14827, 0, null);
      var s = vec__14827;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__14828 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__14828) : Math.ceil.call(null, G__14828);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__9204__auto__ = self__.__hash;
  if (!(h__9204__auto__ == null)) {
    return h__9204__auto__;
  } else {
    var h__9204__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__9204__auto____$1;
    return h__9204__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__14829 = ret;
        var G__14830 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14829, G__14830) : f.call(null, G__14829, G__14830);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__14831 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14831) : cljs.core.deref.call(null, G__14831);
      } else {
        var G__14832 = i + self__.step;
        var G__14833 = ret__$1;
        i = G__14832;
        ret = G__14833;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__14851 = null;
          var G__14851__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14851__1 = function(result) {
            var G__14848 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14848) : rf.call(null, G__14848);
          };
          var G__14851__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__14849 = result;
              var G__14850 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14849, G__14850) : rf.call(null, G__14849, G__14850);
            } else {
              return result;
            }
          };
          G__14851 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14851__0.call(this);
              case 1:
                return G__14851__1.call(this, result);
              case 2:
                return G__14851__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14851.cljs$core$IFn$_invoke$arity$0 = G__14851__0;
          G__14851.cljs$core$IFn$_invoke$arity$1 = G__14851__1;
          G__14851.cljs$core$IFn$_invoke$arity$2 = G__14851__2;
          return G__14851;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__14873 = null;
          var G__14873__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14873__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__14864 = result;
                var G__14865 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14864, G__14865) : rf.call(null, G__14864, G__14865);
              }());
            }();
            var G__14866 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14866) : rf.call(null, G__14866);
          };
          var G__14873__2 = function(result, input) {
            var pval = function() {
              var G__14867 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14867) : cljs.core.deref.call(null, G__14867);
            }();
            var val = function() {
              var G__14868 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14868) : f.call(null, G__14868);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__14869 = result;
                var G__14870 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14869, G__14870) : rf.call(null, G__14869, G__14870);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__14873 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14873__0.call(this);
              case 1:
                return G__14873__1.call(this, result);
              case 2:
                return G__14873__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14873.cljs$core$IFn$_invoke$arity$0 = G__14873__0;
          G__14873.cljs$core$IFn$_invoke$arity$1 = G__14873__1;
          G__14873.cljs$core$IFn$_invoke$arity$2 = G__14873__2;
          return G__14873;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__14871 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14871) : f.call(null, G__14871);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__14852_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__14872 = p1__14852_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14872) : f.call(null, G__14872);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__14882 = init;
          var G__14883 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14882, G__14883) : f.call(null, G__14882, G__14883);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__14978 = null;
      var G__14978__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__14978__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14936 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14936) : f.call(null, G__14936);
        }()], null);
      };
      var G__14978__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14937 = x;
          var G__14938 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14937, G__14938) : f.call(null, G__14937, G__14938);
        }()], null);
      };
      var G__14978__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14939 = x;
          var G__14940 = y;
          var G__14941 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14939, G__14940, G__14941) : f.call(null, G__14939, G__14940, G__14941);
        }()], null);
      };
      var G__14978__4 = function() {
        var G__14979__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__14979 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14980__i = 0, G__14980__a = new Array(arguments.length - 3);
            while (G__14980__i < G__14980__a.length) {
              G__14980__a[G__14980__i] = arguments[G__14980__i + 3];
              ++G__14980__i;
            }
            args = new cljs.core.IndexedSeq(G__14980__a, 0);
          }
          return G__14979__delegate.call(this, x, y, z, args);
        };
        G__14979.cljs$lang$maxFixedArity = 3;
        G__14979.cljs$lang$applyTo = function(arglist__14981) {
          var x = cljs.core.first(arglist__14981);
          arglist__14981 = cljs.core.next(arglist__14981);
          var y = cljs.core.first(arglist__14981);
          arglist__14981 = cljs.core.next(arglist__14981);
          var z = cljs.core.first(arglist__14981);
          var args = cljs.core.rest(arglist__14981);
          return G__14979__delegate(x, y, z, args);
        };
        G__14979.cljs$core$IFn$_invoke$arity$variadic = G__14979__delegate;
        return G__14979;
      }();
      G__14978 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14978__0.call(this);
          case 1:
            return G__14978__1.call(this, x);
          case 2:
            return G__14978__2.call(this, x, y);
          case 3:
            return G__14978__3.call(this, x, y, z);
          default:
            var G__14982 = null;
            if (arguments.length > 3) {
              var G__14983__i = 0, G__14983__a = new Array(arguments.length - 3);
              while (G__14983__i < G__14983__a.length) {
                G__14983__a[G__14983__i] = arguments[G__14983__i + 3];
                ++G__14983__i;
              }
              G__14982 = new cljs.core.IndexedSeq(G__14983__a, 0);
            }
            return G__14978__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14982);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14978.cljs$lang$maxFixedArity = 3;
      G__14978.cljs$lang$applyTo = G__14978__4.cljs$lang$applyTo;
      G__14978.cljs$core$IFn$_invoke$arity$0 = G__14978__0;
      G__14978.cljs$core$IFn$_invoke$arity$1 = G__14978__1;
      G__14978.cljs$core$IFn$_invoke$arity$2 = G__14978__2;
      G__14978.cljs$core$IFn$_invoke$arity$3 = G__14978__3;
      G__14978.cljs$core$IFn$_invoke$arity$variadic = G__14978__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14978;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__14984 = null;
      var G__14984__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__14984__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14942 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14942) : f.call(null, G__14942);
        }(), function() {
          var G__14943 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14943) : g.call(null, G__14943);
        }()], null);
      };
      var G__14984__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14944 = x;
          var G__14945 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14944, G__14945) : f.call(null, G__14944, G__14945);
        }(), function() {
          var G__14946 = x;
          var G__14947 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14946, G__14947) : g.call(null, G__14946, G__14947);
        }()], null);
      };
      var G__14984__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14948 = x;
          var G__14949 = y;
          var G__14950 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14948, G__14949, G__14950) : f.call(null, G__14948, G__14949, G__14950);
        }(), function() {
          var G__14951 = x;
          var G__14952 = y;
          var G__14953 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14951, G__14952, G__14953) : g.call(null, G__14951, G__14952, G__14953);
        }()], null);
      };
      var G__14984__4 = function() {
        var G__14985__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__14985 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14986__i = 0, G__14986__a = new Array(arguments.length - 3);
            while (G__14986__i < G__14986__a.length) {
              G__14986__a[G__14986__i] = arguments[G__14986__i + 3];
              ++G__14986__i;
            }
            args = new cljs.core.IndexedSeq(G__14986__a, 0);
          }
          return G__14985__delegate.call(this, x, y, z, args);
        };
        G__14985.cljs$lang$maxFixedArity = 3;
        G__14985.cljs$lang$applyTo = function(arglist__14987) {
          var x = cljs.core.first(arglist__14987);
          arglist__14987 = cljs.core.next(arglist__14987);
          var y = cljs.core.first(arglist__14987);
          arglist__14987 = cljs.core.next(arglist__14987);
          var z = cljs.core.first(arglist__14987);
          var args = cljs.core.rest(arglist__14987);
          return G__14985__delegate(x, y, z, args);
        };
        G__14985.cljs$core$IFn$_invoke$arity$variadic = G__14985__delegate;
        return G__14985;
      }();
      G__14984 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14984__0.call(this);
          case 1:
            return G__14984__1.call(this, x);
          case 2:
            return G__14984__2.call(this, x, y);
          case 3:
            return G__14984__3.call(this, x, y, z);
          default:
            var G__14988 = null;
            if (arguments.length > 3) {
              var G__14989__i = 0, G__14989__a = new Array(arguments.length - 3);
              while (G__14989__i < G__14989__a.length) {
                G__14989__a[G__14989__i] = arguments[G__14989__i + 3];
                ++G__14989__i;
              }
              G__14988 = new cljs.core.IndexedSeq(G__14989__a, 0);
            }
            return G__14984__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14988);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14984.cljs$lang$maxFixedArity = 3;
      G__14984.cljs$lang$applyTo = G__14984__4.cljs$lang$applyTo;
      G__14984.cljs$core$IFn$_invoke$arity$0 = G__14984__0;
      G__14984.cljs$core$IFn$_invoke$arity$1 = G__14984__1;
      G__14984.cljs$core$IFn$_invoke$arity$2 = G__14984__2;
      G__14984.cljs$core$IFn$_invoke$arity$3 = G__14984__3;
      G__14984.cljs$core$IFn$_invoke$arity$variadic = G__14984__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14984;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__14990 = null;
      var G__14990__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__14990__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14954 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14954) : f.call(null, G__14954);
        }(), function() {
          var G__14955 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14955) : g.call(null, G__14955);
        }(), function() {
          var G__14956 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__14956) : h.call(null, G__14956);
        }()], null);
      };
      var G__14990__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14957 = x;
          var G__14958 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14957, G__14958) : f.call(null, G__14957, G__14958);
        }(), function() {
          var G__14959 = x;
          var G__14960 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14959, G__14960) : g.call(null, G__14959, G__14960);
        }(), function() {
          var G__14961 = x;
          var G__14962 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__14961, G__14962) : h.call(null, G__14961, G__14962);
        }()], null);
      };
      var G__14990__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14963 = x;
          var G__14964 = y;
          var G__14965 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14963, G__14964, G__14965) : f.call(null, G__14963, G__14964, G__14965);
        }(), function() {
          var G__14966 = x;
          var G__14967 = y;
          var G__14968 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14966, G__14967, G__14968) : g.call(null, G__14966, G__14967, G__14968);
        }(), function() {
          var G__14969 = x;
          var G__14970 = y;
          var G__14971 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__14969, G__14970, G__14971) : h.call(null, G__14969, G__14970, G__14971);
        }()], null);
      };
      var G__14990__4 = function() {
        var G__14991__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__14991 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14992__i = 0, G__14992__a = new Array(arguments.length - 3);
            while (G__14992__i < G__14992__a.length) {
              G__14992__a[G__14992__i] = arguments[G__14992__i + 3];
              ++G__14992__i;
            }
            args = new cljs.core.IndexedSeq(G__14992__a, 0);
          }
          return G__14991__delegate.call(this, x, y, z, args);
        };
        G__14991.cljs$lang$maxFixedArity = 3;
        G__14991.cljs$lang$applyTo = function(arglist__14993) {
          var x = cljs.core.first(arglist__14993);
          arglist__14993 = cljs.core.next(arglist__14993);
          var y = cljs.core.first(arglist__14993);
          arglist__14993 = cljs.core.next(arglist__14993);
          var z = cljs.core.first(arglist__14993);
          var args = cljs.core.rest(arglist__14993);
          return G__14991__delegate(x, y, z, args);
        };
        G__14991.cljs$core$IFn$_invoke$arity$variadic = G__14991__delegate;
        return G__14991;
      }();
      G__14990 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14990__0.call(this);
          case 1:
            return G__14990__1.call(this, x);
          case 2:
            return G__14990__2.call(this, x, y);
          case 3:
            return G__14990__3.call(this, x, y, z);
          default:
            var G__14994 = null;
            if (arguments.length > 3) {
              var G__14995__i = 0, G__14995__a = new Array(arguments.length - 3);
              while (G__14995__i < G__14995__a.length) {
                G__14995__a[G__14995__i] = arguments[G__14995__i + 3];
                ++G__14995__i;
              }
              G__14994 = new cljs.core.IndexedSeq(G__14995__a, 0);
            }
            return G__14990__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14994);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14990.cljs$lang$maxFixedArity = 3;
      G__14990.cljs$lang$applyTo = G__14990__4.cljs$lang$applyTo;
      G__14990.cljs$core$IFn$_invoke$arity$0 = G__14990__0;
      G__14990.cljs$core$IFn$_invoke$arity$1 = G__14990__1;
      G__14990.cljs$core$IFn$_invoke$arity$2 = G__14990__2;
      G__14990.cljs$core$IFn$_invoke$arity$3 = G__14990__3;
      G__14990.cljs$core$IFn$_invoke$arity$variadic = G__14990__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14990;
    }();
  };
  var juxt__4 = function() {
    var G__14996__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__14997 = null;
          var G__14997__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__14884_SHARP_, p2__14885_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14884_SHARP_, function() {
                  return p2__14885_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__14885_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__14885_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__14997__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__14886_SHARP_, p2__14887_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14886_SHARP_, function() {
                  var G__14972 = x;
                  return p2__14887_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__14887_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14972) : p2__14887_SHARP_.call(null, G__14972);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__14997__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__14888_SHARP_, p2__14889_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14888_SHARP_, function() {
                  var G__14973 = x;
                  var G__14974 = y;
                  return p2__14889_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__14889_SHARP_.cljs$core$IFn$_invoke$arity$2(G__14973, G__14974) : p2__14889_SHARP_.call(null, G__14973, G__14974);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__14997__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__14890_SHARP_, p2__14891_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14890_SHARP_, function() {
                  var G__14975 = x;
                  var G__14976 = y;
                  var G__14977 = z;
                  return p2__14891_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__14891_SHARP_.cljs$core$IFn$_invoke$arity$3(G__14975, G__14976, G__14977) : p2__14891_SHARP_.call(null, G__14975, G__14976, G__14977);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__14997__4 = function() {
            var G__14998__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__14892_SHARP_, p2__14893_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14892_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__14893_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__14998 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__14999__i = 0, G__14999__a = new Array(arguments.length - 3);
                while (G__14999__i < G__14999__a.length) {
                  G__14999__a[G__14999__i] = arguments[G__14999__i + 3];
                  ++G__14999__i;
                }
                args = new cljs.core.IndexedSeq(G__14999__a, 0);
              }
              return G__14998__delegate.call(this, x, y, z, args);
            };
            G__14998.cljs$lang$maxFixedArity = 3;
            G__14998.cljs$lang$applyTo = function(arglist__15000) {
              var x = cljs.core.first(arglist__15000);
              arglist__15000 = cljs.core.next(arglist__15000);
              var y = cljs.core.first(arglist__15000);
              arglist__15000 = cljs.core.next(arglist__15000);
              var z = cljs.core.first(arglist__15000);
              var args = cljs.core.rest(arglist__15000);
              return G__14998__delegate(x, y, z, args);
            };
            G__14998.cljs$core$IFn$_invoke$arity$variadic = G__14998__delegate;
            return G__14998;
          }();
          G__14997 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__14997__0.call(this);
              case 1:
                return G__14997__1.call(this, x);
              case 2:
                return G__14997__2.call(this, x, y);
              case 3:
                return G__14997__3.call(this, x, y, z);
              default:
                var G__15001 = null;
                if (arguments.length > 3) {
                  var G__15002__i = 0, G__15002__a = new Array(arguments.length - 3);
                  while (G__15002__i < G__15002__a.length) {
                    G__15002__a[G__15002__i] = arguments[G__15002__i + 3];
                    ++G__15002__i;
                  }
                  G__15001 = new cljs.core.IndexedSeq(G__15002__a, 0);
                }
                return G__14997__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15001);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14997.cljs$lang$maxFixedArity = 3;
          G__14997.cljs$lang$applyTo = G__14997__4.cljs$lang$applyTo;
          G__14997.cljs$core$IFn$_invoke$arity$0 = G__14997__0;
          G__14997.cljs$core$IFn$_invoke$arity$1 = G__14997__1;
          G__14997.cljs$core$IFn$_invoke$arity$2 = G__14997__2;
          G__14997.cljs$core$IFn$_invoke$arity$3 = G__14997__3;
          G__14997.cljs$core$IFn$_invoke$arity$variadic = G__14997__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__14997;
        }();
      }(fs__$1);
    };
    var G__14996 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__15003__i = 0, G__15003__a = new Array(arguments.length - 3);
        while (G__15003__i < G__15003__a.length) {
          G__15003__a[G__15003__i] = arguments[G__15003__i + 3];
          ++G__15003__i;
        }
        fs = new cljs.core.IndexedSeq(G__15003__a, 0);
      }
      return G__14996__delegate.call(this, f, g, h, fs);
    };
    G__14996.cljs$lang$maxFixedArity = 3;
    G__14996.cljs$lang$applyTo = function(arglist__15004) {
      var f = cljs.core.first(arglist__15004);
      arglist__15004 = cljs.core.next(arglist__15004);
      var g = cljs.core.first(arglist__15004);
      arglist__15004 = cljs.core.next(arglist__15004);
      var h = cljs.core.first(arglist__15004);
      var fs = cljs.core.rest(arglist__15004);
      return G__14996__delegate(f, g, h, fs);
    };
    G__14996.cljs$core$IFn$_invoke$arity$variadic = G__14996__delegate;
    return G__14996;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        var G__15005 = null;
        if (arguments.length > 3) {
          var G__15006__i = 0, G__15006__a = new Array(arguments.length - 3);
          while (G__15006__i < G__15006__a.length) {
            G__15006__a[G__15006__i] = arguments[G__15006__i + 3];
            ++G__15006__i;
          }
          G__15005 = new cljs.core.IndexedSeq(G__15006__a, 0);
        }
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__15005);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__15007 = cljs.core.next(coll);
        coll = G__15007;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__15008 = n - 1;
        var G__15009 = cljs.core.next(coll);
        n = G__15008;
        coll = G__15009;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__15013 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15013, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15013, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15013, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_15021 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__8783__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__8783__auto__)) {
              return or__8783__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__15022_15028 = cljs.core.first(coll);
          var G__15023_15029 = writer;
          var G__15024_15030 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15022_15028, G__15023_15029, G__15024_15030) : print_one.call(null, G__15022_15028, G__15023_15029, G__15024_15030);
        } else {
        }
        var coll_15031__$1 = cljs.core.next(coll);
        var n_15032 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_15031__$1 && (n_15032 == null || !(n_15032 === 0))) {
            cljs.core._write(writer, sep);
            var G__15025_15033 = cljs.core.first(coll_15031__$1);
            var G__15026_15034 = writer;
            var G__15027_15035 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15025_15033, G__15026_15034, G__15027_15035) : print_one.call(null, G__15025_15033, G__15026_15034, G__15027_15035);
            var G__15036 = cljs.core.next(coll_15031__$1);
            var G__15037 = n_15032 - 1;
            coll_15031__$1 = G__15036;
            n_15032 = G__15037;
            continue;
          } else {
            if (cljs.core.seq(coll_15031__$1) && n_15032 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__8783__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__8783__auto__)) {
                  return or__8783__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_15021;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__15042 = cljs.core.seq(ss);
    var chunk__15043 = null;
    var count__15044 = 0;
    var i__15045 = 0;
    while (true) {
      if (i__15045 < count__15044) {
        var s = chunk__15043.cljs$core$IIndexed$_nth$arity$2(null, i__15045);
        cljs.core._write(writer, s);
        var G__15046 = seq__15042;
        var G__15047 = chunk__15043;
        var G__15048 = count__15044;
        var G__15049 = i__15045 + 1;
        seq__15042 = G__15046;
        chunk__15043 = G__15047;
        count__15044 = G__15048;
        i__15045 = G__15049;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__15042);
        if (temp__4126__auto__) {
          var seq__15042__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__15042__$1)) {
            var c__9570__auto__ = cljs.core.chunk_first(seq__15042__$1);
            var G__15050 = cljs.core.chunk_rest(seq__15042__$1);
            var G__15051 = c__9570__auto__;
            var G__15052 = cljs.core.count(c__9570__auto__);
            var G__15053 = 0;
            seq__15042 = G__15050;
            chunk__15043 = G__15051;
            count__15044 = G__15052;
            i__15045 = G__15053;
            continue;
          } else {
            var s = cljs.core.first(seq__15042__$1);
            cljs.core._write(writer, s);
            var G__15054 = cljs.core.next(seq__15042__$1);
            var G__15055 = null;
            var G__15056 = 0;
            var G__15057 = 0;
            seq__15042 = G__15054;
            chunk__15043 = G__15055;
            count__15044 = G__15056;
            i__15045 = G__15057;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__15058__i = 0, G__15058__a = new Array(arguments.length - 1);
      while (G__15058__i < G__15058__a.length) {
        G__15058__a[G__15058__i] = arguments[G__15058__i + 1];
        ++G__15058__i;
      }
      ss = new cljs.core.IndexedSeq(G__15058__a, 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__15059) {
    var writer = cljs.core.first(arglist__15059);
    var ss = cljs.core.rest(arglist__15059);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj15061 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj15061;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__15064 = '[\\\\"\b\f\n\r\t]';
    var G__15065 = "g";
    return RegExp(G__15064, G__15065);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer_impl = function pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__8771__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__8771__auto__)) {
          var and__8771__auto____$1 = function() {
            var G__15079 = obj;
            if (G__15079) {
              var bit__9464__auto__ = G__15079.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__9464__auto__ || G__15079.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__15079.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__15079);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__15079);
            }
          }();
          if (and__8771__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__8771__auto____$1;
          }
        } else {
          return and__8771__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        var G__15080_15090 = cljs.core.meta(obj);
        var G__15081_15091 = writer;
        var G__15082_15092 = opts;
        cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__15080_15090, G__15081_15091, G__15082_15092) : cljs.core.pr_writer.call(null, G__15080_15090, G__15081_15091, G__15082_15092);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__15083 = obj;
            if (G__15083) {
              var bit__9457__auto__ = G__15083.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__9457__auto__ || G__15083.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__15084 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__15085 = cljs.core.pr_writer;
                var G__15086 = writer;
                var G__15087 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__15084, G__15085, G__15086, G__15087) : cljs.core.print_map.call(null, G__15084, G__15085, G__15086, G__15087);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__15088 = obj;
                    return goog.isString(G__15088);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__15093 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__15093;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__15089 = obj;
                            if (G__15089) {
                              var bit__9464__auto__ = G__15089.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__9464__auto__ || G__15089.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__15089.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__15089);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__15089);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  var temp__4124__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var alt_impl = temp__4124__auto__;
    var G__15097 = obj;
    var G__15098 = writer;
    var G__15099 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__15097, G__15098, G__15099) : alt_impl.call(null, G__15097, G__15098, G__15099);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__15104 = cljs.core.seq(cljs.core.next(objs));
  var chunk__15105 = null;
  var count__15106 = 0;
  var i__15107 = 0;
  while (true) {
    if (i__15107 < count__15106) {
      var obj = chunk__15105.cljs$core$IIndexed$_nth$arity$2(null, i__15107);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__15108 = seq__15104;
      var G__15109 = chunk__15105;
      var G__15110 = count__15106;
      var G__15111 = i__15107 + 1;
      seq__15104 = G__15108;
      chunk__15105 = G__15109;
      count__15106 = G__15110;
      i__15107 = G__15111;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__15104);
      if (temp__4126__auto__) {
        var seq__15104__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15104__$1)) {
          var c__9570__auto__ = cljs.core.chunk_first(seq__15104__$1);
          var G__15112 = cljs.core.chunk_rest(seq__15104__$1);
          var G__15113 = c__9570__auto__;
          var G__15114 = cljs.core.count(c__9570__auto__);
          var G__15115 = 0;
          seq__15104 = G__15112;
          chunk__15105 = G__15113;
          count__15106 = G__15114;
          i__15107 = G__15115;
          continue;
        } else {
          var obj = cljs.core.first(seq__15104__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__15116 = cljs.core.next(seq__15104__$1);
          var G__15117 = null;
          var G__15118 = 0;
          var G__15119 = 0;
          seq__15104 = G__15116;
          chunk__15105 = G__15117;
          count__15106 = G__15118;
          i__15107 = G__15119;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15120__i = 0, G__15120__a = new Array(arguments.length - 0);
      while (G__15120__i < G__15120__a.length) {
        G__15120__a[G__15120__i] = arguments[G__15120__i + 0];
        ++G__15120__i;
      }
      objs = new cljs.core.IndexedSeq(G__15120__a, 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__15121) {
    var objs = cljs.core.seq(arglist__15121);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15122__i = 0, G__15122__a = new Array(arguments.length - 0);
      while (G__15122__i < G__15122__a.length) {
        G__15122__a[G__15122__i] = arguments[G__15122__i + 0];
        ++G__15122__i;
      }
      objs = new cljs.core.IndexedSeq(G__15122__a, 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__15123) {
    var objs = cljs.core.seq(arglist__15123);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15124__i = 0, G__15124__a = new Array(arguments.length - 0);
      while (G__15124__i < G__15124__a.length) {
        G__15124__a[G__15124__i] = arguments[G__15124__i + 0];
        ++G__15124__i;
      }
      objs = new cljs.core.IndexedSeq(G__15124__a, 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__15125) {
    var objs = cljs.core.seq(arglist__15125);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15126__i = 0, G__15126__a = new Array(arguments.length - 0);
      while (G__15126__i < G__15126__a.length) {
        G__15126__a[G__15126__i] = arguments[G__15126__i + 0];
        ++G__15126__i;
      }
      objs = new cljs.core.IndexedSeq(G__15126__a, 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__15127) {
    var objs = cljs.core.seq(arglist__15127);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15128__i = 0, G__15128__a = new Array(arguments.length - 0);
      while (G__15128__i < G__15128__a.length) {
        G__15128__a[G__15128__i] = arguments[G__15128__i + 0];
        ++G__15128__i;
      }
      objs = new cljs.core.IndexedSeq(G__15128__a, 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__15129) {
    var objs = cljs.core.seq(arglist__15129);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15130__i = 0, G__15130__a = new Array(arguments.length - 0);
      while (G__15130__i < G__15130__a.length) {
        G__15130__a[G__15130__i] = arguments[G__15130__i + 0];
        ++G__15130__i;
      }
      objs = new cljs.core.IndexedSeq(G__15130__a, 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__15131) {
    var objs = cljs.core.seq(arglist__15131);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15132__i = 0, G__15132__a = new Array(arguments.length - 0);
      while (G__15132__i < G__15132__a.length) {
        G__15132__a[G__15132__i] = arguments[G__15132__i + 0];
        ++G__15132__i;
      }
      objs = new cljs.core.IndexedSeq(G__15132__a, 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__15133) {
    var objs = cljs.core.seq(arglist__15133);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__15134__i = 0, G__15134__a = new Array(arguments.length - 0);
      while (G__15134__i < G__15134__a.length) {
        G__15134__a[G__15134__i] = arguments[G__15134__i + 0];
        ++G__15134__i;
      }
      objs = new cljs.core.IndexedSeq(G__15134__a, 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__15135) {
    var objs = cljs.core.seq(arglist__15135);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__15142_15148 = cljs.core.key(e);
    var G__15143_15149 = w;
    var G__15144_15150 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15142_15148, G__15143_15149, G__15144_15150) : print_one.call(null, G__15142_15148, G__15143_15149, G__15144_15150);
    cljs.core._write(w, " ");
    var G__15145 = cljs.core.val(e);
    var G__15146 = w;
    var G__15147 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__15145, G__15146, G__15147) : print_one.call(null, G__15145, G__15146, G__15147);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__15151__i = 0, G__15151__a = new Array(arguments.length - 2);
      while (G__15151__i < G__15151__a.length) {
        G__15151__a[G__15151__i] = arguments[G__15151__i + 2];
        ++G__15151__i;
      }
      args = new cljs.core.IndexedSeq(G__15151__a, 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__15152) {
    var iref = cljs.core.first(arglist__15152);
    arglist__15152 = cljs.core.next(arglist__15152);
    var f = cljs.core.first(arglist__15152);
    var args = cljs.core.rest(arglist__15152);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__15155 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15155) : cljs.core.atom.call(null, G__15155);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__15157 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15157) : cljs.core.deref.call(null, G__15157);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__15158_SHARP_, p2__15159_SHARP_) {
    var ret = function() {
      var G__15162 = p1__15158_SHARP_;
      var G__15163 = p2__15159_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15162, G__15163) : rf.call(null, G__15162, G__15163);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__15166 = null;
      var G__15166__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__15166__1 = function(result) {
        var G__15165 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15165) : rf.call(null, G__15165);
      };
      var G__15166__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__15166 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__15166__0.call(this);
          case 1:
            return G__15166__1.call(this, result);
          case 2:
            return G__15166__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15166.cljs$core$IFn$_invoke$arity$0 = G__15166__0;
      G__15166.cljs$core$IFn$_invoke$arity$1 = G__15166__1;
      G__15166.cljs$core$IFn$_invoke$arity$2 = G__15166__2;
      return G__15166;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__15175 = null;
          var G__15175__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__15175__1 = function(result) {
            var G__15171 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15171) : rf.call(null, G__15171);
          };
          var G__15175__2 = function(result, input) {
            var prior = function() {
              var G__15172 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15172) : cljs.core.deref.call(null, G__15172);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__15173 = result;
              var G__15174 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15173, G__15174) : rf.call(null, G__15173, G__15174);
            }
          };
          G__15175 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__15175__0.call(this);
              case 1:
                return G__15175__1.call(this, result);
              case 2:
                return G__15175__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__15175.cljs$core$IFn$_invoke$arity$0 = G__15175__0;
          G__15175.cljs$core$IFn$_invoke$arity$1 = G__15175__1;
          G__15175.cljs$core$IFn$_invoke$arity$2 = G__15175__2;
          return G__15175;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__9761__auto__ = this;
  return cljs.core.es6_iterator(this__9761__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15177_SHARP_, p2__15176_SHARP_) {
    var G__15179 = p2__15176_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__15179) : proc.call(null, G__15179);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj15181 = {};
  return obj15181;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__8771__auto__ = x;
    if (and__8771__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__9427__auto__ = x == null ? null : x;
    return function() {
      var or__8783__auto__ = cljs.core._clj__GT_js[function() {
        var G__15185 = x__9427__auto__;
        return goog.typeOf(G__15185);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__8771__auto__ = x;
    if (and__8771__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__9427__auto__ = x == null ? null : x;
    return function() {
      var or__8783__auto__ = cljs.core._key__GT_js[function() {
        var G__15189 = x__9427__auto__;
        return goog.typeOf(G__15189);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__15192 = k;
    if (G__15192) {
      var bit__9464__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__8783__auto__ = bit__9464__auto__;
        if (cljs.core.truth_(or__8783__auto__)) {
          return or__8783__auto__;
        } else {
          return G__15192.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__15192.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__15192);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__15192);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__15193 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__15193) : cljs.core.clj__GT_js.call(null, G__15193);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__15209 = x;
      if (G__15209) {
        var bit__9464__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__8783__auto__ = bit__9464__auto__;
          if (cljs.core.truth_(or__8783__auto__)) {
            return or__8783__auto__;
          } else {
            return G__15209.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__15209.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__15209);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__15209);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj15211 = {};
              return obj15211;
            }();
            var seq__15212_15222 = cljs.core.seq(x);
            var chunk__15213_15223 = null;
            var count__15214_15224 = 0;
            var i__15215_15225 = 0;
            while (true) {
              if (i__15215_15225 < count__15214_15224) {
                var vec__15216_15226 = chunk__15213_15223.cljs$core$IIndexed$_nth$arity$2(null, i__15215_15225);
                var k_15227 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15216_15226, 0, null);
                var v_15228 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15216_15226, 1, null);
                m[cljs.core.key__GT_js(k_15227)] = clj__GT_js(v_15228);
                var G__15229 = seq__15212_15222;
                var G__15230 = chunk__15213_15223;
                var G__15231 = count__15214_15224;
                var G__15232 = i__15215_15225 + 1;
                seq__15212_15222 = G__15229;
                chunk__15213_15223 = G__15230;
                count__15214_15224 = G__15231;
                i__15215_15225 = G__15232;
                continue;
              } else {
                var temp__4126__auto___15233 = cljs.core.seq(seq__15212_15222);
                if (temp__4126__auto___15233) {
                  var seq__15212_15234__$1 = temp__4126__auto___15233;
                  if (cljs.core.chunked_seq_QMARK_(seq__15212_15234__$1)) {
                    var c__9570__auto___15235 = cljs.core.chunk_first(seq__15212_15234__$1);
                    var G__15236 = cljs.core.chunk_rest(seq__15212_15234__$1);
                    var G__15237 = c__9570__auto___15235;
                    var G__15238 = cljs.core.count(c__9570__auto___15235);
                    var G__15239 = 0;
                    seq__15212_15222 = G__15236;
                    chunk__15213_15223 = G__15237;
                    count__15214_15224 = G__15238;
                    i__15215_15225 = G__15239;
                    continue;
                  } else {
                    var vec__15217_15240 = cljs.core.first(seq__15212_15234__$1);
                    var k_15241 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15217_15240, 0, null);
                    var v_15242 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15217_15240, 1, null);
                    m[cljs.core.key__GT_js(k_15241)] = clj__GT_js(v_15242);
                    var G__15243 = cljs.core.next(seq__15212_15234__$1);
                    var G__15244 = null;
                    var G__15245 = 0;
                    var G__15246 = 0;
                    seq__15212_15222 = G__15243;
                    chunk__15213_15223 = G__15244;
                    count__15214_15224 = G__15245;
                    i__15215_15225 = G__15246;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__15218_15247 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__15219_15248 = null;
              var count__15220_15249 = 0;
              var i__15221_15250 = 0;
              while (true) {
                if (i__15221_15250 < count__15220_15249) {
                  var x_15251__$1 = chunk__15219_15248.cljs$core$IIndexed$_nth$arity$2(null, i__15221_15250);
                  arr.push(x_15251__$1);
                  var G__15252 = seq__15218_15247;
                  var G__15253 = chunk__15219_15248;
                  var G__15254 = count__15220_15249;
                  var G__15255 = i__15221_15250 + 1;
                  seq__15218_15247 = G__15252;
                  chunk__15219_15248 = G__15253;
                  count__15220_15249 = G__15254;
                  i__15221_15250 = G__15255;
                  continue;
                } else {
                  var temp__4126__auto___15256 = cljs.core.seq(seq__15218_15247);
                  if (temp__4126__auto___15256) {
                    var seq__15218_15257__$1 = temp__4126__auto___15256;
                    if (cljs.core.chunked_seq_QMARK_(seq__15218_15257__$1)) {
                      var c__9570__auto___15258 = cljs.core.chunk_first(seq__15218_15257__$1);
                      var G__15259 = cljs.core.chunk_rest(seq__15218_15257__$1);
                      var G__15260 = c__9570__auto___15258;
                      var G__15261 = cljs.core.count(c__9570__auto___15258);
                      var G__15262 = 0;
                      seq__15218_15247 = G__15259;
                      chunk__15219_15248 = G__15260;
                      count__15220_15249 = G__15261;
                      i__15221_15250 = G__15262;
                      continue;
                    } else {
                      var x_15263__$1 = cljs.core.first(seq__15218_15257__$1);
                      arr.push(x_15263__$1);
                      var G__15264 = cljs.core.next(seq__15218_15257__$1);
                      var G__15265 = null;
                      var G__15266 = 0;
                      var G__15267 = 0;
                      seq__15218_15247 = G__15264;
                      chunk__15219_15248 = G__15265;
                      count__15220_15249 = G__15266;
                      i__15221_15250 = G__15267;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj15269 = {};
  return obj15269;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__8771__auto__ = x;
    if (and__8771__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__9427__auto__ = x == null ? null : x;
    return function() {
      var or__8783__auto__ = cljs.core._js__GT_clj[function() {
        var G__15273 = x__9427__auto__;
        return goog.typeOf(G__15273);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__15330__delegate = function(x, opts) {
      var map__15303 = opts;
      var map__15303__$1 = cljs.core.seq_QMARK_(map__15303) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__15303) : map__15303;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15303__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__15303, map__15303__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__15319 = x__$1;
            if (G__15319) {
              var bit__9464__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__8783__auto__ = bit__9464__auto__;
                if (cljs.core.truth_(or__8783__auto__)) {
                  return or__8783__auto__;
                } else {
                  return G__15319.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__15319.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__15319);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__15319);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__9539__auto__ = function(map__15303, map__15303__$1, keywordize_keys, keyfn) {
                        return function iter__15320(s__15321) {
                          return new cljs.core.LazySeq(null, function(map__15303, map__15303__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__15321__$1 = s__15321;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__15321__$1);
                                if (temp__4126__auto__) {
                                  var s__15321__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__15321__$2)) {
                                    var c__9537__auto__ = cljs.core.chunk_first(s__15321__$2);
                                    var size__9538__auto__ = cljs.core.count(c__9537__auto__);
                                    var b__15323 = cljs.core.chunk_buffer(size__9538__auto__);
                                    if (function() {
                                      var i__15322 = 0;
                                      while (true) {
                                        if (i__15322 < size__9538__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__9537__auto__, i__15322);
                                          cljs.core.chunk_append(b__15323, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__15328 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__15328) : keyfn.call(null, G__15328);
                                          }(), thisfn(x__$1[k])], null));
                                          var G__15331 = i__15322 + 1;
                                          i__15322 = G__15331;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__15323), iter__15320(cljs.core.chunk_rest(s__15321__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__15323), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__15321__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__15329 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__15329) : keyfn.call(null, G__15329);
                                    }(), thisfn(x__$1[k])], null), iter__15320(cljs.core.rest(s__15321__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__15303, map__15303__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__15303, map__15303__$1, keywordize_keys, keyfn);
                      return iter__9539__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__15303, map__15303__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__15330 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__15332__i = 0, G__15332__a = new Array(arguments.length - 1);
        while (G__15332__i < G__15332__a.length) {
          G__15332__a[G__15332__i] = arguments[G__15332__i + 1];
          ++G__15332__i;
        }
        opts = new cljs.core.IndexedSeq(G__15332__a, 0);
      }
      return G__15330__delegate.call(this, x, opts);
    };
    G__15330.cljs$lang$maxFixedArity = 1;
    G__15330.cljs$lang$applyTo = function(arglist__15333) {
      var x = cljs.core.first(arglist__15333);
      var opts = cljs.core.rest(arglist__15333);
      return G__15330__delegate(x, opts);
    };
    G__15330.cljs$core$IFn$_invoke$arity$variadic = G__15330__delegate;
    return G__15330;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        var G__15334 = null;
        if (arguments.length > 1) {
          var G__15335__i = 0, G__15335__a = new Array(arguments.length - 1);
          while (G__15335__i < G__15335__a.length) {
            G__15335__a[G__15335__i] = arguments[G__15335__i + 1];
            ++G__15335__i;
          }
          G__15334 = new cljs.core.IndexedSeq(G__15335__a, 0);
        }
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__15334);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = function() {
    var G__15338 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15338) : cljs.core.atom.call(null, G__15338);
  }();
  return function(mem) {
    return function() {
      var G__15340__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__15339 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15339) : cljs.core.deref.call(null, G__15339);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__15340 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__15341__i = 0, G__15341__a = new Array(arguments.length - 0);
          while (G__15341__i < G__15341__a.length) {
            G__15341__a[G__15341__i] = arguments[G__15341__i + 0];
            ++G__15341__i;
          }
          args = new cljs.core.IndexedSeq(G__15341__a, 0);
        }
        return G__15340__delegate.call(this, args);
      };
      G__15340.cljs$lang$maxFixedArity = 0;
      G__15340.cljs$lang$applyTo = function(arglist__15342) {
        var args = cljs.core.seq(arglist__15342);
        return G__15340__delegate(args);
      };
      G__15340.cljs$core$IFn$_invoke$arity$variadic = G__15340__delegate;
      return G__15340;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__15344 = ret;
        f = G__15344;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__15345__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__15345 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__15346__i = 0, G__15346__a = new Array(arguments.length - 1);
        while (G__15346__i < G__15346__a.length) {
          G__15346__a[G__15346__i] = arguments[G__15346__i + 1];
          ++G__15346__i;
        }
        args = new cljs.core.IndexedSeq(G__15346__a, 0);
      }
      return G__15345__delegate.call(this, f, args);
    };
    G__15345.cljs$lang$maxFixedArity = 1;
    G__15345.cljs$lang$applyTo = function(arglist__15347) {
      var f = cljs.core.first(arglist__15347);
      var args = cljs.core.rest(arglist__15347);
      return G__15345__delegate(f, args);
    };
    G__15345.cljs$core$IFn$_invoke$arity$variadic = G__15345__delegate;
    return G__15345;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        var G__15348 = null;
        if (arguments.length > 1) {
          var G__15349__i = 0, G__15349__a = new Array(arguments.length - 1);
          while (G__15349__i < G__15349__a.length) {
            G__15349__a[G__15349__i] = arguments[G__15349__i + 1];
            ++G__15349__i;
          }
          G__15348 = new cljs.core.IndexedSeq(G__15349__a, 0);
        }
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__15348);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  var G__15352 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__15352) : Math.floor.call(null, G__15352);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__15354 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15354) : f.call(null, G__15354);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__15356 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__15356) : cljs.core.atom.call(null, G__15356);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__15357__i = 0, G__15357__a = new Array(arguments.length - 1);
      while (G__15357__i < G__15357__a.length) {
        G__15357__a[G__15357__i] = arguments[G__15357__i + 1];
        ++G__15357__i;
      }
      args = new cljs.core.IndexedSeq(G__15357__a, 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__15358) {
    var f = cljs.core.first(arglist__15358);
    var args = cljs.core.rest(arglist__15358);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__15423 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15423) : cljs.core.deref.call(null, G__15423);
    }(), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__8783__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__8783__auto__) {
      return or__8783__auto__;
    } else {
      var or__8783__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__8783__auto____$1) {
        return or__8783__auto____$1;
      } else {
        var and__8771__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__8771__auto__) {
          var and__8771__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__8771__auto____$1) {
            var and__8771__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__8771__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__15448 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__15446 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__15446) : child.call(null, G__15446);
                  }(), function() {
                    var G__15447 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__15447) : parent.call(null, G__15447);
                  }());
                  var G__15449 = i + 1;
                  ret = G__15448;
                  i = G__15449;
                  continue;
                }
                break;
              }
            } else {
              return and__8771__auto____$2;
            }
          } else {
            return and__8771__auto____$1;
          }
        } else {
          return and__8771__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__15453 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15453) : cljs.core.deref.call(null, G__15453);
    }(), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__15457 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15457) : cljs.core.deref.call(null, G__15457);
    }(), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__15461 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15461) : cljs.core.deref.call(null, G__15461);
    }(), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__15470 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__15470) : targets.call(null, G__15470);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__15471 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__15471) : sources.call(null, G__15471);
        }()));
      };
    }(tp, td, ta);
    var or__8783__auto__ = cljs.core.contains_QMARK_(function() {
      var G__15475 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__15475) : tp.call(null, G__15475);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__15476 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__15476) : ta.call(null, G__15476);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__15477 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__15477) : ta.call(null, G__15477);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__8783__auto__)) {
      return or__8783__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__15484 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15484) : parentMap.call(null, G__15484);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__15485 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15485) : parentMap.call(null, G__15485);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__15478_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__15478_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__15478_SHARP_), cljs.core.second(p1__15478_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__15486 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15486) : parentMap.call(null, G__15486);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__15479_SHARP_, p2__15480_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__15479_SHARP_, p2__15480_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__15489 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15489) : cljs.core.deref.call(null, G__15489);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__15490 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15490) : cljs.core.deref.call(null, G__15490);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__15506 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15506) : cljs.core.deref.call(null, G__15506);
  }().call(null, x);
  var or__8783__auto__ = cljs.core.truth_(function() {
    var and__8771__auto__ = xprefs;
    if (cljs.core.truth_(and__8771__auto__)) {
      var G__15508 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__15508) : xprefs.call(null, G__15508);
    } else {
      return and__8771__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__8783__auto__)) {
    return or__8783__auto__;
  } else {
    var or__8783__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__15509 = cljs.core.rest(ps);
          ps = G__15509;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__8783__auto____$1)) {
      return or__8783__auto____$1;
    } else {
      var or__8783__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__15510 = cljs.core.rest(ps);
            ps = G__15510;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__8783__auto____$2)) {
        return or__8783__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__8783__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__8783__auto__)) {
    return or__8783__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__15524) {
    var vec__15525 = p__15524;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15525, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15525, 1, null);
    var e = vec__15525;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__15526 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15526) : cljs.core.deref.call(null, G__15526);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__8783__auto__ = be == null;
        if (or__8783__auto__) {
          return or__8783__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__15527 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15527) : cljs.core.deref.call(null, G__15527);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__15528 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15528) : cljs.core.deref.call(null, G__15528);
    }(), function() {
      var G__15529 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15529) : cljs.core.deref.call(null, G__15529);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj15531 = {};
  return obj15531;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__8771__auto__ = mf;
    if (and__8771__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__9427__auto__ = mf == null ? null : mf;
    return function() {
      var or__8783__auto__ = cljs.core._reset[function() {
        var G__15535 = x__9427__auto__;
        return goog.typeOf(G__15535);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._reset["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__8771__auto__ = mf;
    if (and__8771__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__9427__auto__ = mf == null ? null : mf;
    return function() {
      var or__8783__auto__ = cljs.core._add_method[function() {
        var G__15539 = x__9427__auto__;
        return goog.typeOf(G__15539);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._add_method["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__8771__auto__ = mf;
    if (and__8771__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__9427__auto__ = mf == null ? null : mf;
    return function() {
      var or__8783__auto__ = cljs.core._remove_method[function() {
        var G__15543 = x__9427__auto__;
        return goog.typeOf(G__15543);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._remove_method["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__8771__auto__ = mf;
    if (and__8771__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__9427__auto__ = mf == null ? null : mf;
    return function() {
      var or__8783__auto__ = cljs.core._prefer_method[function() {
        var G__15547 = x__9427__auto__;
        return goog.typeOf(G__15547);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._prefer_method["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__8771__auto__ = mf;
    if (and__8771__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__9427__auto__ = mf == null ? null : mf;
    return function() {
      var or__8783__auto__ = cljs.core._get_method[function() {
        var G__15551 = x__9427__auto__;
        return goog.typeOf(G__15551);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._get_method["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__8771__auto__ = mf;
    if (and__8771__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__9427__auto__ = mf == null ? null : mf;
    return function() {
      var or__8783__auto__ = cljs.core._methods[function() {
        var G__15555 = x__9427__auto__;
        return goog.typeOf(G__15555);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._methods["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__8771__auto__ = mf;
    if (and__8771__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__9427__auto__ = mf == null ? null : mf;
    return function() {
      var or__8783__auto__ = cljs.core._prefers[function() {
        var G__15559 = x__9427__auto__;
        return goog.typeOf(G__15559);
      }()];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = cljs.core._prefers["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__15561 = this$__$1;
  return goog.getUid(G__15561);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__15562 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15562) : cljs.core.deref.call(null, G__15562);
  }(), function() {
    var G__15563 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15563) : cljs.core.deref.call(null, G__15563);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__15564 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15564) : cljs.core.deref.call(null, G__15564);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__15565 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15565) : cljs.core.deref.call(null, G__15565);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__15566 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15566) : cljs.core.deref.call(null, G__15566);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__15567 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15567) : cljs.core.deref.call(null, G__15567);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__16408 = null;
  var G__16408__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__16408__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15568 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__15568) : self__.dispatch_fn.call(null, G__15568);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15569 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__15569) : target_fn.call(null, G__15569);
  };
  var G__16408__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15570 = a;
      var G__15571 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__15570, G__15571) : self__.dispatch_fn.call(null, G__15570, G__15571);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15572 = a;
    var G__15573 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__15572, G__15573) : target_fn.call(null, G__15572, G__15573);
  };
  var G__16408__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15574 = a;
      var G__15575 = b;
      var G__15576 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__15574, G__15575, G__15576) : self__.dispatch_fn.call(null, G__15574, G__15575, G__15576);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15577 = a;
    var G__15578 = b;
    var G__15579 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__15577, G__15578, G__15579) : target_fn.call(null, G__15577, G__15578, G__15579);
  };
  var G__16408__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15580 = a;
      var G__15581 = b;
      var G__15582 = c;
      var G__15583 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__15580, G__15581, G__15582, G__15583) : self__.dispatch_fn.call(null, G__15580, G__15581, G__15582, G__15583);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15584 = a;
    var G__15585 = b;
    var G__15586 = c;
    var G__15587 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__15584, G__15585, G__15586, G__15587) : target_fn.call(null, G__15584, G__15585, G__15586, G__15587);
  };
  var G__16408__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15588 = a;
      var G__15589 = b;
      var G__15590 = c;
      var G__15591 = d;
      var G__15592 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__15588, G__15589, G__15590, G__15591, G__15592) : self__.dispatch_fn.call(null, G__15588, G__15589, G__15590, G__15591, G__15592);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15593 = a;
    var G__15594 = b;
    var G__15595 = c;
    var G__15596 = d;
    var G__15597 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__15593, G__15594, G__15595, G__15596, G__15597) : target_fn.call(null, G__15593, G__15594, G__15595, G__15596, G__15597);
  };
  var G__16408__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15598 = a;
      var G__15599 = b;
      var G__15600 = c;
      var G__15601 = d;
      var G__15602 = e;
      var G__15603 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__15598, G__15599, G__15600, G__15601, G__15602, G__15603) : self__.dispatch_fn.call(null, G__15598, G__15599, G__15600, G__15601, G__15602, G__15603);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15604 = a;
    var G__15605 = b;
    var G__15606 = c;
    var G__15607 = d;
    var G__15608 = e;
    var G__15609 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__15604, G__15605, G__15606, G__15607, G__15608, G__15609) : target_fn.call(null, G__15604, G__15605, G__15606, G__15607, G__15608, G__15609);
  };
  var G__16408__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15610 = a;
      var G__15611 = b;
      var G__15612 = c;
      var G__15613 = d;
      var G__15614 = e;
      var G__15615 = f;
      var G__15616 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__15610, G__15611, G__15612, G__15613, G__15614, G__15615, G__15616) : self__.dispatch_fn.call(null, G__15610, G__15611, G__15612, G__15613, G__15614, G__15615, G__15616);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15617 = a;
    var G__15618 = b;
    var G__15619 = c;
    var G__15620 = d;
    var G__15621 = e;
    var G__15622 = f;
    var G__15623 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__15617, G__15618, G__15619, G__15620, G__15621, G__15622, G__15623) : target_fn.call(null, G__15617, G__15618, G__15619, G__15620, G__15621, G__15622, G__15623);
  };
  var G__16408__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15624 = a;
      var G__15625 = b;
      var G__15626 = c;
      var G__15627 = d;
      var G__15628 = e;
      var G__15629 = f;
      var G__15630 = g;
      var G__15631 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__15624, G__15625, G__15626, G__15627, G__15628, G__15629, G__15630, G__15631) : self__.dispatch_fn.call(null, G__15624, G__15625, G__15626, G__15627, G__15628, G__15629, G__15630, G__15631);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15632 = a;
    var G__15633 = b;
    var G__15634 = c;
    var G__15635 = d;
    var G__15636 = e;
    var G__15637 = f;
    var G__15638 = g;
    var G__15639 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__15632, G__15633, G__15634, G__15635, G__15636, G__15637, G__15638, G__15639) : target_fn.call(null, G__15632, G__15633, G__15634, G__15635, G__15636, G__15637, G__15638, G__15639);
  };
  var G__16408__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15640 = a;
      var G__15641 = b;
      var G__15642 = c;
      var G__15643 = d;
      var G__15644 = e;
      var G__15645 = f;
      var G__15646 = g;
      var G__15647 = h;
      var G__15648 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__15640, G__15641, G__15642, G__15643, G__15644, G__15645, G__15646, G__15647, G__15648) : self__.dispatch_fn.call(null, G__15640, G__15641, G__15642, G__15643, G__15644, G__15645, G__15646, G__15647, G__15648);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15649 = a;
    var G__15650 = b;
    var G__15651 = c;
    var G__15652 = d;
    var G__15653 = e;
    var G__15654 = f;
    var G__15655 = g;
    var G__15656 = h;
    var G__15657 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__15649, G__15650, G__15651, G__15652, G__15653, G__15654, G__15655, G__15656, G__15657) : target_fn.call(null, G__15649, G__15650, G__15651, G__15652, G__15653, G__15654, G__15655, G__15656, G__15657);
  };
  var G__16408__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15658 = a;
      var G__15659 = b;
      var G__15660 = c;
      var G__15661 = d;
      var G__15662 = e;
      var G__15663 = f;
      var G__15664 = g;
      var G__15665 = h;
      var G__15666 = i;
      var G__15667 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__15658, G__15659, G__15660, G__15661, G__15662, G__15663, G__15664, G__15665, G__15666, G__15667) : self__.dispatch_fn.call(null, G__15658, G__15659, G__15660, G__15661, G__15662, G__15663, G__15664, G__15665, G__15666, G__15667);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15668 = a;
    var G__15669 = b;
    var G__15670 = c;
    var G__15671 = d;
    var G__15672 = e;
    var G__15673 = f;
    var G__15674 = g;
    var G__15675 = h;
    var G__15676 = i;
    var G__15677 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__15668, G__15669, G__15670, G__15671, G__15672, G__15673, G__15674, G__15675, G__15676, G__15677) : target_fn.call(null, G__15668, G__15669, G__15670, G__15671, G__15672, G__15673, G__15674, G__15675, G__15676, G__15677);
  };
  var G__16408__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15678 = a;
      var G__15679 = b;
      var G__15680 = c;
      var G__15681 = d;
      var G__15682 = e;
      var G__15683 = f;
      var G__15684 = g;
      var G__15685 = h;
      var G__15686 = i;
      var G__15687 = j;
      var G__15688 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__15678, G__15679, G__15680, G__15681, G__15682, G__15683, G__15684, G__15685, G__15686, G__15687, G__15688) : self__.dispatch_fn.call(null, G__15678, G__15679, G__15680, G__15681, G__15682, G__15683, G__15684, G__15685, G__15686, G__15687, G__15688);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15689 = a;
    var G__15690 = b;
    var G__15691 = c;
    var G__15692 = d;
    var G__15693 = e;
    var G__15694 = f;
    var G__15695 = g;
    var G__15696 = h;
    var G__15697 = i;
    var G__15698 = j;
    var G__15699 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__15689, G__15690, G__15691, G__15692, G__15693, G__15694, G__15695, G__15696, G__15697, G__15698, G__15699) : target_fn.call(null, G__15689, G__15690, G__15691, G__15692, G__15693, G__15694, G__15695, G__15696, G__15697, G__15698, G__15699);
  };
  var G__16408__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15700 = a;
      var G__15701 = b;
      var G__15702 = c;
      var G__15703 = d;
      var G__15704 = e;
      var G__15705 = f;
      var G__15706 = g;
      var G__15707 = h;
      var G__15708 = i;
      var G__15709 = j;
      var G__15710 = k;
      var G__15711 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__15700, G__15701, G__15702, G__15703, G__15704, G__15705, G__15706, G__15707, G__15708, G__15709, G__15710, G__15711) : self__.dispatch_fn.call(null, G__15700, G__15701, G__15702, G__15703, G__15704, G__15705, G__15706, G__15707, G__15708, G__15709, G__15710, G__15711);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15712 = a;
    var G__15713 = b;
    var G__15714 = c;
    var G__15715 = d;
    var G__15716 = e;
    var G__15717 = f;
    var G__15718 = g;
    var G__15719 = h;
    var G__15720 = i;
    var G__15721 = j;
    var G__15722 = k;
    var G__15723 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__15712, G__15713, G__15714, G__15715, G__15716, G__15717, G__15718, G__15719, G__15720, G__15721, G__15722, G__15723) : target_fn.call(null, G__15712, G__15713, G__15714, G__15715, G__15716, G__15717, G__15718, G__15719, G__15720, G__15721, G__15722, G__15723);
  };
  var G__16408__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15724 = a;
      var G__15725 = b;
      var G__15726 = c;
      var G__15727 = d;
      var G__15728 = e;
      var G__15729 = f;
      var G__15730 = g;
      var G__15731 = h;
      var G__15732 = i;
      var G__15733 = j;
      var G__15734 = k;
      var G__15735 = l;
      var G__15736 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__15724, G__15725, G__15726, G__15727, G__15728, G__15729, G__15730, G__15731, G__15732, G__15733, G__15734, G__15735, G__15736) : self__.dispatch_fn.call(null, G__15724, G__15725, G__15726, G__15727, G__15728, G__15729, G__15730, G__15731, G__15732, G__15733, G__15734, G__15735, G__15736);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15737 = a;
    var G__15738 = b;
    var G__15739 = c;
    var G__15740 = d;
    var G__15741 = e;
    var G__15742 = f;
    var G__15743 = g;
    var G__15744 = h;
    var G__15745 = i;
    var G__15746 = j;
    var G__15747 = k;
    var G__15748 = l;
    var G__15749 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__15737, G__15738, G__15739, G__15740, G__15741, G__15742, G__15743, G__15744, G__15745, G__15746, G__15747, G__15748, G__15749) : target_fn.call(null, G__15737, G__15738, G__15739, G__15740, G__15741, G__15742, G__15743, G__15744, G__15745, G__15746, G__15747, G__15748, G__15749);
  };
  var G__16408__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15750 = a;
      var G__15751 = b;
      var G__15752 = c;
      var G__15753 = d;
      var G__15754 = e;
      var G__15755 = f;
      var G__15756 = g;
      var G__15757 = h;
      var G__15758 = i;
      var G__15759 = j;
      var G__15760 = k;
      var G__15761 = l;
      var G__15762 = m;
      var G__15763 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__15750, G__15751, G__15752, G__15753, G__15754, G__15755, G__15756, G__15757, G__15758, G__15759, G__15760, G__15761, G__15762, G__15763) : self__.dispatch_fn.call(null, G__15750, G__15751, G__15752, G__15753, G__15754, G__15755, G__15756, G__15757, G__15758, G__15759, G__15760, G__15761, G__15762, G__15763);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15764 = a;
    var G__15765 = b;
    var G__15766 = c;
    var G__15767 = d;
    var G__15768 = e;
    var G__15769 = f;
    var G__15770 = g;
    var G__15771 = h;
    var G__15772 = i;
    var G__15773 = j;
    var G__15774 = k;
    var G__15775 = l;
    var G__15776 = m;
    var G__15777 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__15764, G__15765, G__15766, G__15767, G__15768, G__15769, G__15770, G__15771, G__15772, G__15773, G__15774, G__15775, G__15776, G__15777) : target_fn.call(null, G__15764, G__15765, G__15766, G__15767, G__15768, G__15769, G__15770, G__15771, G__15772, G__15773, G__15774, G__15775, G__15776, G__15777);
  };
  var G__16408__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15778 = a;
      var G__15779 = b;
      var G__15780 = c;
      var G__15781 = d;
      var G__15782 = e;
      var G__15783 = f;
      var G__15784 = g;
      var G__15785 = h;
      var G__15786 = i;
      var G__15787 = j;
      var G__15788 = k;
      var G__15789 = l;
      var G__15790 = m;
      var G__15791 = n;
      var G__15792 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__15778, G__15779, G__15780, G__15781, G__15782, G__15783, G__15784, G__15785, G__15786, G__15787, G__15788, G__15789, G__15790, G__15791, G__15792) : self__.dispatch_fn.call(null, G__15778, G__15779, G__15780, G__15781, G__15782, G__15783, G__15784, G__15785, G__15786, G__15787, G__15788, G__15789, G__15790, G__15791, G__15792);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15793 = a;
    var G__15794 = b;
    var G__15795 = c;
    var G__15796 = d;
    var G__15797 = e;
    var G__15798 = f;
    var G__15799 = g;
    var G__15800 = h;
    var G__15801 = i;
    var G__15802 = j;
    var G__15803 = k;
    var G__15804 = l;
    var G__15805 = m;
    var G__15806 = n;
    var G__15807 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__15793, G__15794, G__15795, G__15796, G__15797, G__15798, G__15799, G__15800, G__15801, G__15802, G__15803, G__15804, G__15805, G__15806, G__15807) : target_fn.call(null, G__15793, G__15794, G__15795, G__15796, G__15797, G__15798, G__15799, G__15800, G__15801, G__15802, G__15803, G__15804, G__15805, G__15806, G__15807);
  };
  var G__16408__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15808 = a;
      var G__15809 = b;
      var G__15810 = c;
      var G__15811 = d;
      var G__15812 = e;
      var G__15813 = f;
      var G__15814 = g;
      var G__15815 = h;
      var G__15816 = i;
      var G__15817 = j;
      var G__15818 = k;
      var G__15819 = l;
      var G__15820 = m;
      var G__15821 = n;
      var G__15822 = o;
      var G__15823 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__15808, G__15809, G__15810, G__15811, G__15812, G__15813, G__15814, G__15815, G__15816, G__15817, G__15818, G__15819, G__15820, G__15821, G__15822, G__15823) : self__.dispatch_fn.call(null, G__15808, G__15809, G__15810, G__15811, G__15812, G__15813, G__15814, G__15815, G__15816, G__15817, G__15818, G__15819, G__15820, G__15821, G__15822, G__15823);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15824 = a;
    var G__15825 = b;
    var G__15826 = c;
    var G__15827 = d;
    var G__15828 = e;
    var G__15829 = f;
    var G__15830 = g;
    var G__15831 = h;
    var G__15832 = i;
    var G__15833 = j;
    var G__15834 = k;
    var G__15835 = l;
    var G__15836 = m;
    var G__15837 = n;
    var G__15838 = o;
    var G__15839 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__15824, G__15825, G__15826, G__15827, G__15828, G__15829, G__15830, G__15831, G__15832, G__15833, G__15834, G__15835, G__15836, G__15837, G__15838, G__15839) : target_fn.call(null, G__15824, G__15825, G__15826, G__15827, G__15828, G__15829, G__15830, G__15831, G__15832, G__15833, G__15834, G__15835, G__15836, G__15837, G__15838, G__15839);
  };
  var G__16408__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15840 = a;
      var G__15841 = b;
      var G__15842 = c;
      var G__15843 = d;
      var G__15844 = e;
      var G__15845 = f;
      var G__15846 = g;
      var G__15847 = h;
      var G__15848 = i;
      var G__15849 = j;
      var G__15850 = k;
      var G__15851 = l;
      var G__15852 = m;
      var G__15853 = n;
      var G__15854 = o;
      var G__15855 = p;
      var G__15856 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__15840, G__15841, G__15842, G__15843, G__15844, G__15845, G__15846, G__15847, G__15848, G__15849, G__15850, G__15851, G__15852, G__15853, G__15854, G__15855, G__15856) : self__.dispatch_fn.call(null, G__15840, G__15841, G__15842, G__15843, G__15844, G__15845, G__15846, G__15847, G__15848, G__15849, G__15850, G__15851, G__15852, G__15853, G__15854, G__15855, G__15856);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15857 = a;
    var G__15858 = b;
    var G__15859 = c;
    var G__15860 = d;
    var G__15861 = e;
    var G__15862 = f;
    var G__15863 = g;
    var G__15864 = h;
    var G__15865 = i;
    var G__15866 = j;
    var G__15867 = k;
    var G__15868 = l;
    var G__15869 = m;
    var G__15870 = n;
    var G__15871 = o;
    var G__15872 = p;
    var G__15873 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__15857, G__15858, G__15859, G__15860, G__15861, G__15862, G__15863, G__15864, G__15865, G__15866, G__15867, G__15868, G__15869, G__15870, G__15871, G__15872, G__15873) : target_fn.call(null, G__15857, G__15858, G__15859, G__15860, G__15861, G__15862, G__15863, G__15864, G__15865, G__15866, G__15867, G__15868, G__15869, G__15870, G__15871, G__15872, G__15873);
  };
  var G__16408__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15874 = a;
      var G__15875 = b;
      var G__15876 = c;
      var G__15877 = d;
      var G__15878 = e;
      var G__15879 = f;
      var G__15880 = g;
      var G__15881 = h;
      var G__15882 = i;
      var G__15883 = j;
      var G__15884 = k;
      var G__15885 = l;
      var G__15886 = m;
      var G__15887 = n;
      var G__15888 = o;
      var G__15889 = p;
      var G__15890 = q;
      var G__15891 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__15874, G__15875, G__15876, G__15877, G__15878, G__15879, G__15880, G__15881, G__15882, G__15883, G__15884, G__15885, G__15886, G__15887, G__15888, G__15889, G__15890, G__15891) : self__.dispatch_fn.call(null, G__15874, G__15875, G__15876, G__15877, G__15878, G__15879, G__15880, G__15881, G__15882, G__15883, G__15884, G__15885, G__15886, G__15887, G__15888, G__15889, G__15890, G__15891);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15892 = a;
    var G__15893 = b;
    var G__15894 = c;
    var G__15895 = d;
    var G__15896 = e;
    var G__15897 = f;
    var G__15898 = g;
    var G__15899 = h;
    var G__15900 = i;
    var G__15901 = j;
    var G__15902 = k;
    var G__15903 = l;
    var G__15904 = m;
    var G__15905 = n;
    var G__15906 = o;
    var G__15907 = p;
    var G__15908 = q;
    var G__15909 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__15892, G__15893, G__15894, G__15895, G__15896, G__15897, G__15898, G__15899, G__15900, G__15901, G__15902, G__15903, G__15904, G__15905, G__15906, G__15907, G__15908, G__15909) : target_fn.call(null, G__15892, G__15893, G__15894, G__15895, G__15896, G__15897, G__15898, G__15899, G__15900, G__15901, G__15902, G__15903, G__15904, G__15905, G__15906, G__15907, G__15908, G__15909);
  };
  var G__16408__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15910 = a;
      var G__15911 = b;
      var G__15912 = c;
      var G__15913 = d;
      var G__15914 = e;
      var G__15915 = f;
      var G__15916 = g;
      var G__15917 = h;
      var G__15918 = i;
      var G__15919 = j;
      var G__15920 = k;
      var G__15921 = l;
      var G__15922 = m;
      var G__15923 = n;
      var G__15924 = o;
      var G__15925 = p;
      var G__15926 = q;
      var G__15927 = r;
      var G__15928 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__15910, G__15911, G__15912, G__15913, G__15914, G__15915, G__15916, G__15917, G__15918, G__15919, G__15920, G__15921, G__15922, G__15923, G__15924, G__15925, G__15926, G__15927, G__15928) : self__.dispatch_fn.call(null, G__15910, G__15911, G__15912, G__15913, G__15914, G__15915, G__15916, G__15917, G__15918, G__15919, G__15920, G__15921, G__15922, G__15923, G__15924, G__15925, G__15926, 
      G__15927, G__15928);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15929 = a;
    var G__15930 = b;
    var G__15931 = c;
    var G__15932 = d;
    var G__15933 = e;
    var G__15934 = f;
    var G__15935 = g;
    var G__15936 = h;
    var G__15937 = i;
    var G__15938 = j;
    var G__15939 = k;
    var G__15940 = l;
    var G__15941 = m;
    var G__15942 = n;
    var G__15943 = o;
    var G__15944 = p;
    var G__15945 = q;
    var G__15946 = r;
    var G__15947 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__15929, G__15930, G__15931, G__15932, G__15933, G__15934, G__15935, G__15936, G__15937, G__15938, G__15939, G__15940, G__15941, G__15942, G__15943, G__15944, G__15945, G__15946, G__15947) : target_fn.call(null, G__15929, G__15930, G__15931, G__15932, G__15933, G__15934, G__15935, G__15936, G__15937, G__15938, G__15939, G__15940, G__15941, G__15942, G__15943, G__15944, G__15945, G__15946, G__15947);
  };
  var G__16408__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15948 = a;
      var G__15949 = b;
      var G__15950 = c;
      var G__15951 = d;
      var G__15952 = e;
      var G__15953 = f;
      var G__15954 = g;
      var G__15955 = h;
      var G__15956 = i;
      var G__15957 = j;
      var G__15958 = k;
      var G__15959 = l;
      var G__15960 = m;
      var G__15961 = n;
      var G__15962 = o;
      var G__15963 = p;
      var G__15964 = q;
      var G__15965 = r;
      var G__15966 = s;
      var G__15967 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__15948, G__15949, G__15950, G__15951, G__15952, G__15953, G__15954, G__15955, G__15956, G__15957, G__15958, G__15959, G__15960, G__15961, G__15962, G__15963, G__15964, G__15965, G__15966, G__15967) : self__.dispatch_fn.call(null, G__15948, G__15949, G__15950, G__15951, G__15952, G__15953, G__15954, G__15955, G__15956, G__15957, G__15958, G__15959, G__15960, G__15961, G__15962, G__15963, 
      G__15964, G__15965, G__15966, G__15967);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15968 = a;
    var G__15969 = b;
    var G__15970 = c;
    var G__15971 = d;
    var G__15972 = e;
    var G__15973 = f;
    var G__15974 = g;
    var G__15975 = h;
    var G__15976 = i;
    var G__15977 = j;
    var G__15978 = k;
    var G__15979 = l;
    var G__15980 = m;
    var G__15981 = n;
    var G__15982 = o;
    var G__15983 = p;
    var G__15984 = q;
    var G__15985 = r;
    var G__15986 = s;
    var G__15987 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__15968, G__15969, G__15970, G__15971, G__15972, G__15973, G__15974, G__15975, G__15976, G__15977, G__15978, G__15979, G__15980, G__15981, G__15982, G__15983, G__15984, G__15985, G__15986, G__15987) : target_fn.call(null, G__15968, G__15969, G__15970, G__15971, G__15972, G__15973, G__15974, G__15975, G__15976, G__15977, G__15978, G__15979, G__15980, G__15981, G__15982, G__15983, G__15984, G__15985, G__15986, 
    G__15987);
  };
  var G__16408__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__16408 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__16408__1.call(this, self__);
      case 2:
        return G__16408__2.call(this, self__, a);
      case 3:
        return G__16408__3.call(this, self__, a, b);
      case 4:
        return G__16408__4.call(this, self__, a, b, c);
      case 5:
        return G__16408__5.call(this, self__, a, b, c, d);
      case 6:
        return G__16408__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__16408__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__16408__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__16408__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__16408__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__16408__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__16408__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__16408__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__16408__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__16408__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__16408__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__16408__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__16408__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__16408__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__16408__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__16408__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__16408__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16408.cljs$core$IFn$_invoke$arity$1 = G__16408__1;
  G__16408.cljs$core$IFn$_invoke$arity$2 = G__16408__2;
  G__16408.cljs$core$IFn$_invoke$arity$3 = G__16408__3;
  G__16408.cljs$core$IFn$_invoke$arity$4 = G__16408__4;
  G__16408.cljs$core$IFn$_invoke$arity$5 = G__16408__5;
  G__16408.cljs$core$IFn$_invoke$arity$6 = G__16408__6;
  G__16408.cljs$core$IFn$_invoke$arity$7 = G__16408__7;
  G__16408.cljs$core$IFn$_invoke$arity$8 = G__16408__8;
  G__16408.cljs$core$IFn$_invoke$arity$9 = G__16408__9;
  G__16408.cljs$core$IFn$_invoke$arity$10 = G__16408__10;
  G__16408.cljs$core$IFn$_invoke$arity$11 = G__16408__11;
  G__16408.cljs$core$IFn$_invoke$arity$12 = G__16408__12;
  G__16408.cljs$core$IFn$_invoke$arity$13 = G__16408__13;
  G__16408.cljs$core$IFn$_invoke$arity$14 = G__16408__14;
  G__16408.cljs$core$IFn$_invoke$arity$15 = G__16408__15;
  G__16408.cljs$core$IFn$_invoke$arity$16 = G__16408__16;
  G__16408.cljs$core$IFn$_invoke$arity$17 = G__16408__17;
  G__16408.cljs$core$IFn$_invoke$arity$18 = G__16408__18;
  G__16408.cljs$core$IFn$_invoke$arity$19 = G__16408__19;
  G__16408.cljs$core$IFn$_invoke$arity$20 = G__16408__20;
  G__16408.cljs$core$IFn$_invoke$arity$21 = G__16408__21;
  G__16408.cljs$core$IFn$_invoke$arity$22 = G__16408__22;
  return G__16408;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args15560) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15560)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15988 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__15988) : self__.dispatch_fn.call(null, G__15988);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15989 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__15989) : target_fn.call(null, G__15989);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15990 = a;
    var G__15991 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__15990, G__15991) : self__.dispatch_fn.call(null, G__15990, G__15991);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15992 = a;
  var G__15993 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__15992, G__15993) : target_fn.call(null, G__15992, G__15993);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15994 = a;
    var G__15995 = b;
    var G__15996 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__15994, G__15995, G__15996) : self__.dispatch_fn.call(null, G__15994, G__15995, G__15996);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15997 = a;
  var G__15998 = b;
  var G__15999 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__15997, G__15998, G__15999) : target_fn.call(null, G__15997, G__15998, G__15999);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16000 = a;
    var G__16001 = b;
    var G__16002 = c;
    var G__16003 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16000, G__16001, G__16002, G__16003) : self__.dispatch_fn.call(null, G__16000, G__16001, G__16002, G__16003);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16004 = a;
  var G__16005 = b;
  var G__16006 = c;
  var G__16007 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16004, G__16005, G__16006, G__16007) : target_fn.call(null, G__16004, G__16005, G__16006, G__16007);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16008 = a;
    var G__16009 = b;
    var G__16010 = c;
    var G__16011 = d;
    var G__16012 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16008, G__16009, G__16010, G__16011, G__16012) : self__.dispatch_fn.call(null, G__16008, G__16009, G__16010, G__16011, G__16012);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16013 = a;
  var G__16014 = b;
  var G__16015 = c;
  var G__16016 = d;
  var G__16017 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16013, G__16014, G__16015, G__16016, G__16017) : target_fn.call(null, G__16013, G__16014, G__16015, G__16016, G__16017);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16018 = a;
    var G__16019 = b;
    var G__16020 = c;
    var G__16021 = d;
    var G__16022 = e;
    var G__16023 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16018, G__16019, G__16020, G__16021, G__16022, G__16023) : self__.dispatch_fn.call(null, G__16018, G__16019, G__16020, G__16021, G__16022, G__16023);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16024 = a;
  var G__16025 = b;
  var G__16026 = c;
  var G__16027 = d;
  var G__16028 = e;
  var G__16029 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16024, G__16025, G__16026, G__16027, G__16028, G__16029) : target_fn.call(null, G__16024, G__16025, G__16026, G__16027, G__16028, G__16029);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16030 = a;
    var G__16031 = b;
    var G__16032 = c;
    var G__16033 = d;
    var G__16034 = e;
    var G__16035 = f;
    var G__16036 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16030, G__16031, G__16032, G__16033, G__16034, G__16035, G__16036) : self__.dispatch_fn.call(null, G__16030, G__16031, G__16032, G__16033, G__16034, G__16035, G__16036);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16037 = a;
  var G__16038 = b;
  var G__16039 = c;
  var G__16040 = d;
  var G__16041 = e;
  var G__16042 = f;
  var G__16043 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16037, G__16038, G__16039, G__16040, G__16041, G__16042, G__16043) : target_fn.call(null, G__16037, G__16038, G__16039, G__16040, G__16041, G__16042, G__16043);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16044 = a;
    var G__16045 = b;
    var G__16046 = c;
    var G__16047 = d;
    var G__16048 = e;
    var G__16049 = f;
    var G__16050 = g;
    var G__16051 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16044, G__16045, G__16046, G__16047, G__16048, G__16049, G__16050, G__16051) : self__.dispatch_fn.call(null, G__16044, G__16045, G__16046, G__16047, G__16048, G__16049, G__16050, G__16051);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16052 = a;
  var G__16053 = b;
  var G__16054 = c;
  var G__16055 = d;
  var G__16056 = e;
  var G__16057 = f;
  var G__16058 = g;
  var G__16059 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16052, G__16053, G__16054, G__16055, G__16056, G__16057, G__16058, G__16059) : target_fn.call(null, G__16052, G__16053, G__16054, G__16055, G__16056, G__16057, G__16058, G__16059);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16060 = a;
    var G__16061 = b;
    var G__16062 = c;
    var G__16063 = d;
    var G__16064 = e;
    var G__16065 = f;
    var G__16066 = g;
    var G__16067 = h;
    var G__16068 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16060, G__16061, G__16062, G__16063, G__16064, G__16065, G__16066, G__16067, G__16068) : self__.dispatch_fn.call(null, G__16060, G__16061, G__16062, G__16063, G__16064, G__16065, G__16066, G__16067, G__16068);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16069 = a;
  var G__16070 = b;
  var G__16071 = c;
  var G__16072 = d;
  var G__16073 = e;
  var G__16074 = f;
  var G__16075 = g;
  var G__16076 = h;
  var G__16077 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16069, G__16070, G__16071, G__16072, G__16073, G__16074, G__16075, G__16076, G__16077) : target_fn.call(null, G__16069, G__16070, G__16071, G__16072, G__16073, G__16074, G__16075, G__16076, G__16077);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16078 = a;
    var G__16079 = b;
    var G__16080 = c;
    var G__16081 = d;
    var G__16082 = e;
    var G__16083 = f;
    var G__16084 = g;
    var G__16085 = h;
    var G__16086 = i;
    var G__16087 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16078, G__16079, G__16080, G__16081, G__16082, G__16083, G__16084, G__16085, G__16086, G__16087) : self__.dispatch_fn.call(null, G__16078, G__16079, G__16080, G__16081, G__16082, G__16083, G__16084, G__16085, G__16086, G__16087);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16088 = a;
  var G__16089 = b;
  var G__16090 = c;
  var G__16091 = d;
  var G__16092 = e;
  var G__16093 = f;
  var G__16094 = g;
  var G__16095 = h;
  var G__16096 = i;
  var G__16097 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16088, G__16089, G__16090, G__16091, G__16092, G__16093, G__16094, G__16095, G__16096, G__16097) : target_fn.call(null, G__16088, G__16089, G__16090, G__16091, G__16092, G__16093, G__16094, G__16095, G__16096, G__16097);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16098 = a;
    var G__16099 = b;
    var G__16100 = c;
    var G__16101 = d;
    var G__16102 = e;
    var G__16103 = f;
    var G__16104 = g;
    var G__16105 = h;
    var G__16106 = i;
    var G__16107 = j;
    var G__16108 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16098, G__16099, G__16100, G__16101, G__16102, G__16103, G__16104, G__16105, G__16106, G__16107, G__16108) : self__.dispatch_fn.call(null, G__16098, G__16099, G__16100, G__16101, G__16102, G__16103, G__16104, G__16105, G__16106, G__16107, G__16108);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16109 = a;
  var G__16110 = b;
  var G__16111 = c;
  var G__16112 = d;
  var G__16113 = e;
  var G__16114 = f;
  var G__16115 = g;
  var G__16116 = h;
  var G__16117 = i;
  var G__16118 = j;
  var G__16119 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16109, G__16110, G__16111, G__16112, G__16113, G__16114, G__16115, G__16116, G__16117, G__16118, G__16119) : target_fn.call(null, G__16109, G__16110, G__16111, G__16112, G__16113, G__16114, G__16115, G__16116, G__16117, G__16118, G__16119);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16120 = a;
    var G__16121 = b;
    var G__16122 = c;
    var G__16123 = d;
    var G__16124 = e;
    var G__16125 = f;
    var G__16126 = g;
    var G__16127 = h;
    var G__16128 = i;
    var G__16129 = j;
    var G__16130 = k;
    var G__16131 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16120, G__16121, G__16122, G__16123, G__16124, G__16125, G__16126, G__16127, G__16128, G__16129, G__16130, G__16131) : self__.dispatch_fn.call(null, G__16120, G__16121, G__16122, G__16123, G__16124, G__16125, G__16126, G__16127, G__16128, G__16129, G__16130, G__16131);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16132 = a;
  var G__16133 = b;
  var G__16134 = c;
  var G__16135 = d;
  var G__16136 = e;
  var G__16137 = f;
  var G__16138 = g;
  var G__16139 = h;
  var G__16140 = i;
  var G__16141 = j;
  var G__16142 = k;
  var G__16143 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16132, G__16133, G__16134, G__16135, G__16136, G__16137, G__16138, G__16139, G__16140, G__16141, G__16142, G__16143) : target_fn.call(null, G__16132, G__16133, G__16134, G__16135, G__16136, G__16137, G__16138, G__16139, G__16140, G__16141, G__16142, G__16143);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16144 = a;
    var G__16145 = b;
    var G__16146 = c;
    var G__16147 = d;
    var G__16148 = e;
    var G__16149 = f;
    var G__16150 = g;
    var G__16151 = h;
    var G__16152 = i;
    var G__16153 = j;
    var G__16154 = k;
    var G__16155 = l;
    var G__16156 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16144, G__16145, G__16146, G__16147, G__16148, G__16149, G__16150, G__16151, G__16152, G__16153, G__16154, G__16155, G__16156) : self__.dispatch_fn.call(null, G__16144, G__16145, G__16146, G__16147, G__16148, G__16149, G__16150, G__16151, G__16152, G__16153, G__16154, G__16155, G__16156);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16157 = a;
  var G__16158 = b;
  var G__16159 = c;
  var G__16160 = d;
  var G__16161 = e;
  var G__16162 = f;
  var G__16163 = g;
  var G__16164 = h;
  var G__16165 = i;
  var G__16166 = j;
  var G__16167 = k;
  var G__16168 = l;
  var G__16169 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16157, G__16158, G__16159, G__16160, G__16161, G__16162, G__16163, G__16164, G__16165, G__16166, G__16167, G__16168, G__16169) : target_fn.call(null, G__16157, G__16158, G__16159, G__16160, G__16161, G__16162, G__16163, G__16164, G__16165, G__16166, G__16167, G__16168, G__16169);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16170 = a;
    var G__16171 = b;
    var G__16172 = c;
    var G__16173 = d;
    var G__16174 = e;
    var G__16175 = f;
    var G__16176 = g;
    var G__16177 = h;
    var G__16178 = i;
    var G__16179 = j;
    var G__16180 = k;
    var G__16181 = l;
    var G__16182 = m;
    var G__16183 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16170, G__16171, G__16172, G__16173, G__16174, G__16175, G__16176, G__16177, G__16178, G__16179, G__16180, G__16181, G__16182, G__16183) : self__.dispatch_fn.call(null, G__16170, G__16171, G__16172, G__16173, G__16174, G__16175, G__16176, G__16177, G__16178, G__16179, G__16180, G__16181, G__16182, G__16183);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16184 = a;
  var G__16185 = b;
  var G__16186 = c;
  var G__16187 = d;
  var G__16188 = e;
  var G__16189 = f;
  var G__16190 = g;
  var G__16191 = h;
  var G__16192 = i;
  var G__16193 = j;
  var G__16194 = k;
  var G__16195 = l;
  var G__16196 = m;
  var G__16197 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16184, G__16185, G__16186, G__16187, G__16188, G__16189, G__16190, G__16191, G__16192, G__16193, G__16194, G__16195, G__16196, G__16197) : target_fn.call(null, G__16184, G__16185, G__16186, G__16187, G__16188, G__16189, G__16190, G__16191, G__16192, G__16193, G__16194, G__16195, G__16196, G__16197);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16198 = a;
    var G__16199 = b;
    var G__16200 = c;
    var G__16201 = d;
    var G__16202 = e;
    var G__16203 = f;
    var G__16204 = g;
    var G__16205 = h;
    var G__16206 = i;
    var G__16207 = j;
    var G__16208 = k;
    var G__16209 = l;
    var G__16210 = m;
    var G__16211 = n;
    var G__16212 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16198, G__16199, G__16200, G__16201, G__16202, G__16203, G__16204, G__16205, G__16206, G__16207, G__16208, G__16209, G__16210, G__16211, G__16212) : self__.dispatch_fn.call(null, G__16198, G__16199, G__16200, G__16201, G__16202, G__16203, G__16204, G__16205, G__16206, G__16207, G__16208, G__16209, G__16210, G__16211, G__16212);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16213 = a;
  var G__16214 = b;
  var G__16215 = c;
  var G__16216 = d;
  var G__16217 = e;
  var G__16218 = f;
  var G__16219 = g;
  var G__16220 = h;
  var G__16221 = i;
  var G__16222 = j;
  var G__16223 = k;
  var G__16224 = l;
  var G__16225 = m;
  var G__16226 = n;
  var G__16227 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16213, G__16214, G__16215, G__16216, G__16217, G__16218, G__16219, G__16220, G__16221, G__16222, G__16223, G__16224, G__16225, G__16226, G__16227) : target_fn.call(null, G__16213, G__16214, G__16215, G__16216, G__16217, G__16218, G__16219, G__16220, G__16221, G__16222, G__16223, G__16224, G__16225, G__16226, G__16227);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16228 = a;
    var G__16229 = b;
    var G__16230 = c;
    var G__16231 = d;
    var G__16232 = e;
    var G__16233 = f;
    var G__16234 = g;
    var G__16235 = h;
    var G__16236 = i;
    var G__16237 = j;
    var G__16238 = k;
    var G__16239 = l;
    var G__16240 = m;
    var G__16241 = n;
    var G__16242 = o;
    var G__16243 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16228, G__16229, G__16230, G__16231, G__16232, G__16233, G__16234, G__16235, G__16236, G__16237, G__16238, G__16239, G__16240, G__16241, G__16242, G__16243) : self__.dispatch_fn.call(null, G__16228, G__16229, G__16230, G__16231, G__16232, G__16233, G__16234, G__16235, G__16236, G__16237, G__16238, G__16239, G__16240, G__16241, G__16242, G__16243);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16244 = a;
  var G__16245 = b;
  var G__16246 = c;
  var G__16247 = d;
  var G__16248 = e;
  var G__16249 = f;
  var G__16250 = g;
  var G__16251 = h;
  var G__16252 = i;
  var G__16253 = j;
  var G__16254 = k;
  var G__16255 = l;
  var G__16256 = m;
  var G__16257 = n;
  var G__16258 = o;
  var G__16259 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16244, G__16245, G__16246, G__16247, G__16248, G__16249, G__16250, G__16251, G__16252, G__16253, G__16254, G__16255, G__16256, G__16257, G__16258, G__16259) : target_fn.call(null, G__16244, G__16245, G__16246, G__16247, G__16248, G__16249, G__16250, G__16251, G__16252, G__16253, G__16254, G__16255, G__16256, G__16257, G__16258, G__16259);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16260 = a;
    var G__16261 = b;
    var G__16262 = c;
    var G__16263 = d;
    var G__16264 = e;
    var G__16265 = f;
    var G__16266 = g;
    var G__16267 = h;
    var G__16268 = i;
    var G__16269 = j;
    var G__16270 = k;
    var G__16271 = l;
    var G__16272 = m;
    var G__16273 = n;
    var G__16274 = o;
    var G__16275 = p;
    var G__16276 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16260, G__16261, G__16262, G__16263, G__16264, G__16265, G__16266, G__16267, G__16268, G__16269, G__16270, G__16271, G__16272, G__16273, G__16274, G__16275, G__16276) : self__.dispatch_fn.call(null, G__16260, G__16261, G__16262, G__16263, G__16264, G__16265, G__16266, G__16267, G__16268, G__16269, G__16270, G__16271, G__16272, G__16273, G__16274, G__16275, G__16276);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16277 = a;
  var G__16278 = b;
  var G__16279 = c;
  var G__16280 = d;
  var G__16281 = e;
  var G__16282 = f;
  var G__16283 = g;
  var G__16284 = h;
  var G__16285 = i;
  var G__16286 = j;
  var G__16287 = k;
  var G__16288 = l;
  var G__16289 = m;
  var G__16290 = n;
  var G__16291 = o;
  var G__16292 = p;
  var G__16293 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16277, G__16278, G__16279, G__16280, G__16281, G__16282, G__16283, G__16284, G__16285, G__16286, G__16287, G__16288, G__16289, G__16290, G__16291, G__16292, G__16293) : target_fn.call(null, G__16277, G__16278, G__16279, G__16280, G__16281, G__16282, G__16283, G__16284, G__16285, G__16286, G__16287, G__16288, G__16289, G__16290, G__16291, G__16292, G__16293);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16294 = a;
    var G__16295 = b;
    var G__16296 = c;
    var G__16297 = d;
    var G__16298 = e;
    var G__16299 = f;
    var G__16300 = g;
    var G__16301 = h;
    var G__16302 = i;
    var G__16303 = j;
    var G__16304 = k;
    var G__16305 = l;
    var G__16306 = m;
    var G__16307 = n;
    var G__16308 = o;
    var G__16309 = p;
    var G__16310 = q;
    var G__16311 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16294, G__16295, G__16296, G__16297, G__16298, G__16299, G__16300, G__16301, G__16302, G__16303, G__16304, G__16305, G__16306, G__16307, G__16308, G__16309, G__16310, G__16311) : self__.dispatch_fn.call(null, G__16294, G__16295, G__16296, G__16297, G__16298, G__16299, G__16300, G__16301, G__16302, G__16303, G__16304, G__16305, G__16306, G__16307, G__16308, G__16309, G__16310, G__16311);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16312 = a;
  var G__16313 = b;
  var G__16314 = c;
  var G__16315 = d;
  var G__16316 = e;
  var G__16317 = f;
  var G__16318 = g;
  var G__16319 = h;
  var G__16320 = i;
  var G__16321 = j;
  var G__16322 = k;
  var G__16323 = l;
  var G__16324 = m;
  var G__16325 = n;
  var G__16326 = o;
  var G__16327 = p;
  var G__16328 = q;
  var G__16329 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16312, G__16313, G__16314, G__16315, G__16316, G__16317, G__16318, G__16319, G__16320, G__16321, G__16322, G__16323, G__16324, G__16325, G__16326, G__16327, G__16328, G__16329) : target_fn.call(null, G__16312, G__16313, G__16314, G__16315, G__16316, G__16317, G__16318, G__16319, G__16320, G__16321, G__16322, G__16323, G__16324, G__16325, G__16326, G__16327, G__16328, G__16329);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16330 = a;
    var G__16331 = b;
    var G__16332 = c;
    var G__16333 = d;
    var G__16334 = e;
    var G__16335 = f;
    var G__16336 = g;
    var G__16337 = h;
    var G__16338 = i;
    var G__16339 = j;
    var G__16340 = k;
    var G__16341 = l;
    var G__16342 = m;
    var G__16343 = n;
    var G__16344 = o;
    var G__16345 = p;
    var G__16346 = q;
    var G__16347 = r;
    var G__16348 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16330, G__16331, G__16332, G__16333, G__16334, G__16335, G__16336, G__16337, G__16338, G__16339, G__16340, G__16341, G__16342, G__16343, G__16344, G__16345, G__16346, G__16347, G__16348) : self__.dispatch_fn.call(null, G__16330, G__16331, G__16332, G__16333, G__16334, G__16335, G__16336, G__16337, G__16338, G__16339, G__16340, G__16341, G__16342, G__16343, G__16344, G__16345, G__16346, 
    G__16347, G__16348);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16349 = a;
  var G__16350 = b;
  var G__16351 = c;
  var G__16352 = d;
  var G__16353 = e;
  var G__16354 = f;
  var G__16355 = g;
  var G__16356 = h;
  var G__16357 = i;
  var G__16358 = j;
  var G__16359 = k;
  var G__16360 = l;
  var G__16361 = m;
  var G__16362 = n;
  var G__16363 = o;
  var G__16364 = p;
  var G__16365 = q;
  var G__16366 = r;
  var G__16367 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16349, G__16350, G__16351, G__16352, G__16353, G__16354, G__16355, G__16356, G__16357, G__16358, G__16359, G__16360, G__16361, G__16362, G__16363, G__16364, G__16365, G__16366, G__16367) : target_fn.call(null, G__16349, G__16350, G__16351, G__16352, G__16353, G__16354, G__16355, G__16356, G__16357, G__16358, G__16359, G__16360, G__16361, G__16362, G__16363, G__16364, G__16365, G__16366, G__16367);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__16368 = a;
    var G__16369 = b;
    var G__16370 = c;
    var G__16371 = d;
    var G__16372 = e;
    var G__16373 = f;
    var G__16374 = g;
    var G__16375 = h;
    var G__16376 = i;
    var G__16377 = j;
    var G__16378 = k;
    var G__16379 = l;
    var G__16380 = m;
    var G__16381 = n;
    var G__16382 = o;
    var G__16383 = p;
    var G__16384 = q;
    var G__16385 = r;
    var G__16386 = s;
    var G__16387 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16368, G__16369, G__16370, G__16371, G__16372, G__16373, G__16374, G__16375, G__16376, G__16377, G__16378, G__16379, G__16380, G__16381, G__16382, G__16383, G__16384, G__16385, G__16386, G__16387) : self__.dispatch_fn.call(null, G__16368, G__16369, G__16370, G__16371, G__16372, G__16373, G__16374, G__16375, G__16376, G__16377, G__16378, G__16379, G__16380, G__16381, G__16382, G__16383, 
    G__16384, G__16385, G__16386, G__16387);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__16388 = a;
  var G__16389 = b;
  var G__16390 = c;
  var G__16391 = d;
  var G__16392 = e;
  var G__16393 = f;
  var G__16394 = g;
  var G__16395 = h;
  var G__16396 = i;
  var G__16397 = j;
  var G__16398 = k;
  var G__16399 = l;
  var G__16400 = m;
  var G__16401 = n;
  var G__16402 = o;
  var G__16403 = p;
  var G__16404 = q;
  var G__16405 = r;
  var G__16406 = s;
  var G__16407 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__16388, G__16389, G__16390, G__16391, G__16392, G__16393, G__16394, G__16395, G__16396, G__16397, G__16398, G__16399, G__16400, G__16401, G__16402, G__16403, G__16404, G__16405, G__16406, G__16407) : target_fn.call(null, G__16388, G__16389, G__16390, G__16391, G__16392, G__16393, G__16394, G__16395, G__16396, G__16397, G__16398, G__16399, G__16400, G__16401, G__16402, G__16403, G__16404, G__16405, G__16406, 
  G__16407);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__16409 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__16409);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
  return cljs.core._write(writer__9371__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.pr_writer_ex_info = function pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, data) {
    return ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
  };
  var ex_info__3 = function(msg, data, cause) {
    cljs.core.ExceptionInfo.prototype = function() {
      var G__16414 = msg;
      return Error(G__16414);
    }();
    cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";
    cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
    cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
      var obj__$1 = this;
      return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
    };
    return new cljs.core.ExceptionInfo(msg, data, cause);
  };
  ex_info = function(msg, data, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, data);
      case 3:
        return ex_info__3.call(this, msg, data, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__16419 = x;
      var G__16420 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__16419, G__16420) : pred.call(null, G__16419, G__16420);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__16421 = y;
        var G__16422 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__16421, G__16422) : pred.call(null, G__16421, G__16422);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("hsnd.callback");
goog.require("cljs.core");
hsnd.callback.callbacks = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
hsnd.callback.listeners_for = function listeners_for(name) {
  return name.call(null, cljs.core.deref.call(null, hsnd.callback.callbacks));
};
hsnd.callback.emit = function() {
  var emit__delegate = function(name, rest) {
    var listeners = hsnd.callback.listeners_for.call(null, name);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(listeners) {
      return function(p1__10673_SHARP_) {
        return cljs.core.apply.call(null, p1__10673_SHARP_, rest);
      };
    }(listeners), listeners));
  };
  var emit = function(name, var_args) {
    var rest = null;
    if (arguments.length > 1) {
      var G__10674__i = 0, G__10674__a = new Array(arguments.length - 1);
      while (G__10674__i < G__10674__a.length) {
        G__10674__a[G__10674__i] = arguments[G__10674__i + 1];
        ++G__10674__i;
      }
      rest = new cljs.core.IndexedSeq(G__10674__a, 0);
    }
    return emit__delegate.call(this, name, rest);
  };
  emit.cljs$lang$maxFixedArity = 1;
  emit.cljs$lang$applyTo = function(arglist__10675) {
    var name = cljs.core.first(arglist__10675);
    var rest = cljs.core.rest(arglist__10675);
    return emit__delegate(name, rest);
  };
  emit.cljs$core$IFn$_invoke$arity$variadic = emit__delegate;
  return emit;
}();
hsnd.callback.listen = function listen(name, func) {
  if (!cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, hsnd.callback.callbacks), name)) {
    cljs.core.swap_BANG_.call(null, hsnd.callback.callbacks, cljs.core.assoc, name, cljs.core.PersistentVector.EMPTY);
  } else {
  }
  return cljs.core.swap_BANG_.call(null, hsnd.callback.callbacks, cljs.core.assoc, name, cljs.core.conj.call(null, hsnd.callback.listeners_for.call(null, name), func));
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", 
SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", 
ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", 
COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", 
DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return-1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = (key);
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.removeAllNativeListeners = function() {
  goog.events.listenerCountEstimate_ = 0;
  return 0;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return[];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return!!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = 1;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false;
        }
      }
    }
  }
  return Boolean(retval);
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, true, evt);
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(ancestors[i], type, false, evt);
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("hsnd.component");
goog.require("cljs.core");
hsnd.component.components = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
hsnd.component.new$ = function new$(entity, name, hash) {
  var component = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "entity", "entity", -450970276), cljs.core.atom.call(null, entity), new cljs.core.Keyword(null, "name", "name", 1843675177), name, new cljs.core.Keyword(null, "hash", "hash", -13781596), cljs.core.atom.call(null, hash)], null);
  cljs.core.swap_BANG_.call(null, hsnd.component.components, cljs.core.conj, component);
  return component;
};
hsnd.component.entity = function entity(component) {
  return cljs.core.deref.call(null, component.call(null, new cljs.core.Keyword(null, "entity", "entity", -450970276)));
};
hsnd.component.by_name = function by_name(name) {
  return cljs.core.filter.call(null, function(p1__10578_SHARP_) {
    return cljs.core._EQ_.call(null, p1__10578_SHARP_.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177)), name) && !(hsnd.component.entity.call(null, p1__10578_SHARP_) == null);
  }, cljs.core.deref.call(null, hsnd.component.components));
};
hsnd.component.entities = function entities(components) {
  return cljs.core.map.call(null, hsnd.component.entity, components);
};
hsnd.component.set = function set(component, key, value) {
  return cljs.core.swap_BANG_.call(null, component.call(null, new cljs.core.Keyword(null, "hash", "hash", -13781596)), cljs.core.assoc, key, value);
};
hsnd.component.get = function get(component, key) {
  return key.call(null, cljs.core.deref.call(null, component.call(null, new cljs.core.Keyword(null, "hash", "hash", -13781596))));
};
hsnd.component.reset = function reset(component, hash) {
  return cljs.core.reset_BANG_.call(null, component.call(null, new cljs.core.Keyword(null, "hash", "hash", -13781596)), hash);
};
hsnd.component.get_hash = function get_hash(component) {
  return cljs.core.deref.call(null, component.call(null, new cljs.core.Keyword(null, "hash", "hash", -13781596)));
};
hsnd.component.remove = function remove(component) {
  return cljs.core.reset_BANG_.call(null, component.call(null, new cljs.core.Keyword(null, "entity", "entity", -450970276)), null);
};
goog.provide("hsnd.entity");
goog.require("cljs.core");
goog.require("hsnd.component");
hsnd.entity.new$ = function new$(name) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), name, new cljs.core.Keyword(null, "components", "components", -1073188942), cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY)], null);
};
hsnd.entity.add = function add(entity, name, hash) {
  var component = hsnd.component.new$.call(null, entity, name, hash);
  return cljs.core.swap_BANG_.call(null, entity.call(null, new cljs.core.Keyword(null, "components", "components", -1073188942)), cljs.core.assoc, name, component);
};
hsnd.entity.get = function get(entity, name) {
  return cljs.core.deref.call(null, entity.call(null, new cljs.core.Keyword(null, "components", "components", -1073188942))).call(null, name);
};
hsnd.entity.get_with_defaults = function get_with_defaults(entity, name, defaults) {
  if (hsnd.entity.get.call(null, entity, name) == null) {
    hsnd.entity.add.call(null, entity, name, defaults);
  } else {
  }
  return hsnd.entity.get.call(null, entity, name);
};
hsnd.entity.remove = function remove(entity, name) {
  var component = hsnd.entity.get.call(null, entity, name);
  if (!(component == null)) {
    hsnd.component.remove.call(null, component);
    return cljs.core.swap_BANG_.call(null, entity.call(null, new cljs.core.Keyword(null, "components", "components", -1073188942)), cljs.core.dissoc, name);
  } else {
    return null;
  }
};
hsnd.entity.entities_with = function entities_with(component_name) {
  return hsnd.component.entities.call(null, hsnd.component.by_name.call(null, component_name));
};
hsnd.entity.each = function() {
  var each = null;
  var each__1 = function(component_name) {
    return each.call(null, component_name, cljs.core.identity);
  };
  var each__2 = function(component_name, func) {
    return cljs.core.doall.call(null, cljs.core.map.call(null, func, hsnd.entity.entities_with.call(null, component_name)));
  };
  each = function(component_name, func) {
    switch(arguments.length) {
      case 1:
        return each__1.call(this, component_name);
      case 2:
        return each__2.call(this, component_name, func);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  each.cljs$core$IFn$_invoke$arity$1 = each__1;
  each.cljs$core$IFn$_invoke$arity$2 = each__2;
  return each;
}();
hsnd.entity.reduce = function reduce(component_name, func, value) {
  return cljs.core.reduce.call(null, func, value, hsnd.entity.entities_with.call(null, component_name));
};
goog.provide("hsnd.systems.battle");
goog.require("cljs.core");
goog.require("hsnd.callback");
goog.require("hsnd.component");
goog.require("hsnd.entity");
hsnd.systems.battle.init = function init() {
  return null;
};
hsnd.systems.battle.draw = function draw() {
  return null;
};
hsnd.systems.battle.keydown = function keydown() {
  return null;
};
hsnd.systems.battle.keyup = function keyup() {
  return null;
};
hsnd.systems.battle.update = function update() {
  return null;
};
hsnd.systems.battle.log_damage_by_player = function log_damage_by_player(damage, name) {
  return hsnd.callback.emit.call(null, new cljs.core.Keyword(null, "log-message", "log-message", -1434597634), [cljs.core.str("you inflicted "), cljs.core.str(damage), cljs.core.str(" damage to "), cljs.core.str(name)].join(""));
};
hsnd.systems.battle.log_damage_by_enemy = function log_damage_by_enemy(damage, name) {
  return hsnd.callback.emit.call(null, new cljs.core.Keyword(null, "log-message", "log-message", -1434597634), [cljs.core.str(name), cljs.core.str(" inflicted "), cljs.core.str(damage), cljs.core.str(" damage to you")].join(""));
};
hsnd.systems.battle.inflict_damage = function inflict_damage(damage, entity) {
  var health_component = hsnd.entity.get.call(null, entity, "health");
  var health_QMARK_ = !(health_component == null);
  if (health_QMARK_) {
    return hsnd.component.set.call(null, health_component, new cljs.core.Keyword(null, "value", "value", 305978217), hsnd.component.get.call(null, health_component, new cljs.core.Keyword(null, "value", "value", 305978217)) - damage);
  } else {
    return null;
  }
};
hsnd.systems.battle.handle_collision = function handle_collision(entity, other_entity) {
  var entity_name = entity.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177));
  var other_name = other_entity.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177));
  var player_QMARK_ = !(hsnd.entity.get.call(null, entity, "player") == null);
  var enemy_QMARK_ = !(hsnd.entity.get.call(null, entity, "enemy") == null);
  var other_player_QMARK_ = !(hsnd.entity.get.call(null, other_entity, "player") == null);
  var other_enemy_QMARK_ = !(hsnd.entity.get.call(null, other_entity, "enemy") == null);
  var damage_component = hsnd.entity.get.call(null, entity, "damage");
  var has_damage_QMARK_ = !(damage_component == null);
  if (player_QMARK_ && other_enemy_QMARK_ && has_damage_QMARK_) {
    var damage_10601 = hsnd.component.get.call(null, damage_component, new cljs.core.Keyword(null, "value", "value", 305978217));
    hsnd.systems.battle.inflict_damage.call(null, damage_10601, other_entity);
    hsnd.systems.battle.log_damage_by_player.call(null, damage_10601, other_name);
  } else {
  }
  if (enemy_QMARK_ && other_player_QMARK_ && has_damage_QMARK_) {
    var damage = hsnd.component.get.call(null, damage_component, new cljs.core.Keyword(null, "value", "value", 305978217));
    hsnd.systems.battle.inflict_damage.call(null, damage, other_entity);
    return hsnd.systems.battle.log_damage_by_enemy.call(null, damage, entity_name);
  } else {
    return null;
  }
};
hsnd.systems.battle.system = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "init", "init", -1875481434), hsnd.systems.battle.init, new cljs.core.Keyword(null, "draw", "draw", 1358331674), hsnd.systems.battle.draw, new cljs.core.Keyword(null, "update", "update", 1045576396), hsnd.systems.battle.update, new cljs.core.Keyword(null, "keydown", "keydown", -629268186), hsnd.systems.battle.keydown, new cljs.core.Keyword(null, "keyup", "keyup", -794526927), hsnd.systems.battle.keyup, 
new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "collision", "collision", -201625508), hsnd.systems.battle.handle_collision], null)], null);
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map;
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("\x26");
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (el.form != form || el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue;
    }
    var name = el.name;
    switch(el.type.toLowerCase()) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if (values != null) {
          for (var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value);
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if (value != null) {
          fnAppend(result, name, value);
        }
      ;
    }
  }
  var inputs = form.getElementsByTagName("input");
  for (var input, i = 0;input = inputs[i];i++) {
    if (input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0");
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if (!array) {
    array = [];
    map.set(name, array);
  }
  array.push(value);
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "\x3d" + encodeURIComponent(value));
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for (var el, i = 0;el = els[i];i++) {
    if (!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true;
    }
  }
  return false;
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if (el.tagName == "FORM") {
    var els = el.elements;
    for (var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled);
    }
  } else {
    if (disabled == true) {
      el.blur();
    }
    el.disabled = disabled;
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if (el.select) {
    el.select();
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value;
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value;
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if (!goog.isDef(type)) {
    return null;
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null;
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if (els) {
    if (els.type) {
      return goog.dom.forms.getValue(els);
    } else {
      for (var i = 0;i < els.length;i++) {
        var val = goog.dom.forms.getValue(els[i]);
        if (val) {
          return val;
        }
      }
    }
  }
  return null;
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null;
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null;
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for (var option, i = 0;option = el.options[i];i++) {
    if (option.selected) {
      values.push(option.value);
    }
  }
  return values.length ? values : null;
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if (goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, (opt_value));
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, (opt_value));
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, (opt_value));
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : "";
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null;
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if (goog.isString(opt_value)) {
    for (var option, i = 0;option = el.options[i];i++) {
      if (option.value == opt_value) {
        option.selected = true;
        break;
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if (goog.isString(opt_value)) {
    opt_value = [opt_value];
  }
  for (var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if (opt_value) {
      for (var value, j = 0;value = opt_value[j];j++) {
        if (option.value == value) {
          option.selected = true;
        }
      }
    }
  }
};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className;
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || [];
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount;
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length;
};
goog.dom.classes.add_ = function(classes, args) {
  for (var i = 0;i < args.length;i++) {
    if (!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item);
  });
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for (var i = 0;i < classes.length;i++) {
    if (classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true;
    }
  }
  if (removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "));
  }
  return removed;
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if (goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove);
  } else {
    if (goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove);
    }
  }
  if (goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd);
  } else {
    if (goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd);
    }
  }
  goog.dom.classes.set(element, classes.join(" "));
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className);
};
goog.dom.classes.enable = function(element, className, enabled) {
  if (enabled) {
    goog.dom.classes.add(element, className);
  } else {
    goog.dom.classes.remove(element, className);
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add;
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div_17163 = document.createElement("div");
var test_html_17164 = "   \x3clink/\x3e\x3ctable\x3e\x3c/table\x3e\x3ca href\x3d'/a' style\x3d'top:1px;float:left;opacity:.55;'\x3ea\x3c/a\x3e\x3cinput type\x3d'checkbox'/\x3e";
div_17163.innerHTML = test_html_17164;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div_17163.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div_17163.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div_17163.getElementsByTagName("link").length, 0);
goog.provide("goog.dom.vendor");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "Webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "Moz";
    } else {
      if (goog.userAgent.IE) {
        return "ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "O";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getVendorPrefix = function() {
  if (goog.userAgent.WEBKIT) {
    return "-webkit";
  } else {
    if (goog.userAgent.GECKO) {
      return "-moz";
    } else {
      if (goog.userAgent.IE) {
        return "-ms";
      } else {
        if (goog.userAgent.OPERA) {
          return "-o";
        }
      }
    }
  }
  return null;
};
goog.dom.vendor.getPrefixedPropertyName = function(propertyName, opt_object) {
  if (opt_object && propertyName in opt_object) {
    return propertyName;
  }
  var prefix = goog.dom.vendor.getVendorJsPrefix();
  if (prefix) {
    prefix = prefix.toLowerCase();
    var prefixedPropertyName = prefix + goog.string.toTitleCase(propertyName);
    return!goog.isDef(opt_object) || prefixedPropertyName in opt_object ? prefixedPropertyName : null;
  }
  return null;
};
goog.dom.vendor.getPrefixedEventType = function(eventType) {
  var prefix = goog.dom.vendor.getVendorJsPrefix() || "";
  return(prefix + eventType).toLowerCase();
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left;
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for (var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x);
  }
  return box;
};
goog.math.Box.prototype.getWidth = function() {
  return this.right - this.left;
};
goog.math.Box.prototype.getHeight = function() {
  return this.bottom - this.top;
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left);
};
if (goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return "(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)";
  };
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other);
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if (goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left;
  } else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left;
  }
  return this;
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom);
};
goog.math.Box.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left;
};
goog.math.Box.contains = function(box, other) {
  if (!box || !other) {
    return false;
  }
  if (other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom;
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom;
};
goog.math.Box.relativePositionX = function(box, coord) {
  if (coord.x < box.left) {
    return coord.x - box.left;
  } else {
    if (coord.x > box.right) {
      return coord.x - box.right;
    }
  }
  return 0;
};
goog.math.Box.relativePositionY = function(box, coord) {
  if (coord.y < box.top) {
    return coord.y - box.top;
  } else {
    if (coord.y > box.bottom) {
      return coord.y - box.bottom;
    }
  }
  return 0;
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y);
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom;
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding;
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this;
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this;
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this;
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y;
  } else {
    this.left += tx;
    this.right += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty;
    }
  }
  return this;
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this;
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h;
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height);
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left);
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top);
};
if (goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return "(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)";
  };
}
goog.math.Rect.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height;
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if (x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if (y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true;
    }
  }
  return false;
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if (x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if (y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0);
    }
  }
  return null;
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height;
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect);
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if (!intersection || !intersection.height || !intersection.width) {
    return[a.clone()];
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if (b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top;
  }
  if (bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top;
  }
  if (b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height));
  }
  if (br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height));
  }
  return result;
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect);
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top;
};
goog.math.Rect.boundingRect = function(a, b) {
  if (!a || !b) {
    return null;
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone;
};
goog.math.Rect.prototype.contains = function(another) {
  if (another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height;
  } else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height;
  }
};
goog.math.Rect.prototype.squaredDistance = function(point) {
  var dx = point.x < this.left ? this.left - point.x : Math.max(point.x - (this.left + this.width), 0);
  var dy = point.y < this.top ? this.top - point.y : Math.max(point.y - (this.top + this.height), 0);
  return dx * dx + dy * dy;
};
goog.math.Rect.prototype.distance = function(point) {
  return Math.sqrt(this.squaredDistance(point));
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height);
};
goog.math.Rect.prototype.getTopLeft = function() {
  return new goog.math.Coordinate(this.left, this.top);
};
goog.math.Rect.prototype.getCenter = function() {
  return new goog.math.Coordinate(this.left + this.width / 2, this.top + this.height / 2);
};
goog.math.Rect.prototype.getBottomRight = function() {
  return new goog.math.Coordinate(this.left + this.width, this.top + this.height);
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y;
  } else {
    this.left += tx;
    if (goog.isNumber(opt_ty)) {
      this.top += opt_ty;
    }
  }
  return this;
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this;
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS", false);
goog.style.setStyle = function(element, style, opt_value) {
  if (goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style);
  } else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element));
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if (propertyName) {
    element.style[propertyName] = value;
  }
};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
    if (element.style[prefixedStyle] !== undefined) {
      return prefixedStyle;
    }
  }
  return camelStyle;
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if (element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(camelStyle);
    if (element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style;
    }
  }
  return style;
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if (typeof styleValue !== "undefined") {
    return styleValue;
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || "";
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if (doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if (styles) {
      return styles[property] || styles.getPropertyValue(property) || "";
    }
  }
  return "";
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null;
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style];
};
goog.style.getComputedBoxSizing = function(element) {
  return goog.style.getStyle_(element, "boxSizing") || goog.style.getStyle_(element, "MozBoxSizing") || goog.style.getStyle_(element, "WebkitBoxSizing") || null;
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position");
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor");
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX");
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY");
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex");
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign");
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor");
};
goog.style.getComputedTransform = function(element) {
  var property = goog.style.getVendorStyleName_(element, "transform");
  return goog.style.getStyle_(element, property) || goog.style.getStyle_(element, "transform");
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersionOrHigher("1.9");
  if (arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y;
  } else {
    x = arg1;
    y = opt_arg2;
  }
  el.style.left = goog.style.getPixelStyleValue_((x), buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_((y), buggyGeckoSubPixelPos);
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop);
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if (opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node);
  } else {
    doc = goog.dom.getDocument();
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body;
  }
  return doc.documentElement;
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect;
  try {
    rect = el.getBoundingClientRect();
  } catch (e) {
    return{"left":0, "top":0, "right":0, "bottom":0};
  }
  if (goog.userAgent.IE && el.ownerDocument.body) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop;
  }
  return(rect);
};
goog.style.getOffsetParent = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8)) {
    return element.offsetParent;
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for (var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if (!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return(parent);
    }
  }
  return null;
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for (var el = element;el = goog.style.getOffsetParent(el);) {
    if ((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible")) {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if (opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2;
  } else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0));
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop);
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y;
};
goog.style.getClientLeftTop = function(el) {
  if (goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if (goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth;
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")));
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop);
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = !goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS && goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if (el == viewportElement) {
    return pos;
  }
  if (goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS || el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y;
  } else {
    if (doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY;
    } else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if (parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0;
        }
        if (goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break;
        }
        parent = parent.offsetParent;
      } while (parent && parent != el);
      if (goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop;
      }
      for (parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if (!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop;
        }
      }
    }
  }
  return pos;
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x;
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y;
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPositionForElement_(goog.asserts.assert(currentEl));
    position.x += offset.x;
    position.y += offset.y;
  } while (currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position;
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if (origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if (goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll());
    }
    rect.left += pos.x;
    rect.top += pos.y;
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y);
};
goog.style.getClientPositionForElement_ = function(el) {
  var pos;
  if (goog.style.GET_BOUNDING_CLIENT_RECT_ALWAYS_EXISTS || el.getBoundingClientRect) {
    var box = goog.style.getBoundingClientRect_(el);
    pos = new goog.math.Coordinate(box.left, box.top);
  } else {
    var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
    var pageCoord = goog.style.getPageOffset(el);
    pos = new goog.math.Coordinate(pageCoord.x - scrollCoord.x, pageCoord.y - scrollCoord.y);
  }
  if (goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher(12)) {
    return goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el));
  } else {
    return pos;
  }
};
goog.style.getClientPosition = function(el) {
  goog.asserts.assert(el);
  if (el.nodeType == goog.dom.NodeType.ELEMENT) {
    return goog.style.getClientPositionForElement_((el));
  } else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var be = (el);
    var targetEvent = el;
    if (el.targetTouches) {
      targetEvent = el.targetTouches[0];
    } else {
      if (isAbstractedEvent && be.getBrowserEvent().targetTouches) {
        targetEvent = be.getBrowserEvent().targetTouches[0];
      }
    }
    return new goog.math.Coordinate(targetEvent.clientX, targetEvent.clientY);
  }
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if (x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x;
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy);
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if (w instanceof goog.math.Size) {
    h = w.height;
    w = w.width;
  } else {
    if (opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h;
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, (h));
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if (typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px";
  }
  return value;
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true);
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true);
};
goog.style.getSize = function(element) {
  return goog.style.evaluateWithTemporaryDisplay_(goog.style.getSizeWithDisplay_, (element));
};
goog.style.evaluateWithTemporaryDisplay_ = function(fn, element) {
  if (goog.style.getStyle_(element, "display") != "none") {
    return fn(element);
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var retVal = fn(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return retVal;
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if ((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
  }
  return new goog.math.Size(offsetWidth, offsetHeight);
};
goog.style.getTransformedSize = function(element) {
  if (!element.getBoundingClientRect) {
    return null;
  }
  var clientRect = goog.style.evaluateWithTemporaryDisplay_(goog.style.getBoundingClientRect_, element);
  return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top);
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height);
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector));
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector);
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if ("opacity" in style) {
    result = style.opacity;
  } else {
    if ("MozOpacity" in style) {
      result = style.MozOpacity;
    } else {
      if ("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if (match) {
          result = String(match[1] / 100);
        }
      }
    }
  }
  return result == "" ? result : Number(result);
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if ("opacity" in style) {
    style.opacity = alpha;
  } else {
    if ("MozOpacity" in style) {
      style.MozOpacity = alpha;
    } else {
      if ("filter" in style) {
        if (alpha === "") {
          style.filter = "";
        } else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")";
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")';
  } else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat";
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if ("filter" in style) {
    style.filter = "";
  } else {
    style.backgroundImage = "none";
  }
};
goog.style.showElement = function(el, display) {
  goog.style.setElementShown(el, display);
};
goog.style.setElementShown = function(el, isShown) {
  el.style.display = isShown ? "" : "none";
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none";
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  var doc = dh.getDocument();
  if (goog.userAgent.IE && doc.createStyleSheet) {
    styleSheet = doc.createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString);
  } else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if (!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body);
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet);
  }
  return styleSheet;
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || (styleSheet);
  goog.dom.removeNode(node);
};
goog.style.setStyles = function(element, stylesString) {
  if (goog.userAgent.IE && goog.isDef(element.cssText)) {
    element.cssText = stylesString;
  } else {
    element.innerHTML = stylesString;
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word";
  } else {
    if (goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap";
    } else {
      style.whiteSpace = "pre-wrap";
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if (goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("8")) {
    style.zoom = "1";
    style.display = "inline";
  } else {
    if (goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersionOrHigher("1.9a") ? "inline-block" : "-moz-inline-box";
    } else {
      style.display = "inline-block";
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return "rtl" == goog.style.getStyle_(el, "direction");
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if (goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none";
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on";
    }
  }
  return false;
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if (name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if (descendants) {
      for (var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value;
      }
    }
  } else {
    if (goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if (descendants) {
        for (var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value);
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight);
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom;
    } else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "border-box");
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if (ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height);
  } else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom);
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if (goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersionOrHigher("8"))) {
    var style = element.style;
    if (isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height;
    } else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom;
    }
  } else {
    goog.style.setBoxSizingSize_(element, size, "content-box");
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if (goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing;
  } else {
    if (goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing;
    } else {
      style.boxSizing = boxSizing;
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px";
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if (/^\d+px?$/.test(value)) {
    return parseInt(value, 10);
  } else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue;
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0;
};
goog.style.getBox_ = function(element, stylePrefix) {
  if (goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, stylePrefix + "Left"));
    var right = (goog.style.getComputedStyle(element, stylePrefix + "Right"));
    var top = (goog.style.getComputedStyle(element, stylePrefix + "Top"));
    var bottom = (goog.style.getComputedStyle(element, stylePrefix + "Bottom"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding");
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin");
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if (goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0;
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if (width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width];
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft");
};
goog.style.getBorderBox = function(element) {
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left);
  } else {
    var left = (goog.style.getComputedStyle(element, "borderLeftWidth"));
    var right = (goog.style.getComputedStyle(element, "borderRightWidth"));
    var top = (goog.style.getComputedStyle(element, "borderTopWidth"));
    var bottom = (goog.style.getComputedStyle(element, "borderBottomWidth"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left));
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if (doc.body.createTextRange && goog.dom.contains(doc, el)) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName");
    } catch (e) {
      font = "";
    }
  }
  if (!font) {
    font = goog.style.getStyle_(el, "fontFamily");
  }
  var fontsArray = font.split(",");
  if (fontsArray.length > 1) {
    font = fontsArray[0];
  }
  return goog.string.stripQuotes(font, "\"'");
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null;
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if (fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10);
  }
  if (goog.userAgent.IE) {
    if (sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft");
    } else {
      if (el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft");
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize;
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if (keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1];
    }
  });
  return result;
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";");
  });
  return buffer.join("");
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value;
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || "";
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if (opt_className) {
    outerDiv.className = opt_className;
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width;
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var transform = goog.style.getComputedTransform(element);
  if (!transform) {
    return new goog.math.Coordinate(0, 0);
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if (!matches) {
    return new goog.math.Coordinate(0, 0);
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]));
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__17143 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__17144 = cljs.core.next.call(null, coll__$1);
        sb = G__17143;
        coll__$1 = G__17144;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__17145 = sb;
        var G__17146 = coll__$2;
        sb = G__17145;
        coll__$1 = G__17146;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__17147 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__17147;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__17151 = cljs.core._EQ_;
    var expr__17152 = limit;
    if (cljs.core.truth_(pred__17151.call(null, 1, expr__17152))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__17151.call(null, 2, expr__17152))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__17154 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__17155 = limit__$1 - 1;
            var G__17156 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__17154;
            limit__$1 = G__17155;
            parts = G__17156;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__17157 = index - 1;
        index = G__17157;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___17158 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___17158)) {
        var replacement_17159 = temp__4124__auto___17158;
        buffer.append([cljs.core.str(replacement_17159)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__17160 = index + 1;
      index = G__17160;
      continue;
    }
    break;
  }
};
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if (opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if (document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null);
  } else {
    if (typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if (doc) {
        if (opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""));
        }
        return doc;
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if (typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml");
  } else {
    if (typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc;
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if (typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml);
  }
  var text = xml.xml;
  if (text) {
    return text;
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if (typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if (typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath");
    }
    return node.selectSingleNode(path);
  } else {
    if (document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue;
    }
  }
  return null;
};
goog.dom.xml.selectNodes = function(node, path) {
  if (typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if (typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath");
    }
    return node.selectNodes(path);
  } else {
    if (document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for (var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i));
      }
      return results;
    } else {
      return[];
    }
  }
};
goog.dom.xml.setAttributes = function(element, attributes) {
  for (var key in attributes) {
    if (attributes.hasOwnProperty(key)) {
      element.setAttribute(key, attributes[key]);
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if (doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH);
    } catch (e) {
    }
  }
  return doc;
};
goog.provide("domina");
goog.require("cljs.core");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.dom.xml");
goog.require("goog.string");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.events");
goog.require("goog.style");
goog.require("clojure.string");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper_16686 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cselect multiple\x3d'multiple'\x3e", "\x3c/select\x3e"], null);
var table_section_wrapper_16687 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3ctable\x3e", "\x3c/table\x3e"], null);
var cell_wrapper_16688 = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, "\x3ctable\x3e\x3ctbody\x3e\x3ctr\x3e", "\x3c/tr\x3e\x3c/tbody\x3e\x3c/table\x3e"], null);
domina.wrap_map = cljs.core.PersistentHashMap.fromArrays(["td", "optgroup", "tfoot", "tr", "area", new cljs.core.Keyword(null, "default", "default", -1987822328), "option", "legend", "thead", "col", "caption", "th", "colgroup", "tbody"], [cell_wrapper_16688, opt_wrapper_16686, table_section_wrapper_16687, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, "\x3ctable\x3e\x3ctbody\x3e", "\x3c/tbody\x3e\x3c/table\x3e"], null), new cljs.core.PersistentVector(null, 3, 
5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cmap\x3e", "\x3c/map\x3e"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, "", ""], null), opt_wrapper_16686, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, "\x3cfieldset\x3e", "\x3c/fieldset\x3e"], null), table_section_wrapper_16687, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, "\x3ctable\x3e\x3ctbody\x3e\x3c/tbody\x3e\x3ccolgroup\x3e", 
"\x3c/colgroup\x3e\x3c/table\x3e"], null), table_section_wrapper_16687, cell_wrapper_16688, table_section_wrapper_16687, table_section_wrapper_16687]);
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html, tag_name, start_wrap) {
  var no_tbody_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody = cljs.core._EQ_.call(null, tag_name, "table") && no_tbody_QMARK_ ? function() {
    var and__8771__auto__ = div.firstChild;
    if (cljs.core.truth_(and__8771__auto__)) {
      return div.firstChild.childNodes;
    } else {
      return and__8771__auto__;
    }
  }() : cljs.core._EQ_.call(null, start_wrap, "\x3ctable\x3e") && no_tbody_QMARK_ ? div.childNodes : cljs.core.PersistentVector.EMPTY;
  var seq__16693 = cljs.core.seq.call(null, tbody);
  var chunk__16694 = null;
  var count__16695 = 0;
  var i__16696 = 0;
  while (true) {
    if (i__16696 < count__16695) {
      var child = cljs.core._nth.call(null, chunk__16694, i__16696);
      if (cljs.core._EQ_.call(null, child.nodeName, "tbody") && cljs.core._EQ_.call(null, child.childNodes.length, 0)) {
        child.parentNode.removeChild(child);
      } else {
      }
      var G__16697 = seq__16693;
      var G__16698 = chunk__16694;
      var G__16699 = count__16695;
      var G__16700 = i__16696 + 1;
      seq__16693 = G__16697;
      chunk__16694 = G__16698;
      count__16695 = G__16699;
      i__16696 = G__16700;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__16693);
      if (temp__4126__auto__) {
        var seq__16693__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__16693__$1)) {
          var c__9570__auto__ = cljs.core.chunk_first.call(null, seq__16693__$1);
          var G__16701 = cljs.core.chunk_rest.call(null, seq__16693__$1);
          var G__16702 = c__9570__auto__;
          var G__16703 = cljs.core.count.call(null, c__9570__auto__);
          var G__16704 = 0;
          seq__16693 = G__16701;
          chunk__16694 = G__16702;
          count__16695 = G__16703;
          i__16696 = G__16704;
          continue;
        } else {
          var child = cljs.core.first.call(null, seq__16693__$1);
          if (cljs.core._EQ_.call(null, child.nodeName, "tbody") && cljs.core._EQ_.call(null, child.childNodes.length, 0)) {
            child.parentNode.removeChild(child);
          } else {
          }
          var G__16705 = cljs.core.next.call(null, seq__16693__$1);
          var G__16706 = null;
          var G__16707 = 0;
          var G__16708 = 0;
          seq__16693 = G__16705;
          chunk__16694 = G__16706;
          count__16695 = G__16707;
          i__16696 = G__16708;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild);
};
domina.html_to_dom = function html_to_dom(html) {
  var html__$1 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
  var tag_name = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__$1)))].join("").toLowerCase();
  var vec__16710 = cljs.core.get.call(null, domina.wrap_map, tag_name, (new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(domina.wrap_map));
  var depth = cljs.core.nth.call(null, vec__16710, 0, null);
  var start_wrap = cljs.core.nth.call(null, vec__16710, 1, null);
  var end_wrap = cljs.core.nth.call(null, vec__16710, 2, null);
  var div = function() {
    var wrapper = function() {
      var div = document.createElement("div");
      div.innerHTML = [cljs.core.str(start_wrap), cljs.core.str(html__$1), cljs.core.str(end_wrap)].join("");
      return div;
    }();
    var level = depth;
    while (true) {
      if (level > 0) {
        var G__16711 = wrapper.lastChild;
        var G__16712 = level - 1;
        wrapper = G__16711;
        level = G__16712;
        continue;
      } else {
        return wrapper;
      }
      break;
    }
  }();
  if (cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div, html__$1, tag_name, start_wrap);
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__8771__auto__ = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if (and__8771__auto__) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__$1);
    } else {
      return and__8771__auto__;
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div, html__$1);
  } else {
  }
  return div.childNodes;
};
domina.string_to_dom = function string_to_dom(s) {
  if (cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s);
  } else {
    return document.createTextNode(s);
  }
};
domina.DomContent = function() {
  var obj16714 = {};
  return obj16714;
}();
domina.nodes = function nodes(content) {
  if (function() {
    var and__8771__auto__ = content;
    if (and__8771__auto__) {
      return content.domina$DomContent$nodes$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content);
  } else {
    var x__9427__auto__ = content == null ? null : content;
    return function() {
      var or__8783__auto__ = domina.nodes[goog.typeOf(x__9427__auto__)];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = domina.nodes["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content);
  }
};
domina.single_node = function single_node(nodeseq) {
  if (function() {
    var and__8771__auto__ = nodeseq;
    if (and__8771__auto__) {
      return nodeseq.domina$DomContent$single_node$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq);
  } else {
    var x__9427__auto__ = nodeseq == null ? null : nodeseq;
    return function() {
      var or__8783__auto__ = domina.single_node[goog.typeOf(x__9427__auto__)];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = domina.single_node["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq);
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if (cljs.core.truth_(function() {
      var and__8771__auto__ = domina._STAR_debug_STAR_;
      if (cljs.core.truth_(and__8771__auto__)) {
        return!cljs.core._EQ_.call(null, window.console, undefined);
      } else {
        return and__8771__auto__;
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg));
    } else {
      return null;
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if (arguments.length > 0) {
      var G__16715__i = 0, G__16715__a = new Array(arguments.length - 0);
      while (G__16715__i < G__16715__a.length) {
        G__16715__a[G__16715__i] = arguments[G__16715__i + 0];
        ++G__16715__i;
      }
      mesg = new cljs.core.IndexedSeq(G__16715__a, 0);
    }
    return log_debug__delegate.call(this, mesg);
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__16716) {
    var mesg = cljs.core.seq(arglist__16716);
    return log_debug__delegate(mesg);
  };
  log_debug.cljs$core$IFn$_invoke$arity$variadic = log_debug__delegate;
  return log_debug;
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if (cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg));
    } else {
      return null;
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if (arguments.length > 0) {
      var G__16717__i = 0, G__16717__a = new Array(arguments.length - 0);
      while (G__16717__i < G__16717__a.length) {
        G__16717__a[G__16717__i] = arguments[G__16717__i + 0];
        ++G__16717__i;
      }
      mesg = new cljs.core.IndexedSeq(G__16717__a, 0);
    }
    return log__delegate.call(this, mesg);
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__16718) {
    var mesg = cljs.core.seq(arglist__16718);
    return log__delegate(mesg);
  };
  log.cljs$core$IFn$_invoke$arity$variadic = log__delegate;
  return log;
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id));
};
domina.by_class = function by_class(class_name) {
  return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, class_name)));
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)));
};
domina.common_ancestor = function() {
  var common_ancestor__delegate = function(contents) {
    return cljs.core.apply.call(null, goog.dom.findCommonAncestor, cljs.core.map.call(null, domina.single_node, contents));
  };
  var common_ancestor = function(var_args) {
    var contents = null;
    if (arguments.length > 0) {
      var G__16719__i = 0, G__16719__a = new Array(arguments.length - 0);
      while (G__16719__i < G__16719__a.length) {
        G__16719__a[G__16719__i] = arguments[G__16719__i + 0];
        ++G__16719__i;
      }
      contents = new cljs.core.IndexedSeq(G__16719__a, 0);
    }
    return common_ancestor__delegate.call(this, contents);
  };
  common_ancestor.cljs$lang$maxFixedArity = 0;
  common_ancestor.cljs$lang$applyTo = function(arglist__16720) {
    var contents = cljs.core.seq(arglist__16720);
    return common_ancestor__delegate(contents);
  };
  common_ancestor.cljs$core$IFn$_invoke$arity$variadic = common_ancestor__delegate;
  return common_ancestor;
}();
domina.ancestor_QMARK_ = function ancestor_QMARK_(ancestor_content, descendant_content) {
  return cljs.core._EQ_.call(null, domina.common_ancestor.call(null, ancestor_content, descendant_content), domina.single_node.call(null, ancestor_content));
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__16721_SHARP_) {
    return p1__16721_SHARP_.cloneNode(true);
  }, domina.nodes.call(null, content));
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content;
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__16722_SHARP_, p2__16723_SHARP_) {
    return goog.dom.insertChildAt(p1__16722_SHARP_, p2__16723_SHARP_, idx);
  }, parent_content, child_content);
  return parent_content;
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content;
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__16725_SHARP_, p2__16724_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__16724_SHARP_, p1__16725_SHARP_);
  }, content, new_content);
  return content;
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__16727_SHARP_, p2__16726_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__16726_SHARP_, p1__16727_SHARP_);
  }, content, new_content);
  return content;
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__16729_SHARP_, p2__16728_SHARP_) {
    return goog.dom.replaceNode(p2__16728_SHARP_, p1__16729_SHARP_);
  }, old_content, new_content);
  return old_content;
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)));
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)));
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content;
};
domina.style = function style(content, name) {
  var s = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if (cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s))) {
    return null;
  } else {
    return s;
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name));
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var seq__16734_16738 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__16735_16739 = null;
    var count__16736_16740 = 0;
    var i__16737_16741 = 0;
    while (true) {
      if (i__16737_16741 < count__16736_16740) {
        var n_16742 = cljs.core._nth.call(null, chunk__16735_16739, i__16737_16741);
        goog.style.setStyle(n_16742, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__16743 = seq__16734_16738;
        var G__16744 = chunk__16735_16739;
        var G__16745 = count__16736_16740;
        var G__16746 = i__16737_16741 + 1;
        seq__16734_16738 = G__16743;
        chunk__16735_16739 = G__16744;
        count__16736_16740 = G__16745;
        i__16737_16741 = G__16746;
        continue;
      } else {
        var temp__4126__auto___16747 = cljs.core.seq.call(null, seq__16734_16738);
        if (temp__4126__auto___16747) {
          var seq__16734_16748__$1 = temp__4126__auto___16747;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__16734_16748__$1)) {
            var c__9570__auto___16749 = cljs.core.chunk_first.call(null, seq__16734_16748__$1);
            var G__16750 = cljs.core.chunk_rest.call(null, seq__16734_16748__$1);
            var G__16751 = c__9570__auto___16749;
            var G__16752 = cljs.core.count.call(null, c__9570__auto___16749);
            var G__16753 = 0;
            seq__16734_16738 = G__16750;
            chunk__16735_16739 = G__16751;
            count__16736_16740 = G__16752;
            i__16737_16741 = G__16753;
            continue;
          } else {
            var n_16754 = cljs.core.first.call(null, seq__16734_16748__$1);
            goog.style.setStyle(n_16754, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__16755 = cljs.core.next.call(null, seq__16734_16748__$1);
            var G__16756 = null;
            var G__16757 = 0;
            var G__16758 = 0;
            seq__16734_16738 = G__16755;
            chunk__16735_16739 = G__16756;
            count__16736_16740 = G__16757;
            i__16737_16741 = G__16758;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return content;
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if (arguments.length > 2) {
      var G__16759__i = 0, G__16759__a = new Array(arguments.length - 2);
      while (G__16759__i < G__16759__a.length) {
        G__16759__a[G__16759__i] = arguments[G__16759__i + 2];
        ++G__16759__i;
      }
      value = new cljs.core.IndexedSeq(G__16759__a, 0);
    }
    return set_style_BANG___delegate.call(this, content, name, value);
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__16760) {
    var content = cljs.core.first(arglist__16760);
    arglist__16760 = cljs.core.next(arglist__16760);
    var name = cljs.core.first(arglist__16760);
    var value = cljs.core.rest(arglist__16760);
    return set_style_BANG___delegate(content, name, value);
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_;
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var seq__16765_16769 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__16766_16770 = null;
    var count__16767_16771 = 0;
    var i__16768_16772 = 0;
    while (true) {
      if (i__16768_16772 < count__16767_16771) {
        var n_16773 = cljs.core._nth.call(null, chunk__16766_16770, i__16768_16772);
        n_16773.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var G__16774 = seq__16765_16769;
        var G__16775 = chunk__16766_16770;
        var G__16776 = count__16767_16771;
        var G__16777 = i__16768_16772 + 1;
        seq__16765_16769 = G__16774;
        chunk__16766_16770 = G__16775;
        count__16767_16771 = G__16776;
        i__16768_16772 = G__16777;
        continue;
      } else {
        var temp__4126__auto___16778 = cljs.core.seq.call(null, seq__16765_16769);
        if (temp__4126__auto___16778) {
          var seq__16765_16779__$1 = temp__4126__auto___16778;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__16765_16779__$1)) {
            var c__9570__auto___16780 = cljs.core.chunk_first.call(null, seq__16765_16779__$1);
            var G__16781 = cljs.core.chunk_rest.call(null, seq__16765_16779__$1);
            var G__16782 = c__9570__auto___16780;
            var G__16783 = cljs.core.count.call(null, c__9570__auto___16780);
            var G__16784 = 0;
            seq__16765_16769 = G__16781;
            chunk__16766_16770 = G__16782;
            count__16767_16771 = G__16783;
            i__16768_16772 = G__16784;
            continue;
          } else {
            var n_16785 = cljs.core.first.call(null, seq__16765_16779__$1);
            n_16785.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
            var G__16786 = cljs.core.next.call(null, seq__16765_16779__$1);
            var G__16787 = null;
            var G__16788 = 0;
            var G__16789 = 0;
            seq__16765_16769 = G__16786;
            chunk__16766_16770 = G__16787;
            count__16767_16771 = G__16788;
            i__16768_16772 = G__16789;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return content;
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if (arguments.length > 2) {
      var G__16790__i = 0, G__16790__a = new Array(arguments.length - 2);
      while (G__16790__i < G__16790__a.length) {
        G__16790__a[G__16790__i] = arguments[G__16790__i + 2];
        ++G__16790__i;
      }
      value = new cljs.core.IndexedSeq(G__16790__a, 0);
    }
    return set_attr_BANG___delegate.call(this, content, name, value);
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__16791) {
    var content = cljs.core.first(arglist__16791);
    arglist__16791 = cljs.core.next(arglist__16791);
    var name = cljs.core.first(arglist__16791);
    var value = cljs.core.rest(arglist__16791);
    return set_attr_BANG___delegate(content, name, value);
  };
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_;
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var seq__16796_16800 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__16797_16801 = null;
  var count__16798_16802 = 0;
  var i__16799_16803 = 0;
  while (true) {
    if (i__16799_16803 < count__16798_16802) {
      var n_16804 = cljs.core._nth.call(null, chunk__16797_16801, i__16799_16803);
      n_16804.removeAttribute(cljs.core.name.call(null, name));
      var G__16805 = seq__16796_16800;
      var G__16806 = chunk__16797_16801;
      var G__16807 = count__16798_16802;
      var G__16808 = i__16799_16803 + 1;
      seq__16796_16800 = G__16805;
      chunk__16797_16801 = G__16806;
      count__16798_16802 = G__16807;
      i__16799_16803 = G__16808;
      continue;
    } else {
      var temp__4126__auto___16809 = cljs.core.seq.call(null, seq__16796_16800);
      if (temp__4126__auto___16809) {
        var seq__16796_16810__$1 = temp__4126__auto___16809;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__16796_16810__$1)) {
          var c__9570__auto___16811 = cljs.core.chunk_first.call(null, seq__16796_16810__$1);
          var G__16812 = cljs.core.chunk_rest.call(null, seq__16796_16810__$1);
          var G__16813 = c__9570__auto___16811;
          var G__16814 = cljs.core.count.call(null, c__9570__auto___16811);
          var G__16815 = 0;
          seq__16796_16800 = G__16812;
          chunk__16797_16801 = G__16813;
          count__16798_16802 = G__16814;
          i__16799_16803 = G__16815;
          continue;
        } else {
          var n_16816 = cljs.core.first.call(null, seq__16796_16810__$1);
          n_16816.removeAttribute(cljs.core.name.call(null, name));
          var G__16817 = cljs.core.next.call(null, seq__16796_16810__$1);
          var G__16818 = null;
          var G__16819 = 0;
          var G__16820 = 0;
          seq__16796_16800 = G__16817;
          chunk__16797_16801 = G__16818;
          count__16798_16802 = G__16819;
          i__16799_16803 = G__16820;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__16822 = pair.split(/\s*:\s*/);
    var k = cljs.core.nth.call(null, vec__16822, 0, null);
    var v = cljs.core.nth.call(null, vec__16822, 1, null);
    if (cljs.core.truth_(function() {
      var and__8771__auto__ = k;
      if (cljs.core.truth_(and__8771__auto__)) {
        return v;
      } else {
        return and__8771__auto__;
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k.toLowerCase()), v);
    } else {
      return acc;
    }
  }, cljs.core.PersistentArrayMap.EMPTY, style.split(/\s*;\s*/));
};
domina.styles = function styles(content) {
  var style = domina.attr.call(null, content, "style");
  if (typeof style === "string") {
    return domina.parse_style_attributes.call(null, style);
  } else {
    if (style == null) {
      return cljs.core.PersistentArrayMap.EMPTY;
    } else {
      if (cljs.core.truth_(style.cssText)) {
        return domina.parse_style_attributes.call(null, style.cssText);
      } else {
        return cljs.core.PersistentArrayMap.EMPTY;
      }
    }
  }
};
domina.attrs = function attrs(content) {
  var node = domina.single_node.call(null, content);
  var attrs__$1 = node.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(node, attrs__$1) {
    return function(p1__16823_SHARP_) {
      var attr = attrs__$1.item(p1__16823_SHARP_);
      var value = attr.nodeValue;
      if (cljs.core.not_EQ_.call(null, null, value) && cljs.core.not_EQ_.call(null, "", value)) {
        return new cljs.core.PersistentArrayMap.fromArray([cljs.core.keyword.call(null, attr.nodeName.toLowerCase()), attr.nodeValue], true, false);
      } else {
        return null;
      }
    };
  }(node, attrs__$1), cljs.core.range.call(null, attrs__$1.length))));
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var seq__16830_16836 = cljs.core.seq.call(null, styles);
  var chunk__16831_16837 = null;
  var count__16832_16838 = 0;
  var i__16833_16839 = 0;
  while (true) {
    if (i__16833_16839 < count__16832_16838) {
      var vec__16834_16840 = cljs.core._nth.call(null, chunk__16831_16837, i__16833_16839);
      var name_16841 = cljs.core.nth.call(null, vec__16834_16840, 0, null);
      var value_16842 = cljs.core.nth.call(null, vec__16834_16840, 1, null);
      domina.set_style_BANG_.call(null, content, name_16841, value_16842);
      var G__16843 = seq__16830_16836;
      var G__16844 = chunk__16831_16837;
      var G__16845 = count__16832_16838;
      var G__16846 = i__16833_16839 + 1;
      seq__16830_16836 = G__16843;
      chunk__16831_16837 = G__16844;
      count__16832_16838 = G__16845;
      i__16833_16839 = G__16846;
      continue;
    } else {
      var temp__4126__auto___16847 = cljs.core.seq.call(null, seq__16830_16836);
      if (temp__4126__auto___16847) {
        var seq__16830_16848__$1 = temp__4126__auto___16847;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__16830_16848__$1)) {
          var c__9570__auto___16849 = cljs.core.chunk_first.call(null, seq__16830_16848__$1);
          var G__16850 = cljs.core.chunk_rest.call(null, seq__16830_16848__$1);
          var G__16851 = c__9570__auto___16849;
          var G__16852 = cljs.core.count.call(null, c__9570__auto___16849);
          var G__16853 = 0;
          seq__16830_16836 = G__16850;
          chunk__16831_16837 = G__16851;
          count__16832_16838 = G__16852;
          i__16833_16839 = G__16853;
          continue;
        } else {
          var vec__16835_16854 = cljs.core.first.call(null, seq__16830_16848__$1);
          var name_16855 = cljs.core.nth.call(null, vec__16835_16854, 0, null);
          var value_16856 = cljs.core.nth.call(null, vec__16835_16854, 1, null);
          domina.set_style_BANG_.call(null, content, name_16855, value_16856);
          var G__16857 = cljs.core.next.call(null, seq__16830_16848__$1);
          var G__16858 = null;
          var G__16859 = 0;
          var G__16860 = 0;
          seq__16830_16836 = G__16857;
          chunk__16831_16837 = G__16858;
          count__16832_16838 = G__16859;
          i__16833_16839 = G__16860;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var seq__16867_16873 = cljs.core.seq.call(null, attrs);
  var chunk__16868_16874 = null;
  var count__16869_16875 = 0;
  var i__16870_16876 = 0;
  while (true) {
    if (i__16870_16876 < count__16869_16875) {
      var vec__16871_16877 = cljs.core._nth.call(null, chunk__16868_16874, i__16870_16876);
      var name_16878 = cljs.core.nth.call(null, vec__16871_16877, 0, null);
      var value_16879 = cljs.core.nth.call(null, vec__16871_16877, 1, null);
      domina.set_attr_BANG_.call(null, content, name_16878, value_16879);
      var G__16880 = seq__16867_16873;
      var G__16881 = chunk__16868_16874;
      var G__16882 = count__16869_16875;
      var G__16883 = i__16870_16876 + 1;
      seq__16867_16873 = G__16880;
      chunk__16868_16874 = G__16881;
      count__16869_16875 = G__16882;
      i__16870_16876 = G__16883;
      continue;
    } else {
      var temp__4126__auto___16884 = cljs.core.seq.call(null, seq__16867_16873);
      if (temp__4126__auto___16884) {
        var seq__16867_16885__$1 = temp__4126__auto___16884;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__16867_16885__$1)) {
          var c__9570__auto___16886 = cljs.core.chunk_first.call(null, seq__16867_16885__$1);
          var G__16887 = cljs.core.chunk_rest.call(null, seq__16867_16885__$1);
          var G__16888 = c__9570__auto___16886;
          var G__16889 = cljs.core.count.call(null, c__9570__auto___16886);
          var G__16890 = 0;
          seq__16867_16873 = G__16887;
          chunk__16868_16874 = G__16888;
          count__16869_16875 = G__16889;
          i__16870_16876 = G__16890;
          continue;
        } else {
          var vec__16872_16891 = cljs.core.first.call(null, seq__16867_16885__$1);
          var name_16892 = cljs.core.nth.call(null, vec__16872_16891, 0, null);
          var value_16893 = cljs.core.nth.call(null, vec__16872_16891, 1, null);
          domina.set_attr_BANG_.call(null, content, name_16892, value_16893);
          var G__16894 = cljs.core.next.call(null, seq__16867_16885__$1);
          var G__16895 = null;
          var G__16896 = 0;
          var G__16897 = 0;
          seq__16867_16873 = G__16894;
          chunk__16868_16874 = G__16895;
          count__16869_16875 = G__16896;
          i__16870_16876 = G__16897;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$);
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var seq__16902_16906 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__16903_16907 = null;
  var count__16904_16908 = 0;
  var i__16905_16909 = 0;
  while (true) {
    if (i__16905_16909 < count__16904_16908) {
      var node_16910 = cljs.core._nth.call(null, chunk__16903_16907, i__16905_16909);
      goog.dom.classes.add(node_16910, class$);
      var G__16911 = seq__16902_16906;
      var G__16912 = chunk__16903_16907;
      var G__16913 = count__16904_16908;
      var G__16914 = i__16905_16909 + 1;
      seq__16902_16906 = G__16911;
      chunk__16903_16907 = G__16912;
      count__16904_16908 = G__16913;
      i__16905_16909 = G__16914;
      continue;
    } else {
      var temp__4126__auto___16915 = cljs.core.seq.call(null, seq__16902_16906);
      if (temp__4126__auto___16915) {
        var seq__16902_16916__$1 = temp__4126__auto___16915;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__16902_16916__$1)) {
          var c__9570__auto___16917 = cljs.core.chunk_first.call(null, seq__16902_16916__$1);
          var G__16918 = cljs.core.chunk_rest.call(null, seq__16902_16916__$1);
          var G__16919 = c__9570__auto___16917;
          var G__16920 = cljs.core.count.call(null, c__9570__auto___16917);
          var G__16921 = 0;
          seq__16902_16906 = G__16918;
          chunk__16903_16907 = G__16919;
          count__16904_16908 = G__16920;
          i__16905_16909 = G__16921;
          continue;
        } else {
          var node_16922 = cljs.core.first.call(null, seq__16902_16916__$1);
          goog.dom.classes.add(node_16922, class$);
          var G__16923 = cljs.core.next.call(null, seq__16902_16916__$1);
          var G__16924 = null;
          var G__16925 = 0;
          var G__16926 = 0;
          seq__16902_16906 = G__16923;
          chunk__16903_16907 = G__16924;
          count__16904_16908 = G__16925;
          i__16905_16909 = G__16926;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var seq__16931_16935 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__16932_16936 = null;
  var count__16933_16937 = 0;
  var i__16934_16938 = 0;
  while (true) {
    if (i__16934_16938 < count__16933_16937) {
      var node_16939 = cljs.core._nth.call(null, chunk__16932_16936, i__16934_16938);
      goog.dom.classes.remove(node_16939, class$);
      var G__16940 = seq__16931_16935;
      var G__16941 = chunk__16932_16936;
      var G__16942 = count__16933_16937;
      var G__16943 = i__16934_16938 + 1;
      seq__16931_16935 = G__16940;
      chunk__16932_16936 = G__16941;
      count__16933_16937 = G__16942;
      i__16934_16938 = G__16943;
      continue;
    } else {
      var temp__4126__auto___16944 = cljs.core.seq.call(null, seq__16931_16935);
      if (temp__4126__auto___16944) {
        var seq__16931_16945__$1 = temp__4126__auto___16944;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__16931_16945__$1)) {
          var c__9570__auto___16946 = cljs.core.chunk_first.call(null, seq__16931_16945__$1);
          var G__16947 = cljs.core.chunk_rest.call(null, seq__16931_16945__$1);
          var G__16948 = c__9570__auto___16946;
          var G__16949 = cljs.core.count.call(null, c__9570__auto___16946);
          var G__16950 = 0;
          seq__16931_16935 = G__16947;
          chunk__16932_16936 = G__16948;
          count__16933_16937 = G__16949;
          i__16934_16938 = G__16950;
          continue;
        } else {
          var node_16951 = cljs.core.first.call(null, seq__16931_16945__$1);
          goog.dom.classes.remove(node_16951, class$);
          var G__16952 = cljs.core.next.call(null, seq__16931_16945__$1);
          var G__16953 = null;
          var G__16954 = 0;
          var G__16955 = 0;
          seq__16931_16935 = G__16952;
          chunk__16932_16936 = G__16953;
          count__16933_16937 = G__16954;
          i__16934_16938 = G__16955;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.toggle_class_BANG_ = function toggle_class_BANG_(content, class$) {
  var seq__16960_16964 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__16961_16965 = null;
  var count__16962_16966 = 0;
  var i__16963_16967 = 0;
  while (true) {
    if (i__16963_16967 < count__16962_16966) {
      var node_16968 = cljs.core._nth.call(null, chunk__16961_16965, i__16963_16967);
      goog.dom.classes.toggle(node_16968, class$);
      var G__16969 = seq__16960_16964;
      var G__16970 = chunk__16961_16965;
      var G__16971 = count__16962_16966;
      var G__16972 = i__16963_16967 + 1;
      seq__16960_16964 = G__16969;
      chunk__16961_16965 = G__16970;
      count__16962_16966 = G__16971;
      i__16963_16967 = G__16972;
      continue;
    } else {
      var temp__4126__auto___16973 = cljs.core.seq.call(null, seq__16960_16964);
      if (temp__4126__auto___16973) {
        var seq__16960_16974__$1 = temp__4126__auto___16973;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__16960_16974__$1)) {
          var c__9570__auto___16975 = cljs.core.chunk_first.call(null, seq__16960_16974__$1);
          var G__16976 = cljs.core.chunk_rest.call(null, seq__16960_16974__$1);
          var G__16977 = c__9570__auto___16975;
          var G__16978 = cljs.core.count.call(null, c__9570__auto___16975);
          var G__16979 = 0;
          seq__16960_16964 = G__16976;
          chunk__16961_16965 = G__16977;
          count__16962_16966 = G__16978;
          i__16963_16967 = G__16979;
          continue;
        } else {
          var node_16980 = cljs.core.first.call(null, seq__16960_16974__$1);
          goog.dom.classes.toggle(node_16980, class$);
          var G__16981 = cljs.core.next.call(null, seq__16960_16974__$1);
          var G__16982 = null;
          var G__16983 = 0;
          var G__16984 = 0;
          seq__16960_16964 = G__16981;
          chunk__16961_16965 = G__16982;
          count__16962_16966 = G__16983;
          i__16963_16967 = G__16984;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)));
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes_16993__$1 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var seq__16989_16994 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__16990_16995 = null;
  var count__16991_16996 = 0;
  var i__16992_16997 = 0;
  while (true) {
    if (i__16992_16997 < count__16991_16996) {
      var node_16998 = cljs.core._nth.call(null, chunk__16990_16995, i__16992_16997);
      goog.dom.classes.set(node_16998, classes_16993__$1);
      var G__16999 = seq__16989_16994;
      var G__17000 = chunk__16990_16995;
      var G__17001 = count__16991_16996;
      var G__17002 = i__16992_16997 + 1;
      seq__16989_16994 = G__16999;
      chunk__16990_16995 = G__17000;
      count__16991_16996 = G__17001;
      i__16992_16997 = G__17002;
      continue;
    } else {
      var temp__4126__auto___17003 = cljs.core.seq.call(null, seq__16989_16994);
      if (temp__4126__auto___17003) {
        var seq__16989_17004__$1 = temp__4126__auto___17003;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__16989_17004__$1)) {
          var c__9570__auto___17005 = cljs.core.chunk_first.call(null, seq__16989_17004__$1);
          var G__17006 = cljs.core.chunk_rest.call(null, seq__16989_17004__$1);
          var G__17007 = c__9570__auto___17005;
          var G__17008 = cljs.core.count.call(null, c__9570__auto___17005);
          var G__17009 = 0;
          seq__16989_16994 = G__17006;
          chunk__16990_16995 = G__17007;
          count__16991_16996 = G__17008;
          i__16992_16997 = G__17009;
          continue;
        } else {
          var node_17010 = cljs.core.first.call(null, seq__16989_17004__$1);
          goog.dom.classes.set(node_17010, classes_16993__$1);
          var G__17011 = cljs.core.next.call(null, seq__16989_17004__$1);
          var G__17012 = null;
          var G__17013 = 0;
          var G__17014 = 0;
          seq__16989_16994 = G__17011;
          chunk__16990_16995 = G__17012;
          count__16991_16996 = G__17013;
          i__16992_16997 = G__17014;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)));
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var seq__17019_17023 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__17020_17024 = null;
  var count__17021_17025 = 0;
  var i__17022_17026 = 0;
  while (true) {
    if (i__17022_17026 < count__17021_17025) {
      var node_17027 = cljs.core._nth.call(null, chunk__17020_17024, i__17022_17026);
      goog.dom.setTextContent(node_17027, value);
      var G__17028 = seq__17019_17023;
      var G__17029 = chunk__17020_17024;
      var G__17030 = count__17021_17025;
      var G__17031 = i__17022_17026 + 1;
      seq__17019_17023 = G__17028;
      chunk__17020_17024 = G__17029;
      count__17021_17025 = G__17030;
      i__17022_17026 = G__17031;
      continue;
    } else {
      var temp__4126__auto___17032 = cljs.core.seq.call(null, seq__17019_17023);
      if (temp__4126__auto___17032) {
        var seq__17019_17033__$1 = temp__4126__auto___17032;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17019_17033__$1)) {
          var c__9570__auto___17034 = cljs.core.chunk_first.call(null, seq__17019_17033__$1);
          var G__17035 = cljs.core.chunk_rest.call(null, seq__17019_17033__$1);
          var G__17036 = c__9570__auto___17034;
          var G__17037 = cljs.core.count.call(null, c__9570__auto___17034);
          var G__17038 = 0;
          seq__17019_17023 = G__17035;
          chunk__17020_17024 = G__17036;
          count__17021_17025 = G__17037;
          i__17022_17026 = G__17038;
          continue;
        } else {
          var node_17039 = cljs.core.first.call(null, seq__17019_17033__$1);
          goog.dom.setTextContent(node_17039, value);
          var G__17040 = cljs.core.next.call(null, seq__17019_17033__$1);
          var G__17041 = null;
          var G__17042 = 0;
          var G__17043 = 0;
          seq__17019_17023 = G__17040;
          chunk__17020_17024 = G__17041;
          count__17021_17025 = G__17042;
          i__17022_17026 = G__17043;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content));
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var seq__17048_17052 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  var chunk__17049_17053 = null;
  var count__17050_17054 = 0;
  var i__17051_17055 = 0;
  while (true) {
    if (i__17051_17055 < count__17050_17054) {
      var node_17056 = cljs.core._nth.call(null, chunk__17049_17053, i__17051_17055);
      goog.dom.forms.setValue(node_17056, value);
      var G__17057 = seq__17048_17052;
      var G__17058 = chunk__17049_17053;
      var G__17059 = count__17050_17054;
      var G__17060 = i__17051_17055 + 1;
      seq__17048_17052 = G__17057;
      chunk__17049_17053 = G__17058;
      count__17050_17054 = G__17059;
      i__17051_17055 = G__17060;
      continue;
    } else {
      var temp__4126__auto___17061 = cljs.core.seq.call(null, seq__17048_17052);
      if (temp__4126__auto___17061) {
        var seq__17048_17062__$1 = temp__4126__auto___17061;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__17048_17062__$1)) {
          var c__9570__auto___17063 = cljs.core.chunk_first.call(null, seq__17048_17062__$1);
          var G__17064 = cljs.core.chunk_rest.call(null, seq__17048_17062__$1);
          var G__17065 = c__9570__auto___17063;
          var G__17066 = cljs.core.count.call(null, c__9570__auto___17063);
          var G__17067 = 0;
          seq__17048_17052 = G__17064;
          chunk__17049_17053 = G__17065;
          count__17050_17054 = G__17066;
          i__17051_17055 = G__17067;
          continue;
        } else {
          var node_17068 = cljs.core.first.call(null, seq__17048_17062__$1);
          goog.dom.forms.setValue(node_17068, value);
          var G__17069 = cljs.core.next.call(null, seq__17048_17062__$1);
          var G__17070 = null;
          var G__17071 = 0;
          var G__17072 = 0;
          seq__17048_17052 = G__17069;
          chunk__17049_17053 = G__17070;
          count__17050_17054 = G__17071;
          i__17051_17055 = G__17072;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return content;
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML;
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content);
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK_ = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK_ = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK_ = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name);
  if (cljs.core.truth_(function() {
    var and__8771__auto__ = allows_inner_html_QMARK_;
    if (and__8771__auto__) {
      var and__8771__auto____$1 = function() {
        var or__8783__auto__ = domina.support.leading_whitespace_QMARK_;
        if (cljs.core.truth_(or__8783__auto__)) {
          return or__8783__auto__;
        } else {
          return cljs.core.not.call(null, leading_whitespace_QMARK_);
        }
      }();
      if (cljs.core.truth_(and__8771__auto____$1)) {
        return!special_tag_QMARK_;
      } else {
        return and__8771__auto____$1;
      }
    } else {
      return and__8771__auto__;
    }
  }())) {
    var value_17083 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "\x3c$1\x3e\x3c/$2\x3e");
    try {
      var seq__17079_17084 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      var chunk__17080_17085 = null;
      var count__17081_17086 = 0;
      var i__17082_17087 = 0;
      while (true) {
        if (i__17082_17087 < count__17081_17086) {
          var node_17088 = cljs.core._nth.call(null, chunk__17080_17085, i__17082_17087);
          node_17088.innerHTML = value_17083;
          var G__17089 = seq__17079_17084;
          var G__17090 = chunk__17080_17085;
          var G__17091 = count__17081_17086;
          var G__17092 = i__17082_17087 + 1;
          seq__17079_17084 = G__17089;
          chunk__17080_17085 = G__17090;
          count__17081_17086 = G__17091;
          i__17082_17087 = G__17092;
          continue;
        } else {
          var temp__4126__auto___17093 = cljs.core.seq.call(null, seq__17079_17084);
          if (temp__4126__auto___17093) {
            var seq__17079_17094__$1 = temp__4126__auto___17093;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__17079_17094__$1)) {
              var c__9570__auto___17095 = cljs.core.chunk_first.call(null, seq__17079_17094__$1);
              var G__17096 = cljs.core.chunk_rest.call(null, seq__17079_17094__$1);
              var G__17097 = c__9570__auto___17095;
              var G__17098 = cljs.core.count.call(null, c__9570__auto___17095);
              var G__17099 = 0;
              seq__17079_17084 = G__17096;
              chunk__17080_17085 = G__17097;
              count__17081_17086 = G__17098;
              i__17082_17087 = G__17099;
              continue;
            } else {
              var node_17100 = cljs.core.first.call(null, seq__17079_17094__$1);
              node_17100.innerHTML = value_17083;
              var G__17101 = cljs.core.next.call(null, seq__17079_17094__$1);
              var G__17102 = null;
              var G__17103 = 0;
              var G__17104 = 0;
              seq__17079_17084 = G__17101;
              chunk__17080_17085 = G__17102;
              count__17081_17086 = G__17103;
              i__17082_17087 = G__17104;
              continue;
            }
          } else {
          }
        }
        break;
      }
    } catch (e17078) {
      if (e17078 instanceof Error) {
        var e_17105 = e17078;
        domina.replace_children_BANG_.call(null, content, value_17083);
      } else {
        throw e17078;
      }
    }
  } else {
    domina.replace_children_BANG_.call(null, content, html_string);
  }
  return content;
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if (typeof inner_content === "string") {
    return domina.set_inner_html_BANG_.call(null, content, inner_content);
  } else {
    return domina.replace_children_BANG_.call(null, content, inner_content);
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false);
  };
  var get_data__3 = function(node, key, bubble) {
    var m = domina.single_node.call(null, node).__domina_data;
    var value = cljs.core.truth_(m) ? cljs.core.get.call(null, m, key) : null;
    if (cljs.core.truth_(function() {
      var and__8771__auto__ = bubble;
      if (cljs.core.truth_(and__8771__auto__)) {
        return value == null;
      } else {
        return and__8771__auto__;
      }
    }())) {
      var temp__4126__auto__ = domina.single_node.call(null, node).parentNode;
      if (cljs.core.truth_(temp__4126__auto__)) {
        var parent = temp__4126__auto__;
        return get_data.call(null, parent, key, true);
      } else {
        return null;
      }
    } else {
      return value;
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_data.cljs$core$IFn$_invoke$arity$2 = get_data__2;
  get_data.cljs$core$IFn$_invoke$arity$3 = get_data__3;
  return get_data;
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m = function() {
    var or__8783__auto__ = domina.single_node.call(null, node).__domina_data;
    if (cljs.core.truth_(or__8783__auto__)) {
      return or__8783__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m, key, value);
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents = domina.nodes.call(null, parent_content);
  var children = domina.nodes.call(null, child_content);
  var first_child = function() {
    var frag = document.createDocumentFragment();
    var seq__17112_17116 = cljs.core.seq.call(null, children);
    var chunk__17113_17117 = null;
    var count__17114_17118 = 0;
    var i__17115_17119 = 0;
    while (true) {
      if (i__17115_17119 < count__17114_17118) {
        var child_17120 = cljs.core._nth.call(null, chunk__17113_17117, i__17115_17119);
        frag.appendChild(child_17120);
        var G__17121 = seq__17112_17116;
        var G__17122 = chunk__17113_17117;
        var G__17123 = count__17114_17118;
        var G__17124 = i__17115_17119 + 1;
        seq__17112_17116 = G__17121;
        chunk__17113_17117 = G__17122;
        count__17114_17118 = G__17123;
        i__17115_17119 = G__17124;
        continue;
      } else {
        var temp__4126__auto___17125 = cljs.core.seq.call(null, seq__17112_17116);
        if (temp__4126__auto___17125) {
          var seq__17112_17126__$1 = temp__4126__auto___17125;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__17112_17126__$1)) {
            var c__9570__auto___17127 = cljs.core.chunk_first.call(null, seq__17112_17126__$1);
            var G__17128 = cljs.core.chunk_rest.call(null, seq__17112_17126__$1);
            var G__17129 = c__9570__auto___17127;
            var G__17130 = cljs.core.count.call(null, c__9570__auto___17127);
            var G__17131 = 0;
            seq__17112_17116 = G__17128;
            chunk__17113_17117 = G__17129;
            count__17114_17118 = G__17130;
            i__17115_17119 = G__17131;
            continue;
          } else {
            var child_17132 = cljs.core.first.call(null, seq__17112_17126__$1);
            frag.appendChild(child_17132);
            var G__17133 = cljs.core.next.call(null, seq__17112_17126__$1);
            var G__17134 = null;
            var G__17135 = 0;
            var G__17136 = 0;
            seq__17112_17116 = G__17133;
            chunk__17113_17117 = G__17134;
            count__17114_17118 = G__17135;
            i__17115_17119 = G__17136;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return frag;
  }();
  var other_children = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents) - 1, function(parents, children, first_child) {
    return function() {
      return first_child.cloneNode(true);
    };
  }(parents, children, first_child)));
  if (cljs.core.seq.call(null, parents)) {
    f.call(null, cljs.core.first.call(null, parents), first_child);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(parents, children, first_child, other_children) {
      return function(p1__17106_SHARP_, p2__17107_SHARP_) {
        return f.call(null, p1__17106_SHARP_, p2__17107_SHARP_);
      };
    }(parents, children, first_child, other_children), cljs.core.rest.call(null, parents), other_children));
  } else {
    return null;
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0);
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if (n < nl.length) {
      return new cljs.core.LazySeq(null, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1));
      }, null, null);
    } else {
      return null;
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item;
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0);
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if (n < nl.length) {
      return new cljs.core.LazySeq(null, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1));
      }, null, null);
    } else {
      return null;
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$core$IFn$_invoke$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref;
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if (cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl);
  } else {
    return domina.lazy_nl_via_array_ref.call(null, nl);
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__8771__auto__ = obj;
  if (cljs.core.truth_(and__8771__auto__)) {
    var and__8771__auto____$1 = cljs.core.not.call(null, obj.nodeName);
    if (and__8771__auto____$1) {
      return obj.length;
    } else {
      return and__8771__auto____$1;
    }
  } else {
    return and__8771__auto__;
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if (list_thing == null) {
    return cljs.core.List.EMPTY;
  } else {
    if (function() {
      var G__17138 = list_thing;
      if (G__17138) {
        var bit__9464__auto__ = G__17138.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__9464__auto__ || G__17138.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__17138.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__17138);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__17138);
      }
    }()) {
      return cljs.core.seq.call(null, list_thing);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing);
      } else {
        return cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [list_thing], null));
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if (content == null) {
    return cljs.core.List.EMPTY;
  } else {
    if (function() {
      var G__17139 = content;
      if (G__17139) {
        var bit__9464__auto__ = G__17139.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__9464__auto__ || G__17139.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__17139.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__17139);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__17139);
      }
    }()) {
      return cljs.core.seq.call(null, content);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content);
      } else {
        return cljs.core.seq.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [content], null));
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if (content == null) {
    return null;
  } else {
    if (function() {
      var G__17140 = content;
      if (G__17140) {
        var bit__9464__auto__ = G__17140.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__9464__auto__ || G__17140.cljs$core$ISeqable$) {
          return true;
        } else {
          if (!G__17140.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__17140);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__17140);
      }
    }()) {
      return cljs.core.first.call(null, content);
    } else {
      if (cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0);
      } else {
        return content;
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)));
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s));
};
if (cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return domina.lazy_nodelist.call(null, nodelist__$1);
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    var nodelist__$1 = this;
    return nodelist__$1.item(n);
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    var nodelist__$1 = this;
    if (nodelist__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, nodelist__$1, n);
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return nodelist__$1.length;
  };
} else {
}
if (cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return domina.lazy_nodelist.call(null, nodelist__$1);
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    var nodelist__$1 = this;
    return nodelist__$1.item(n);
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    var nodelist__$1 = this;
    if (nodelist__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, nodelist__$1, n);
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    var nodelist__$1 = this;
    return nodelist__$1.length;
  };
} else {
}
if (cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    var coll__$1 = this;
    return domina.lazy_nodelist.call(null, coll__$1);
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    var coll__$1 = this;
    return coll__$1.item(n);
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    var coll__$1 = this;
    if (coll__$1.length <= n) {
      return not_found;
    } else {
      return cljs.core.nth.call(null, coll__$1, n);
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    var coll__$1 = this;
    return coll__$1.length;
  };
} else {
}
;goog.provide("domina.xpath");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("domina");
domina.xpath.select_node_STAR_ = function select_node_STAR_(path, node, technique_1, technique_2) {
  var doc = goog.dom.getOwnerDocument(node);
  if (cljs.core.truth_(function() {
    var and__8771__auto__ = node.selectSingleNode;
    if (cljs.core.truth_(and__8771__auto__)) {
      return doc.setProperty;
    } else {
      return and__8771__auto__;
    }
  }())) {
    doc.setProperty("SelectionLanguage", "XPath");
    return technique_1.call(null, node, path);
  } else {
    if (cljs.core.truth_(doc.evaluate)) {
      return technique_2.call(null, null, doc, node, path);
    } else {
      throw new Error("Could not find XPath support in this browser.");
    }
  }
};
domina.xpath.select_node = function select_node(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectSingleNode(expr__$1);
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
    return result.singleNodeValue;
  });
};
domina.xpath.select_nodes = function select_nodes(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node__$1, expr__$1) {
    return node__$1.selectNodes(expr__$1);
  }, function(resolver, doc, node__$1, expr__$1) {
    var result = doc.evaluate(expr__$1, node__$1, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    var num_results = result.snapshotLength;
    var i = 0;
    var acc = null;
    while (true) {
      if (i < num_results) {
        var G__10460 = i + 1;
        var G__10461 = cljs.core.cons.call(null, result.snapshotItem(i), acc);
        i = G__10460;
        acc = G__10461;
        continue;
      } else {
        return acc;
      }
      break;
    }
  });
};
domina.xpath.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0];
};
domina.xpath.xpath = function() {
  var xpath = null;
  var xpath__1 = function(expr) {
    return xpath.call(null, domina.xpath.root_element.call(null), expr);
  };
  var xpath__2 = function(base, expr) {
    if (typeof domina.xpath.t10465 !== "undefined") {
    } else {
      domina.xpath.t10465 = function(expr, base, xpath, meta10466) {
        this.expr = expr;
        this.base = base;
        this.xpath = xpath;
        this.meta10466 = meta10466;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      domina.xpath.t10465.prototype.domina$DomContent$ = true;
      domina.xpath.t10465.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.mapcat.call(null, cljs.core.partial.call(null, domina.xpath.select_nodes, self__.expr), domina.nodes.call(null, self__.base));
      };
      domina.xpath.t10465.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, cljs.core.partial.call(null, domina.xpath.select_node, self__.expr), domina.nodes.call(null, self__.base))));
      };
      domina.xpath.t10465.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10467) {
        var self__ = this;
        var _10467__$1 = this;
        return self__.meta10466;
      };
      domina.xpath.t10465.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10467, meta10466__$1) {
        var self__ = this;
        var _10467__$1 = this;
        return new domina.xpath.t10465(self__.expr, self__.base, self__.xpath, meta10466__$1);
      };
      domina.xpath.t10465.cljs$lang$type = true;
      domina.xpath.t10465.cljs$lang$ctorStr = "domina.xpath/t10465";
      domina.xpath.t10465.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
        return cljs.core._write.call(null, writer__9371__auto__, "domina.xpath/t10465");
      };
      domina.xpath.__GT_t10465 = function __GT_t10465(expr__$1, base__$1, xpath__$1, meta10466) {
        return new domina.xpath.t10465(expr__$1, base__$1, xpath__$1, meta10466);
      };
    }
    return new domina.xpath.t10465(expr, base, xpath, cljs.core.PersistentArrayMap.EMPTY);
  };
  xpath = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return xpath__1.call(this, base);
      case 2:
        return xpath__2.call(this, base, expr);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpath.cljs$core$IFn$_invoke$arity$1 = xpath__1;
  xpath.cljs$core$IFn$_invoke$arity$2 = xpath__2;
  return xpath;
}();
goog.provide("hsnd.systems.current_position");
goog.require("cljs.core");
goog.require("domina.xpath");
goog.require("domina");
goog.require("hsnd.entity");
goog.require("hsnd.component");
hsnd.systems.current_position.init = function init() {
  return null;
};
hsnd.systems.current_position.keydown = function keydown() {
  return null;
};
hsnd.systems.current_position.keyup = function keyup() {
  return null;
};
hsnd.systems.current_position.update = function update() {
  return null;
};
hsnd.systems.current_position.view_query = "//div[@id\x3d'stats-position']";
hsnd.systems.current_position.view = domina.xpath.xpath.call(null, hsnd.systems.current_position.view_query);
hsnd.systems.current_position.draw_player_position = function draw_player_position(player) {
  var position = hsnd.entity.get.call(null, player, "position");
  var position_of_death = hsnd.entity.get.call(null, player, "position-of-death");
  var dead_QMARK_ = !(hsnd.entity.get.call(null, player, "dead") == null);
  var position__$1 = dead_QMARK_ ? position_of_death : position;
  var map__10588 = hsnd.component.get_hash.call(null, position__$1);
  var map__10588__$1 = cljs.core.seq_QMARK_.call(null, map__10588) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10588) : map__10588;
  var x = cljs.core.get.call(null, map__10588__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
  var y = cljs.core.get.call(null, map__10588__$1, new cljs.core.Keyword(null, "y", "y", -1757859776));
  var representation = [cljs.core.str("( "), cljs.core.str(x), cljs.core.str("; "), cljs.core.str(y), cljs.core.str(" )")].join("");
  return domina.set_text_BANG_.call(null, hsnd.systems.current_position.view, representation);
};
hsnd.systems.current_position.draw = function draw() {
  return hsnd.entity.each.call(null, "player", hsnd.systems.current_position.draw_player_position);
};
hsnd.systems.current_position.system = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "init", "init", -1875481434), hsnd.systems.current_position.init, new cljs.core.Keyword(null, "draw", "draw", 1358331674), hsnd.systems.current_position.draw, new cljs.core.Keyword(null, "update", "update", 1045576396), hsnd.systems.current_position.update, new cljs.core.Keyword(null, "keydown", "keydown", -629268186), hsnd.systems.current_position.keydown, new cljs.core.Keyword(null, "keyup", 
"keyup", -794526927), hsnd.systems.current_position.keyup], null);
goog.provide("hsnd.systems.control");
goog.require("cljs.core");
goog.require("hsnd.entity");
goog.require("hsnd.component");
hsnd.systems.control.init = function init() {
  return null;
};
hsnd.systems.control.draw = function draw() {
  return null;
};
hsnd.systems.control.busy_QMARK_ = function busy_QMARK_(player) {
  return hsnd.component.get.call(null, hsnd.entity.get.call(null, player, "busy"), new cljs.core.Keyword(null, "value", "value", 305978217));
};
hsnd.systems.control.move = function move(key, value) {
  var components = hsnd.component.by_name.call(null, "player-controlled");
  var player = cljs.core.first.call(null, hsnd.entity.each.call(null, "player"));
  if (cljs.core.not.call(null, hsnd.systems.control.busy_QMARK_.call(null, player))) {
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(components, player) {
      return function(p1__10610_SHARP_) {
        return hsnd.component.set.call(null, p1__10610_SHARP_, key, value);
      };
    }(components, player), components));
  } else {
    return null;
  }
};
hsnd.systems.control.up = function up() {
  return hsnd.systems.control.move.call(null, new cljs.core.Keyword(null, "dy", "dy", 1719547243), -1);
};
hsnd.systems.control.left = function left() {
  return hsnd.systems.control.move.call(null, new cljs.core.Keyword(null, "dx", "dx", -381796732), -1);
};
hsnd.systems.control.down = function down() {
  return hsnd.systems.control.move.call(null, new cljs.core.Keyword(null, "dy", "dy", 1719547243), 1);
};
hsnd.systems.control.right = function right() {
  return hsnd.systems.control.move.call(null, new cljs.core.Keyword(null, "dx", "dx", -381796732), 1);
};
hsnd.systems.control.stop = function stop() {
  hsnd.systems.control.move.call(null, new cljs.core.Keyword(null, "dx", "dx", -381796732), 0);
  return hsnd.systems.control.move.call(null, new cljs.core.Keyword(null, "dy", "dy", 1719547243), 0);
};
hsnd.systems.control.controls = new cljs.core.PersistentArrayMap(null, 4, [87, hsnd.systems.control.up, 65, hsnd.systems.control.left, 83, hsnd.systems.control.down, 68, hsnd.systems.control.right], null);
hsnd.systems.control.keydown = function keydown(key_code) {
  if (cljs.core.contains_QMARK_.call(null, hsnd.systems.control.controls, key_code)) {
    return hsnd.systems.control.controls.call(null, key_code).call(null);
  } else {
    return null;
  }
};
hsnd.systems.control.keyup = function keyup(key_code) {
  return hsnd.systems.control.stop.call(null);
};
hsnd.systems.control.update_entity = function update_entity(entity) {
  var map__10613 = hsnd.component.get_hash.call(null, hsnd.entity.get.call(null, entity, "player-controlled"));
  var map__10613__$1 = cljs.core.seq_QMARK_.call(null, map__10613) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10613) : map__10613;
  var dx = cljs.core.get.call(null, map__10613__$1, new cljs.core.Keyword(null, "dx", "dx", -381796732));
  var dy = cljs.core.get.call(null, map__10613__$1, new cljs.core.Keyword(null, "dy", "dy", 1719547243));
  var position = hsnd.entity.get.call(null, entity, "position");
  if (!(position == null)) {
    var next_position = hsnd.entity.get_with_defaults.call(null, entity, "next-position", hsnd.component.get_hash.call(null, position));
    if (cljs.core.not_EQ_.call(null, 0, dx) || cljs.core.not_EQ_.call(null, 0, dy)) {
      var map__10614 = hsnd.component.get_hash.call(null, position);
      var map__10614__$1 = cljs.core.seq_QMARK_.call(null, map__10614) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10614) : map__10614;
      var x = cljs.core.get.call(null, map__10614__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
      var y = cljs.core.get.call(null, map__10614__$1, new cljs.core.Keyword(null, "y", "y", -1757859776));
      var nx = x + dx;
      var ny = y + dy;
      return hsnd.component.reset.call(null, next_position, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), nx, new cljs.core.Keyword(null, "y", "y", -1757859776), ny], null));
    } else {
      return null;
    }
  } else {
    return null;
  }
};
hsnd.systems.control.handle_busy = function handle_busy(player) {
  if (cljs.core.truth_(hsnd.systems.control.busy_QMARK_.call(null, player))) {
    return hsnd.systems.control.stop.call(null);
  } else {
    return null;
  }
};
hsnd.systems.control.update = function update() {
  hsnd.entity.each.call(null, "player-controlled", hsnd.systems.control.update_entity);
  return hsnd.entity.each.call(null, "player", hsnd.systems.control.handle_busy);
};
hsnd.systems.control.system = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "init", "init", -1875481434), hsnd.systems.control.init, new cljs.core.Keyword(null, "update", "update", 1045576396), hsnd.systems.control.update, new cljs.core.Keyword(null, "draw", "draw", 1358331674), hsnd.systems.control.draw, new cljs.core.Keyword(null, "keydown", "keydown", -629268186), hsnd.systems.control.keydown, new cljs.core.Keyword(null, "keyup", "keyup", -794526927), hsnd.systems.control.keyup], 
null);
goog.provide("hsnd.systems.blocked");
goog.require("cljs.core");
goog.require("hsnd.callback");
goog.require("hsnd.component");
goog.require("hsnd.entity");
hsnd.systems.blocked.init = function init() {
  return null;
};
hsnd.systems.blocked.draw = function draw() {
  return null;
};
hsnd.systems.blocked.keydown = function keydown() {
  return null;
};
hsnd.systems.blocked.keyup = function keyup() {
  return null;
};
hsnd.systems.blocked.update = function update() {
  return null;
};
hsnd.systems.blocked.handle_collision = function handle_collision(entity, other_entity) {
  var player_QMARK_ = cljs.core._EQ_.call(null, "player", entity.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177)));
  var other_not_enemy_QMARK_ = hsnd.entity.get.call(null, other_entity, "enemy") == null;
  if (player_QMARK_ && other_not_enemy_QMARK_) {
    return hsnd.callback.emit.call(null, new cljs.core.Keyword(null, "log-message", "log-message", -1434597634), [cljs.core.str(other_entity.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177))), cljs.core.str(" is blocking your path")].join(""));
  } else {
    return null;
  }
};
hsnd.systems.blocked.system = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "init", "init", -1875481434), hsnd.systems.blocked.init, new cljs.core.Keyword(null, "draw", "draw", 1358331674), hsnd.systems.blocked.draw, new cljs.core.Keyword(null, "update", "update", 1045576396), hsnd.systems.blocked.update, new cljs.core.Keyword(null, "keydown", "keydown", -629268186), hsnd.systems.blocked.keydown, new cljs.core.Keyword(null, "keyup", "keyup", -794526927), hsnd.systems.blocked.keyup, 
new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "collision", "collision", -201625508), hsnd.systems.blocked.handle_collision], null)], null);
goog.provide("hsnd.systems.collision");
goog.require("cljs.core");
goog.require("hsnd.callback");
goog.require("hsnd.entity");
goog.require("hsnd.component");
hsnd.systems.collision.init = function init() {
  return null;
};
hsnd.systems.collision.draw = function draw() {
  return null;
};
hsnd.systems.collision.keydown = function keydown() {
  return null;
};
hsnd.systems.collision.keyup = function keyup() {
  return null;
};
hsnd.systems.collision.position_cell = function position_cell(entity, position_kind) {
  return hsnd.component.get_hash.call(null, hsnd.entity.get.call(null, entity, position_kind));
};
hsnd.systems.collision.cell = function cell(entity) {
  return hsnd.systems.collision.position_cell.call(null, entity, "position");
};
hsnd.systems.collision.next_cell = function next_cell(entity) {
  return hsnd.systems.collision.position_cell.call(null, entity, "next-position");
};
hsnd.systems.collision.cell_taken_by = function cell_taken_by(cells_taken, entity) {
  var position = hsnd.entity.get.call(null, entity, "position");
  var cell = hsnd.component.get_hash.call(null, position);
  var not_passable_QMARK_ = hsnd.entity.get.call(null, entity, "passable") == null;
  if (not_passable_QMARK_) {
    return cljs.core.assoc_BANG_.call(null, cells_taken, cell, entity);
  } else {
    return cells_taken;
  }
};
hsnd.systems.collision.detect_taken_cells = function detect_taken_cells() {
  var cells_taken = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return cljs.core.persistent_BANG_.call(null, hsnd.entity.reduce.call(null, "position", hsnd.systems.collision.cell_taken_by, cells_taken));
};
hsnd.systems.collision.collisions_for = function collisions_for(cells_taken, entity) {
  var next_position = hsnd.entity.get.call(null, entity, "next-position");
  var position = hsnd.entity.get.call(null, entity, "position");
  var its_next_cell = hsnd.systems.collision.next_cell.call(null, entity);
  var collision = cells_taken.call(null, its_next_cell);
  if (!(collision == null || cljs.core._EQ_.call(null, entity, collision))) {
    hsnd.component.reset.call(null, next_position, hsnd.component.get_hash.call(null, position));
    return hsnd.callback.emit.call(null, new cljs.core.Keyword(null, "collision", "collision", -201625508), entity, collision);
  } else {
    return null;
  }
};
hsnd.systems.collision.update = function update() {
  var cells_taken = hsnd.systems.collision.detect_taken_cells.call(null);
  return hsnd.entity.each.call(null, "next-position", cljs.core.partial.call(null, hsnd.systems.collision.collisions_for, cells_taken));
};
hsnd.systems.collision.system = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "init", "init", -1875481434), hsnd.systems.collision.init, new cljs.core.Keyword(null, "draw", "draw", 1358331674), hsnd.systems.collision.draw, new cljs.core.Keyword(null, "update", "update", 1045576396), hsnd.systems.collision.update, new cljs.core.Keyword(null, "keydown", "keydown", -629268186), hsnd.systems.collision.keydown, new cljs.core.Keyword(null, "keyup", "keyup", -794526927), hsnd.systems.collision.keyup], 
null);
goog.provide("hsnd.systems.stats");
goog.require("cljs.core");
goog.require("domina.xpath");
goog.require("domina");
goog.require("hsnd.entity");
goog.require("hsnd.component");
hsnd.systems.stats.init = function init() {
  return null;
};
hsnd.systems.stats.keydown = function keydown() {
  return null;
};
hsnd.systems.stats.keyup = function keyup() {
  return null;
};
hsnd.systems.stats.update = function update() {
  return null;
};
hsnd.systems.stats.health_query = "//div[@id\x3d'stats-health']";
hsnd.systems.stats.health_view = domina.xpath.xpath.call(null, hsnd.systems.stats.health_query);
hsnd.systems.stats.draw_player_stats = function draw_player_stats(player) {
  var health = hsnd.component.get.call(null, hsnd.entity.get.call(null, player, "health"), new cljs.core.Keyword(null, "value", "value", 305978217));
  var max_health = hsnd.component.get.call(null, hsnd.entity.get.call(null, player, "max-health"), new cljs.core.Keyword(null, "value", "value", 305978217));
  var resurrection_timeout = hsnd.entity.get.call(null, player, "resurrection-timeout");
  var alive_QMARK_ = resurrection_timeout == null;
  if (alive_QMARK_) {
    var representation = [cljs.core.str("HP: "), cljs.core.str(health), cljs.core.str("/"), cljs.core.str(max_health)].join("");
    return domina.set_text_BANG_.call(null, hsnd.systems.stats.health_view, representation);
  } else {
    var resurrect_in = hsnd.component.get.call(null, resurrection_timeout, new cljs.core.Keyword(null, "value", "value", 305978217));
    var representation = [cljs.core.str("RESPAWN: "), cljs.core.str(resurrect_in)].join("");
    return domina.set_text_BANG_.call(null, hsnd.systems.stats.health_view, representation);
  }
};
hsnd.systems.stats.draw = function draw() {
  return hsnd.entity.each.call(null, "player-controlled", hsnd.systems.stats.draw_player_stats);
};
hsnd.systems.stats.system = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "init", "init", -1875481434), hsnd.systems.stats.init, new cljs.core.Keyword(null, "draw", "draw", 1358331674), hsnd.systems.stats.draw, new cljs.core.Keyword(null, "update", "update", 1045576396), hsnd.systems.stats.update, new cljs.core.Keyword(null, "keydown", "keydown", -629268186), hsnd.systems.stats.keydown, new cljs.core.Keyword(null, "keyup", "keyup", -794526927), hsnd.systems.stats.keyup], 
null);
goog.provide("hsnd.initial");
goog.require("cljs.core");
goog.require("hsnd.entity");
hsnd.initial.player = hsnd.entity.new$.call(null, "player");
hsnd.entity.add.call(null, hsnd.initial.player, "player", cljs.core.PersistentArrayMap.EMPTY);
hsnd.entity.add.call(null, hsnd.initial.player, "position", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), 7, new cljs.core.Keyword(null, "y", "y", -1757859776), 15], null));
hsnd.entity.add.call(null, hsnd.initial.player, "tile", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), "@"], null));
hsnd.entity.add.call(null, hsnd.initial.player, "player-controlled", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dx", "dx", -381796732), 0, new cljs.core.Keyword(null, "dy", "dy", 1719547243), 0], null));
hsnd.entity.add.call(null, hsnd.initial.player, "camera", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "active", "active", 1895962068), true], null));
hsnd.entity.add.call(null, hsnd.initial.player, "base-damage", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), 1], null));
hsnd.entity.add.call(null, hsnd.initial.player, "damage", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), 1], null));
hsnd.entity.add.call(null, hsnd.initial.player, "health", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), 100], null));
hsnd.entity.add.call(null, hsnd.initial.player, "max-health", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), 100], null));
hsnd.entity.add.call(null, hsnd.initial.player, "busy", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), false], null));
hsnd.initial.rock = hsnd.entity.new$.call(null, "rock");
hsnd.entity.add.call(null, hsnd.initial.rock, "position", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), 5, new cljs.core.Keyword(null, "y", "y", -1757859776), 5], null));
hsnd.entity.add.call(null, hsnd.initial.rock, "tile", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), "#"], null));
hsnd.initial.resurrection_stone = hsnd.entity.new$.call(null, "resurrection stone");
hsnd.entity.add.call(null, hsnd.initial.resurrection_stone, "position", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), 25, new cljs.core.Keyword(null, "y", "y", -1757859776), 25], null));
hsnd.entity.add.call(null, hsnd.initial.resurrection_stone, "tile", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), "\u00ae"], null));
hsnd.entity.add.call(null, hsnd.initial.resurrection_stone, "resurrection-stone", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "radius", "radius", -2073122258), 5], null));
hsnd.entity.add.call(null, hsnd.initial.resurrection_stone, "resurrection-stone-active", cljs.core.PersistentArrayMap.EMPTY);
hsnd.initial.resurrection_stone_2 = hsnd.entity.new$.call(null, "resurrection stone");
hsnd.entity.add.call(null, hsnd.initial.resurrection_stone_2, "position", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), -5, new cljs.core.Keyword(null, "y", "y", -1757859776), -5], null));
hsnd.entity.add.call(null, hsnd.initial.resurrection_stone_2, "tile", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), "\u00ae"], null));
hsnd.entity.add.call(null, hsnd.initial.resurrection_stone_2, "resurrection-stone", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "radius", "radius", -2073122258), 10], null));
hsnd.initial.example_log = hsnd.entity.new$.call(null, "welcome-message");
hsnd.entity.add.call(null, hsnd.initial.example_log, "log-message", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), "Welcome to Hack, Slash and Deathblaze!"], null));
hsnd.initial.goblin = hsnd.entity.new$.call(null, "goblin");
hsnd.entity.add.call(null, hsnd.initial.goblin, "position", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), 15, new cljs.core.Keyword(null, "y", "y", -1757859776), 5], null));
hsnd.entity.add.call(null, hsnd.initial.goblin, "tile", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), "g"], null));
hsnd.entity.add.call(null, hsnd.initial.goblin, "enemy", cljs.core.PersistentArrayMap.EMPTY);
hsnd.entity.add.call(null, hsnd.initial.goblin, "damage", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), 1], null));
hsnd.entity.add.call(null, hsnd.initial.goblin, "sight", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "radius", "radius", -2073122258), 10], null));
hsnd.entity.add.call(null, hsnd.initial.goblin, "melee-ai", cljs.core.PersistentArrayMap.EMPTY);
hsnd.entity.add.call(null, hsnd.initial.goblin, "health", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), 7], null));
hsnd.entity.add.call(null, hsnd.initial.goblin, "loot", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["goblin body", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["tile", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), "~"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["passable", cljs.core.PersistentArrayMap.EMPTY], null)], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["knife", new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 
5, cljs.core.PersistentVector.EMPTY_NODE, ["tile", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), "|"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["stats", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "damage", "damage", 970520018), 1], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["item", cljs.core.PersistentArrayMap.EMPTY], 
null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["equippable", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "slot", "slot", 240229571), "weapon"], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["cost", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), 32], null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
["passable", cljs.core.PersistentArrayMap.EMPTY], null)], null)], null)], null)], null));
hsnd.initial.small_knife = hsnd.entity.new$.call(null, "small knife");
hsnd.entity.add.call(null, hsnd.initial.small_knife, "in-inventory", cljs.core.PersistentArrayMap.EMPTY);
hsnd.entity.add.call(null, hsnd.initial.small_knife, "stats", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "damage", "damage", 970520018), 2], null));
hsnd.entity.add.call(null, hsnd.initial.small_knife, "equippable", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "slot", "slot", 240229571), "weapon"], null));
hsnd.entity.add.call(null, hsnd.initial.small_knife, "item", cljs.core.PersistentArrayMap.EMPTY);
hsnd.entity.add.call(null, hsnd.initial.small_knife, "passable", cljs.core.PersistentArrayMap.EMPTY);
hsnd.entity.add.call(null, hsnd.initial.small_knife, "tile", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), "|"], null));
hsnd.initial.leather_jacket = hsnd.entity.new$.call(null, "leather jacket");
hsnd.entity.add.call(null, hsnd.initial.leather_jacket, "in-inventory", cljs.core.PersistentArrayMap.EMPTY);
hsnd.entity.add.call(null, hsnd.initial.leather_jacket, "stats", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "armor", "armor", -829575337), 3], null));
hsnd.entity.add.call(null, hsnd.initial.leather_jacket, "equippable", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "slot", "slot", 240229571), "chest"], null));
hsnd.entity.add.call(null, hsnd.initial.leather_jacket, "item", cljs.core.PersistentArrayMap.EMPTY);
hsnd.entity.add.call(null, hsnd.initial.leather_jacket, "passable", cljs.core.PersistentArrayMap.EMPTY);
hsnd.entity.add.call(null, hsnd.initial.leather_jacket, "tile", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), "["], null));
hsnd.initial.junk = hsnd.entity.new$.call(null, "some junk");
hsnd.entity.add.call(null, hsnd.initial.junk, "in-inventory", cljs.core.PersistentArrayMap.EMPTY);
hsnd.entity.add.call(null, hsnd.initial.junk, "description", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), "Useless junk"], null));
hsnd.entity.add.call(null, hsnd.initial.junk, "item", cljs.core.PersistentArrayMap.EMPTY);
hsnd.entity.add.call(null, hsnd.initial.junk, "passable", cljs.core.PersistentArrayMap.EMPTY);
hsnd.entity.add.call(null, hsnd.initial.junk, "tile", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), "%"], null));
hsnd.initial.active_inventory_item = hsnd.entity.new$.call(null, "active inventory item");
hsnd.entity.add.call(null, hsnd.initial.active_inventory_item, "inventory-active-item", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), 0], null));
goog.provide("hsnd.systems.camera");
goog.require("cljs.core");
goog.require("hsnd.entity");
goog.require("hsnd.component");
hsnd.systems.camera.init = function init() {
  return null;
};
hsnd.systems.camera.draw = function draw() {
  return null;
};
hsnd.systems.camera.keydown = function keydown() {
  return null;
};
hsnd.systems.camera.keyup = function keyup() {
  return null;
};
hsnd.systems.camera.update = function update() {
  return null;
};
hsnd.systems.camera.system = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "init", "init", -1875481434), hsnd.systems.camera.init, new cljs.core.Keyword(null, "draw", "draw", 1358331674), hsnd.systems.camera.draw, new cljs.core.Keyword(null, "update", "update", 1045576396), hsnd.systems.camera.update, new cljs.core.Keyword(null, "keydown", "keydown", -629268186), hsnd.systems.camera.keydown, new cljs.core.Keyword(null, "keyup", "keyup", -794526927), hsnd.systems.camera.keyup], 
null);
goog.provide("hsnd.systems.resurrection");
goog.require("cljs.core");
goog.require("hsnd.callback");
goog.require("hsnd.entity");
goog.require("hsnd.component");
hsnd.systems.resurrection.init = function init() {
  return null;
};
hsnd.systems.resurrection.draw = function draw() {
  return null;
};
hsnd.systems.resurrection.keydown = function keydown() {
  return null;
};
hsnd.systems.resurrection.keyup = function keyup() {
  return null;
};
hsnd.systems.resurrection.resurrection_timeout = 250;
hsnd.systems.resurrection.abs = function abs(value) {
  if (value < 0) {
    return-value;
  } else {
    return value;
  }
};
hsnd.systems.resurrection.resurrect_at = function resurrect_at(player, stone) {
  var stone_position = hsnd.entity.get.call(null, stone, "position");
  var position = hsnd.component.get_hash.call(null, stone_position);
  return hsnd.entity.add.call(null, player, "position", position);
};
hsnd.systems.resurrection.resurrect = function resurrect(player) {
  hsnd.entity.remove.call(null, player, "resurrection-timeout");
  hsnd.entity.remove.call(null, player, "dead");
  var health_component_10591 = hsnd.entity.get.call(null, player, "health");
  var max_health_10592 = hsnd.component.get.call(null, hsnd.entity.get.call(null, player, "max-health"), new cljs.core.Keyword(null, "value", "value", 305978217));
  hsnd.component.set.call(null, health_component_10591, new cljs.core.Keyword(null, "value", "value", 305978217), max_health_10592);
  hsnd.entity.each.call(null, "resurrection-stone-active", cljs.core.partial.call(null, hsnd.systems.resurrection.resurrect_at, player));
  return hsnd.callback.emit.call(null, new cljs.core.Keyword(null, "log-message", "log-message", -1434597634), "player is resurrected");
};
hsnd.systems.resurrection.resurrection_turn = function resurrection_turn(player) {
  var is_player_QMARK_ = !(hsnd.entity.get.call(null, player, "player") == null);
  if (is_player_QMARK_) {
    var resurrection = hsnd.entity.get_with_defaults.call(null, player, "resurrection-timeout", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), hsnd.systems.resurrection.resurrection_timeout], null));
    var current_turn = hsnd.component.get.call(null, resurrection, new cljs.core.Keyword(null, "value", "value", 305978217));
    var new_turn = current_turn - 1;
    if (cljs.core._EQ_.call(null, current_turn, 0)) {
      return hsnd.systems.resurrection.resurrect.call(null, player);
    } else {
      return hsnd.component.set.call(null, resurrection, new cljs.core.Keyword(null, "value", "value", 305978217), new_turn);
    }
  } else {
    return null;
  }
};
hsnd.systems.resurrection.deactivate_current_stone = function() {
  var deactivate_current_stone = null;
  var deactivate_current_stone__0 = function() {
    return hsnd.entity.each.call(null, "resurrection-stone-active", deactivate_current_stone);
  };
  var deactivate_current_stone__1 = function(stone) {
    return hsnd.entity.remove.call(null, stone, "resurrection-stone-active");
  };
  deactivate_current_stone = function(stone) {
    switch(arguments.length) {
      case 0:
        return deactivate_current_stone__0.call(this);
      case 1:
        return deactivate_current_stone__1.call(this, stone);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  deactivate_current_stone.cljs$core$IFn$_invoke$arity$0 = deactivate_current_stone__0;
  deactivate_current_stone.cljs$core$IFn$_invoke$arity$1 = deactivate_current_stone__1;
  return deactivate_current_stone;
}();
hsnd.systems.resurrection.activate_stone = function activate_stone(stone) {
  hsnd.entity.add.call(null, stone, "resurrection-stone-active", cljs.core.PersistentArrayMap.EMPTY);
  return hsnd.callback.emit.call(null, new cljs.core.Keyword(null, "log-message", "log-message", -1434597634), "you activated resurrection stone");
};
hsnd.systems.resurrection.deflect_enemy = function deflect_enemy(stone, enemy) {
  var enemy_alive_QMARK_ = hsnd.entity.get.call(null, enemy, "dead") == null;
  if (enemy_alive_QMARK_) {
    var position = hsnd.entity.get.call(null, stone, "position");
    var map__10596 = hsnd.component.get_hash.call(null, position);
    var map__10596__$1 = cljs.core.seq_QMARK_.call(null, map__10596) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10596) : map__10596;
    var x = cljs.core.get.call(null, map__10596__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
    var y = cljs.core.get.call(null, map__10596__$1, new cljs.core.Keyword(null, "y", "y", -1757859776));
    var enemy_position = hsnd.entity.get.call(null, enemy, "position");
    var map__10597 = hsnd.component.get_hash.call(null, enemy_position);
    var map__10597__$1 = cljs.core.seq_QMARK_.call(null, map__10597) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10597) : map__10597;
    var tx = cljs.core.get.call(null, map__10597__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
    var ty = cljs.core.get.call(null, map__10597__$1, new cljs.core.Keyword(null, "y", "y", -1757859776));
    var enemy_next_position = hsnd.entity.get_with_defaults.call(null, enemy, "next-position", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), tx, new cljs.core.Keyword(null, "y", "y", -1757859776), ty], null));
    var map__10598 = hsnd.component.get_hash.call(null, enemy_next_position);
    var map__10598__$1 = cljs.core.seq_QMARK_.call(null, map__10598) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10598) : map__10598;
    var nx = cljs.core.get.call(null, map__10598__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
    var ny = cljs.core.get.call(null, map__10598__$1, new cljs.core.Keyword(null, "y", "y", -1757859776));
    var resurrection_stone = hsnd.entity.get.call(null, stone, "resurrection-stone");
    var effect_radius = hsnd.component.get.call(null, resurrection_stone, new cljs.core.Keyword(null, "radius", "radius", -2073122258));
    var dx = hsnd.systems.resurrection.abs.call(null, x - nx);
    var dy = hsnd.systems.resurrection.abs.call(null, y - ny);
    if (dx <= effect_radius && dy <= effect_radius) {
      return hsnd.component.reset.call(null, enemy_next_position, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), tx, new cljs.core.Keyword(null, "y", "y", -1757859776), ty], null));
    } else {
      return null;
    }
  } else {
    return null;
  }
};
hsnd.systems.resurrection.deflect_enemies = function deflect_enemies(stone) {
  return hsnd.entity.each.call(null, "enemy", cljs.core.partial.call(null, hsnd.systems.resurrection.deflect_enemy, stone));
};
hsnd.systems.resurrection.handle_collision = function handle_collision(entity, other_entity) {
  var player_QMARK_ = !(hsnd.entity.get.call(null, entity, "player") == null);
  var other_stone_QMARK_ = !(hsnd.entity.get.call(null, other_entity, "resurrection-stone") == null);
  var non_active_stone_QMARK_ = hsnd.entity.get.call(null, other_entity, "resurrection-stone-active") == null;
  if (player_QMARK_ && other_stone_QMARK_ && non_active_stone_QMARK_) {
    hsnd.systems.resurrection.deactivate_current_stone.call(null);
    return hsnd.systems.resurrection.activate_stone.call(null, other_entity);
  } else {
    return null;
  }
};
hsnd.systems.resurrection.update = function update() {
  hsnd.entity.each.call(null, "dead", hsnd.systems.resurrection.resurrection_turn);
  return hsnd.entity.each.call(null, "resurrection-stone-active", hsnd.systems.resurrection.deflect_enemies);
};
hsnd.systems.resurrection.system = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "init", "init", -1875481434), hsnd.systems.resurrection.init, new cljs.core.Keyword(null, "draw", "draw", 1358331674), hsnd.systems.resurrection.draw, new cljs.core.Keyword(null, "update", "update", 1045576396), hsnd.systems.resurrection.update, new cljs.core.Keyword(null, "keydown", "keydown", -629268186), hsnd.systems.resurrection.keydown, new cljs.core.Keyword(null, "keyup", "keyup", -794526927), 
hsnd.systems.resurrection.keyup, new cljs.core.Keyword(null, "listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "collision", "collision", -201625508), hsnd.systems.resurrection.handle_collision], null)], null);
goog.provide("hsnd.systems.inventory");
goog.require("cljs.core");
goog.require("hsnd.entity");
goog.require("hsnd.callback");
goog.require("domina");
goog.require("domina.xpath");
goog.require("hsnd.component");
hsnd.systems.inventory.init = function init() {
  return null;
};
hsnd.systems.inventory.keydown = function keydown() {
  return null;
};
hsnd.systems.inventory.by_id = function by_id(id) {
  return domina.xpath.xpath.call(null, [cljs.core.str("//div[@id\x3d'"), cljs.core.str(id), cljs.core.str("']")].join(""));
};
hsnd.systems.inventory.overlay_view = hsnd.systems.inventory.by_id.call(null, "inventory-overlay");
hsnd.systems.inventory.list_view = hsnd.systems.inventory.by_id.call(null, "inventory-list");
hsnd.systems.inventory.details_view = hsnd.systems.inventory.by_id.call(null, "item-details-overlay");
hsnd.systems.inventory.details_name_view = hsnd.systems.inventory.by_id.call(null, "item-details-name");
hsnd.systems.inventory.details_description_view = hsnd.systems.inventory.by_id.call(null, "item-details-description");
hsnd.systems.inventory.stat_list_view = hsnd.systems.inventory.by_id.call(null, "item-details-stats");
hsnd.systems.inventory.view_count = function view_count(view, selector) {
  return cljs.core.count.call(null, domina.nodes.call(null, domina.xpath.xpath.call(null, view, selector)));
};
hsnd.systems.inventory.item_view_count = function item_view_count() {
  return hsnd.systems.inventory.view_count.call(null, hsnd.systems.inventory.list_view, "p");
};
hsnd.systems.inventory.item_details_stats_view_count = function item_details_stats_view_count() {
  return hsnd.systems.inventory.view_count.call(null, hsnd.systems.inventory.stat_list_view, "p");
};
hsnd.systems.inventory.generic_list_view = function generic_list_view(current_count, view, index) {
  var i_11082 = current_count;
  while (true) {
    if (i_11082 < index) {
      domina.append_BANG_.call(null, view, "\x3cp\x3e\x3cp\x3e");
      var G__11083 = i_11082 + 1;
      i_11082 = G__11083;
      continue;
    } else {
    }
    break;
  }
  return domina.xpath.xpath.call(null, view, [cljs.core.str("p["), cljs.core.str(index), cljs.core.str("]")].join(""));
};
hsnd.systems.inventory.generic_list_cleanup = function generic_list_cleanup(current_count, item_view_fn, new_count) {
  var i = current_count;
  while (true) {
    if (i > new_count) {
      domina.set_text_BANG_.call(null, item_view_fn.call(null, i), "");
      var G__11084 = i - 1;
      i = G__11084;
      continue;
    } else {
      return null;
    }
    break;
  }
};
hsnd.systems.inventory.list_item_view = function list_item_view(index) {
  return hsnd.systems.inventory.generic_list_view.call(null, hsnd.systems.inventory.item_view_count.call(null), hsnd.systems.inventory.list_view, index);
};
hsnd.systems.inventory.list_stat_view = function list_stat_view(index) {
  return hsnd.systems.inventory.generic_list_view.call(null, hsnd.systems.inventory.item_details_stats_view_count.call(null), hsnd.systems.inventory.stat_list_view, index);
};
hsnd.systems.inventory.cleanup_list_view = function cleanup_list_view(item_count) {
  return hsnd.systems.inventory.generic_list_cleanup.call(null, hsnd.systems.inventory.item_view_count.call(null), hsnd.systems.inventory.list_item_view, item_count);
};
hsnd.systems.inventory.cleanup_stats_view = function cleanup_stats_view(item_count) {
  return hsnd.systems.inventory.generic_list_cleanup.call(null, hsnd.systems.inventory.item_details_stats_view_count.call(null), hsnd.systems.inventory.list_stat_view, item_count);
};
hsnd.systems.inventory.inventory_active_QMARK_ = function inventory_active_QMARK_() {
  return cljs.core.not.call(null, domina.has_class_QMARK_.call(null, hsnd.systems.inventory.overlay_view, "hide"));
};
hsnd.systems.inventory.details_active_QMARK_ = function details_active_QMARK_() {
  return cljs.core.not.call(null, domina.has_class_QMARK_.call(null, hsnd.systems.inventory.details_view, "hide"));
};
hsnd.systems.inventory.toggle_inventory_overlay = function toggle_inventory_overlay() {
  return domina.toggle_class_BANG_.call(null, hsnd.systems.inventory.overlay_view, "hide");
};
hsnd.systems.inventory.show_active_item_details = function show_active_item_details() {
  return domina.remove_class_BANG_.call(null, hsnd.systems.inventory.details_view, "hide");
};
hsnd.systems.inventory.back_to_inventory = function back_to_inventory() {
  return domina.add_class_BANG_.call(null, hsnd.systems.inventory.details_view, "hide");
};
hsnd.systems.inventory.active_item_component = function active_item_component() {
  return cljs.core.first.call(null, hsnd.component.by_name.call(null, "inventory-active-item"));
};
hsnd.systems.inventory.change_active_item_to = function change_active_item_to(old_active_index, new_active_index) {
  domina.remove_class_BANG_.call(null, hsnd.systems.inventory.list_item_view.call(null, old_active_index), "active");
  return domina.add_class_BANG_.call(null, hsnd.systems.inventory.list_item_view.call(null, new_active_index), "active");
};
hsnd.systems.inventory.change_active_item = function change_active_item(change) {
  if (hsnd.systems.inventory.inventory_active_QMARK_.call(null)) {
    var items = hsnd.entity.each.call(null, "in-inventory");
    var item_count = cljs.core.count.call(null, items);
    var active_component = hsnd.systems.inventory.active_item_component.call(null);
    var active_item_index = hsnd.component.get.call(null, active_component, new cljs.core.Keyword(null, "value", "value", 305978217));
    var new_index = cljs.core.mod.call(null, active_item_index - 1 + change, item_count) + 1;
    var null_index = 0;
    var new_index__$1 = cljs.core._EQ_.call(null, item_count, 0) ? null_index : new_index;
    hsnd.systems.inventory.change_active_item_to.call(null, active_item_index, new_index__$1);
    return hsnd.component.set.call(null, active_component, new cljs.core.Keyword(null, "value", "value", 305978217), new_index__$1);
  } else {
    return null;
  }
};
hsnd.systems.inventory.inventory_left = function inventory_left() {
  return hsnd.systems.inventory.back_to_inventory.call(null);
};
hsnd.systems.inventory.inventory_right = function inventory_right() {
  return hsnd.systems.inventory.show_active_item_details.call(null);
};
hsnd.systems.inventory.inventory_up = function inventory_up() {
  return hsnd.systems.inventory.change_active_item.call(null, -1);
};
hsnd.systems.inventory.inventory_down = function inventory_down() {
  return hsnd.systems.inventory.change_active_item.call(null, 1);
};
hsnd.systems.inventory.get_active_item = function get_active_item() {
  var active_item_index = hsnd.component.get.call(null, hsnd.systems.inventory.active_item_component.call(null), new cljs.core.Keyword(null, "value", "value", 305978217)) - 1;
  var items = cljs.core.vec.call(null, hsnd.entity.each.call(null, "in-inventory"));
  var active_item_QMARK_ = cljs.core.contains_QMARK_.call(null, items, active_item_index);
  if (active_item_QMARK_) {
    return items.call(null, active_item_index);
  } else {
    return null;
  }
};
hsnd.systems.inventory.item_representation = function item_representation(item) {
  var name = item.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177));
  var tile = hsnd.component.get.call(null, hsnd.entity.get.call(null, item, "tile"), new cljs.core.Keyword(null, "value", "value", 305978217));
  var equipped_QMARK_ = !(hsnd.entity.get.call(null, item, "equipped") == null);
  var representation = equipped_QMARK_ ? [cljs.core.str(tile), cljs.core.str(" "), cljs.core.str(name), cljs.core.str(" (equipped)")].join("") : [cljs.core.str(tile), cljs.core.str(" "), cljs.core.str(name)].join("");
  return representation;
};
hsnd.systems.inventory.stat_representation = function stat_representation(p__11085) {
  var vec__11087 = p__11085;
  var stat_name = cljs.core.nth.call(null, vec__11087, 0, null);
  var stat_effect = cljs.core.nth.call(null, vec__11087, 1, null);
  var effect = stat_effect > 0 ? [cljs.core.str("+"), cljs.core.str(stat_effect)].join("") : [cljs.core.str(stat_effect)].join("");
  return[cljs.core.str(effect), cljs.core.str(" "), cljs.core.str(cljs.core.name.call(null, stat_name))].join("");
};
hsnd.systems.inventory.draw_inventory_item = function draw_inventory_item(index, item) {
  return domina.set_text_BANG_.call(null, hsnd.systems.inventory.list_item_view.call(null, index + 1), hsnd.systems.inventory.item_representation.call(null, item));
};
hsnd.systems.inventory.draw_details_one_stat = function draw_details_one_stat(index, stat) {
  return domina.set_text_BANG_.call(null, hsnd.systems.inventory.list_stat_view.call(null, index + 1), hsnd.systems.inventory.stat_representation.call(null, stat));
};
hsnd.systems.inventory.draw_details_stats = function draw_details_stats(stats) {
  hsnd.systems.inventory.cleanup_stats_view.call(null, cljs.core.count.call(null, stats));
  return cljs.core.doall.call(null, cljs.core.map_indexed.call(null, hsnd.systems.inventory.draw_details_one_stat, stats));
};
hsnd.systems.inventory.draw_item_details = function draw_item_details() {
  var item = hsnd.systems.inventory.get_active_item.call(null);
  var item_QMARK_ = !(item == null);
  if (item_QMARK_) {
    var name = hsnd.systems.inventory.item_representation.call(null, item);
    var description = hsnd.component.get.call(null, hsnd.entity.get_with_defaults.call(null, item, "description", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), "No description"], null)), new cljs.core.Keyword(null, "value", "value", 305978217));
    var stats = hsnd.component.get_hash.call(null, hsnd.entity.get_with_defaults.call(null, item, "stats", cljs.core.PersistentArrayMap.EMPTY));
    domina.set_text_BANG_.call(null, hsnd.systems.inventory.details_name_view, name);
    domina.set_text_BANG_.call(null, hsnd.systems.inventory.details_description_view, description);
    return hsnd.systems.inventory.draw_details_stats.call(null, stats);
  } else {
    return null;
  }
};
hsnd.systems.inventory.update_player_busy = function update_player_busy(player) {
  var busy_component = hsnd.entity.get.call(null, player, "busy");
  var busy = hsnd.systems.inventory.inventory_active_QMARK_.call(null);
  return hsnd.component.set.call(null, busy_component, new cljs.core.Keyword(null, "value", "value", 305978217), busy);
};
hsnd.systems.inventory.under_player_feet_QMARK_ = function under_player_feet_QMARK_(player, item) {
  var player_position_component = hsnd.entity.get.call(null, player, "position");
  var player_position_QMARK_ = !(player_position_component == null);
  var item_position_component = hsnd.entity.get.call(null, item, "position");
  var item_position_QMARK_ = !(item_position_component == null);
  if (player_position_QMARK_ && item_position_QMARK_) {
    var player_position = hsnd.component.get_hash.call(null, player_position_component);
    var item_position = hsnd.component.get_hash.call(null, item_position_component);
    return cljs.core._EQ_.call(null, player_position, item_position);
  } else {
    return false;
  }
};
hsnd.systems.inventory.items_under_player_feet = function items_under_player_feet(player) {
  return cljs.core.filter.call(null, cljs.core.partial.call(null, hsnd.systems.inventory.under_player_feet_QMARK_, player), hsnd.entity.each.call(null, "item"));
};
hsnd.systems.inventory.pickup_item = function pickup_item(item) {
  hsnd.entity.remove.call(null, item, "position");
  hsnd.entity.add.call(null, item, "in-inventory", cljs.core.PersistentArrayMap.EMPTY);
  return hsnd.callback.emit.call(null, new cljs.core.Keyword(null, "log-message", "log-message", -1434597634), [cljs.core.str(hsnd.systems.inventory.item_representation.call(null, item)), cljs.core.str(" picked up")].join(""));
};
hsnd.systems.inventory.pickup_items = function pickup_items() {
  var player = cljs.core.first.call(null, hsnd.entity.each.call(null, "player"));
  var items = hsnd.systems.inventory.items_under_player_feet.call(null, player);
  return cljs.core.doall.call(null, cljs.core.map.call(null, hsnd.systems.inventory.pickup_item, items));
};
hsnd.systems.inventory.equipped_in_slot_for = function equipped_in_slot_for(item) {
  var map__11089 = hsnd.component.get_hash.call(null, hsnd.entity.get.call(null, item, "equippable"));
  var map__11089__$1 = cljs.core.seq_QMARK_.call(null, map__11089) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11089) : map__11089;
  var slot = cljs.core.get.call(null, map__11089__$1, new cljs.core.Keyword(null, "slot", "slot", 240229571));
  return[cljs.core.str("equipped-in-slot:"), cljs.core.str(slot)].join("");
};
hsnd.systems.inventory.de_equip = function de_equip(item) {
  hsnd.entity.remove.call(null, item, hsnd.systems.inventory.equipped_in_slot_for.call(null, item));
  hsnd.entity.remove.call(null, item, "equipped");
  return hsnd.callback.emit.call(null, new cljs.core.Keyword(null, "log-message", "log-message", -1434597634), [cljs.core.str(hsnd.systems.inventory.item_representation.call(null, item)), cljs.core.str(" unequipped")].join(""));
};
hsnd.systems.inventory.equip = function equip(item) {
  var equipped_in_slot = hsnd.systems.inventory.equipped_in_slot_for.call(null, item);
  hsnd.callback.emit.call(null, new cljs.core.Keyword(null, "log-message", "log-message", -1434597634), [cljs.core.str(hsnd.systems.inventory.item_representation.call(null, item)), cljs.core.str(" equipped")].join(""));
  hsnd.entity.each.call(null, equipped_in_slot, hsnd.systems.inventory.de_equip);
  hsnd.entity.add.call(null, item, "equipped", cljs.core.PersistentArrayMap.EMPTY);
  return hsnd.entity.add.call(null, item, equipped_in_slot, cljs.core.PersistentArrayMap.EMPTY);
};
hsnd.systems.inventory.equip_active_item = function equip_active_item() {
  var active_item = hsnd.systems.inventory.get_active_item.call(null);
  if (cljs.core.truth_(active_item)) {
    var equipped_QMARK_ = !(hsnd.entity.get.call(null, active_item, "equipped") == null);
    var equippable_QMARK_ = !(hsnd.entity.get.call(null, active_item, "equippable") == null);
    var action = equipped_QMARK_ ? hsnd.systems.inventory.de_equip : hsnd.systems.inventory.equip;
    if (equippable_QMARK_) {
      return action.call(null, active_item);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
hsnd.systems.inventory.drop_active_item = function drop_active_item() {
  if (hsnd.systems.inventory.inventory_active_QMARK_.call(null)) {
    var active_item = hsnd.systems.inventory.get_active_item.call(null);
    var player = cljs.core.first.call(null, hsnd.entity.each.call(null, "player"));
    var player_position = hsnd.component.get_hash.call(null, hsnd.entity.get.call(null, player, "position"));
    if (cljs.core.truth_(active_item)) {
      hsnd.entity.remove.call(null, active_item, "equipped");
      hsnd.entity.remove.call(null, active_item, "in-inventory");
      hsnd.entity.add.call(null, active_item, "position", player_position);
      return hsnd.callback.emit.call(null, new cljs.core.Keyword(null, "log-message", "log-message", -1434597634), [cljs.core.str(hsnd.systems.inventory.item_representation.call(null, active_item)), cljs.core.str(" dropped")].join(""));
    } else {
      return null;
    }
  } else {
    return null;
  }
};
hsnd.systems.inventory.bindings = new cljs.core.PersistentArrayMap(null, 8, [73, hsnd.systems.inventory.toggle_inventory_overlay, 37, hsnd.systems.inventory.inventory_left, 39, hsnd.systems.inventory.inventory_right, 38, hsnd.systems.inventory.inventory_up, 40, hsnd.systems.inventory.inventory_down, 188, hsnd.systems.inventory.pickup_items, 69, hsnd.systems.inventory.equip_active_item, 68, hsnd.systems.inventory.drop_active_item], null);
hsnd.systems.inventory.keyup = function keyup(key_code) {
  if (cljs.core.contains_QMARK_.call(null, hsnd.systems.inventory.bindings, key_code)) {
    return hsnd.systems.inventory.bindings.call(null, key_code).call(null);
  } else {
    return null;
  }
};
hsnd.systems.inventory.update = function update() {
  return hsnd.entity.each.call(null, "player", hsnd.systems.inventory.update_player_busy);
};
hsnd.systems.inventory.draw = function draw() {
  if (hsnd.systems.inventory.inventory_active_QMARK_.call(null)) {
    var items_11090 = hsnd.entity.each.call(null, "in-inventory");
    var item_count_11091 = cljs.core.count.call(null, items_11090);
    hsnd.systems.inventory.cleanup_list_view.call(null, item_count_11091);
    cljs.core.doall.call(null, cljs.core.map_indexed.call(null, hsnd.systems.inventory.draw_inventory_item, items_11090));
    if (hsnd.systems.inventory.details_active_QMARK_.call(null)) {
      return hsnd.systems.inventory.draw_item_details.call(null);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
hsnd.systems.inventory.system = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "init", "init", -1875481434), hsnd.systems.inventory.init, new cljs.core.Keyword(null, "draw", "draw", 1358331674), hsnd.systems.inventory.draw, new cljs.core.Keyword(null, "update", "update", 1045576396), hsnd.systems.inventory.update, new cljs.core.Keyword(null, "keydown", "keydown", -629268186), hsnd.systems.inventory.keydown, new cljs.core.Keyword(null, "keyup", "keyup", -794526927), hsnd.systems.inventory.keyup], 
null);
goog.provide("hsnd.systems.log");
goog.require("cljs.core");
goog.require("domina.xpath");
goog.require("domina");
goog.require("hsnd.entity");
goog.require("hsnd.component");
hsnd.systems.log.keydown = function keydown() {
  return null;
};
hsnd.systems.log.keyup = function keyup() {
  return null;
};
hsnd.systems.log.show_count = 15;
hsnd.systems.log.view_query = "//div[@id\x3d'message-log']";
hsnd.systems.log.view = domina.xpath.xpath.call(null, hsnd.systems.log.view_query);
hsnd.systems.log.message_view = function message_view(index) {
  return domina.xpath.xpath.call(null, hsnd.systems.log.view, [cljs.core.str("p["), cljs.core.str(index + 1), cljs.core.str("]")].join(""));
};
hsnd.systems.log.draw_message = function draw_message(index, message_component) {
  var map__10636 = hsnd.component.get_hash.call(null, message_component);
  var map__10636__$1 = cljs.core.seq_QMARK_.call(null, map__10636) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10636) : map__10636;
  var message = cljs.core.get.call(null, map__10636__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  return domina.set_text_BANG_.call(null, hsnd.systems.log.message_view.call(null, index), message);
};
hsnd.systems.log.rotate_logs = function rotate_logs() {
  return null;
};
hsnd.systems.log.init = function init() {
  domina.set_text_BANG_.call(null, hsnd.systems.log.view, "");
  return cljs.core.doall.call(null, cljs.core.repeatedly.call(null, hsnd.systems.log.show_count, function() {
    return domina.append_BANG_.call(null, hsnd.systems.log.view, "\x3cp\x3e\x3c/p\x3e");
  }));
};
hsnd.systems.log.update = function update() {
  return hsnd.systems.log.rotate_logs.call(null);
};
hsnd.systems.log.draw = function draw() {
  var messages = hsnd.component.by_name.call(null, "log-message");
  var hronologically = cljs.core.reverse.call(null, messages);
  var last_messages = cljs.core.take.call(null, hsnd.systems.log.show_count, hronologically);
  return cljs.core.doall.call(null, cljs.core.map_indexed.call(null, hsnd.systems.log.draw_message, last_messages));
};
hsnd.systems.log.log_message = function log_message(message) {
  var message_entity = hsnd.entity.new$.call(null, "a log message");
  return hsnd.entity.add.call(null, message_entity, "log-message", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), message], null));
};
hsnd.systems.log.system = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "init", "init", -1875481434), hsnd.systems.log.init, new cljs.core.Keyword(null, "draw", "draw", 1358331674), hsnd.systems.log.draw, new cljs.core.Keyword(null, "update", "update", 1045576396), hsnd.systems.log.update, new cljs.core.Keyword(null, "keydown", "keydown", -629268186), hsnd.systems.log.keydown, new cljs.core.Keyword(null, "keyup", "keyup", -794526927), hsnd.systems.log.keyup, new cljs.core.Keyword(null, 
"listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "log-message", "log-message", -1434597634), hsnd.systems.log.log_message], null)], null);
goog.provide("hsnd.systems.draw");
goog.require("cljs.core");
goog.require("hsnd.entity");
goog.require("hsnd.component");
goog.require("domina.xpath");
goog.require("domina");
hsnd.systems.draw.width = 40;
hsnd.systems.draw.height = 40;
hsnd.systems.draw.half_width = cljs.core.quot.call(null, hsnd.systems.draw.width, 2);
hsnd.systems.draw.half_height = cljs.core.quot.call(null, hsnd.systems.draw.height, 2);
hsnd.systems.draw.view_query = "//div[@id\x3d'main']";
hsnd.systems.draw.view = domina.xpath.xpath.call(null, hsnd.systems.draw.view_query);
hsnd.systems.draw.camera_boundaries = function camera_boundaries(camera_position) {
  var map__10642 = hsnd.component.get_hash.call(null, camera_position);
  var map__10642__$1 = cljs.core.seq_QMARK_.call(null, map__10642) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10642) : map__10642;
  var x = cljs.core.get.call(null, map__10642__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
  var y = cljs.core.get.call(null, map__10642__$1, new cljs.core.Keyword(null, "y", "y", -1757859776));
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [x - hsnd.systems.draw.half_width, x + hsnd.systems.draw.half_width, y - hsnd.systems.draw.half_height, y + hsnd.systems.draw.half_height], null);
};
hsnd.systems.draw.in_boundaries_QMARK_ = function in_boundaries_QMARK_(p__10643, position) {
  var vec__10646 = p__10643;
  var low_x = cljs.core.nth.call(null, vec__10646, 0, null);
  var high_x = cljs.core.nth.call(null, vec__10646, 1, null);
  var low_y = cljs.core.nth.call(null, vec__10646, 2, null);
  var high_y = cljs.core.nth.call(null, vec__10646, 3, null);
  var map__10647 = hsnd.component.get_hash.call(null, position);
  var map__10647__$1 = cljs.core.seq_QMARK_.call(null, map__10647) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10647) : map__10647;
  var x = cljs.core.get.call(null, map__10647__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
  var y = cljs.core.get.call(null, map__10647__$1, new cljs.core.Keyword(null, "y", "y", -1757859776));
  return x > low_x && x <= high_x && y > low_y && y <= high_y;
};
hsnd.systems.draw.relative_position = function relative_position(camera_position, position) {
  var map__10650 = hsnd.component.get_hash.call(null, position);
  var map__10650__$1 = cljs.core.seq_QMARK_.call(null, map__10650) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10650) : map__10650;
  var x = cljs.core.get.call(null, map__10650__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
  var y = cljs.core.get.call(null, map__10650__$1, new cljs.core.Keyword(null, "y", "y", -1757859776));
  var map__10651 = hsnd.component.get_hash.call(null, camera_position);
  var map__10651__$1 = cljs.core.seq_QMARK_.call(null, map__10651) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10651) : map__10651;
  var cx = cljs.core.get.call(null, map__10651__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
  var cy = cljs.core.get.call(null, map__10651__$1, new cljs.core.Keyword(null, "y", "y", -1757859776));
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), x - cx + hsnd.systems.draw.half_width, new cljs.core.Keyword(null, "y", "y", -1757859776), y - cy + hsnd.systems.draw.half_height], null);
};
hsnd.systems.draw.get_row = function get_row(row) {
  return domina.xpath.xpath.call(null, hsnd.systems.draw.view, [cljs.core.str("p["), cljs.core.str(row), cljs.core.str("]")].join(""));
};
hsnd.systems.draw.init_view = function init_view() {
  domina.set_text_BANG_.call(null, hsnd.systems.draw.view, "");
  var blank = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, hsnd.systems.draw.width, "."));
  var row = 1;
  while (true) {
    if (row <= hsnd.systems.draw.height) {
      domina.append_BANG_.call(null, hsnd.systems.draw.view, [cljs.core.str("\x3cp\x3e"), cljs.core.str(blank), cljs.core.str("\x3c/p\x3e")].join(""));
      var G__10652 = row + 1;
      row = G__10652;
      continue;
    } else {
      return null;
    }
    break;
  }
};
hsnd.systems.draw.draw_tile = function draw_tile(p__10653, p__10654, tiles) {
  var map__10657 = p__10653;
  var map__10657__$1 = cljs.core.seq_QMARK_.call(null, map__10657) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10657) : map__10657;
  var x = cljs.core.get.call(null, map__10657__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
  var y = cljs.core.get.call(null, map__10657__$1, new cljs.core.Keyword(null, "y", "y", -1757859776));
  var map__10658 = p__10654;
  var map__10658__$1 = cljs.core.seq_QMARK_.call(null, map__10658) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10658) : map__10658;
  var value = cljs.core.get.call(null, map__10658__$1, new cljs.core.Keyword(null, "value", "value", 305978217));
  var row = cljs.core.assoc_BANG_.call(null, tiles.call(null, y), x, value);
  return cljs.core.assoc_BANG_.call(null, tiles, y, row);
};
hsnd.systems.draw.draw_empty_column = function draw_empty_column(x, _tiles) {
  var y = 1;
  var tiles = _tiles;
  while (true) {
    if (y <= hsnd.systems.draw.height) {
      var G__10659 = y + 1;
      var G__10660 = hsnd.systems.draw.draw_tile.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), x, new cljs.core.Keyword(null, "y", "y", -1757859776), y], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "value", "value", 305978217), "."], null), tiles);
      y = G__10659;
      tiles = G__10660;
      continue;
    } else {
      return tiles;
    }
    break;
  }
};
hsnd.systems.draw.draw_empty = function draw_empty(_tiles) {
  var x = 1;
  var tiles = _tiles;
  while (true) {
    if (x <= hsnd.systems.draw.width) {
      var G__10661 = x + 1;
      var G__10662 = hsnd.systems.draw.draw_empty_column.call(null, x, tiles);
      x = G__10661;
      tiles = G__10662;
      continue;
    } else {
      return tiles;
    }
    break;
  }
};
hsnd.systems.draw.draw_entity = function draw_entity(camera, entity, tiles) {
  var tile = hsnd.entity.get.call(null, entity, "tile");
  var position = hsnd.entity.get.call(null, entity, "position");
  var camera_position = hsnd.entity.get.call(null, camera, "position");
  var camera_position_of_death = hsnd.entity.get.call(null, camera, "position-of-death");
  var camera_position__$1 = camera_position == null ? camera_position_of_death : camera_position;
  var boundaries = hsnd.systems.draw.camera_boundaries.call(null, camera_position__$1);
  if (!(position == null) && hsnd.systems.draw.in_boundaries_QMARK_.call(null, boundaries, position)) {
    return hsnd.systems.draw.draw_tile.call(null, hsnd.systems.draw.relative_position.call(null, camera_position__$1, position), hsnd.component.get_hash.call(null, tile), tiles);
  } else {
    return tiles;
  }
};
hsnd.systems.draw.empty_tiles = function empty_tiles() {
  return cljs.core.transient$.call(null, cljs.core.vec.call(null, cljs.core.repeatedly.call(null, hsnd.systems.draw.height + 1, function() {
    return cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  })));
};
hsnd.systems.draw.draw_tile_row = function draw_tile_row(y, row) {
  var content = cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__10663_SHARP_) {
    return row.call(null, p1__10663_SHARP_);
  }, cljs.core.sort.call(null, cljs.core.keys.call(null, row))));
  return domina.set_text_BANG_.call(null, hsnd.systems.draw.get_row.call(null, y), content);
};
hsnd.systems.draw.draw_tiles = function draw_tiles(transient_tiles) {
  var tiles = cljs.core.persistent_BANG_.call(null, transient_tiles);
  var row = 1;
  while (true) {
    if (row <= hsnd.systems.draw.height) {
      hsnd.systems.draw.draw_tile_row.call(null, row, cljs.core.persistent_BANG_.call(null, tiles.call(null, row)));
      var G__10664 = row + 1;
      row = G__10664;
      continue;
    } else {
      return null;
    }
    break;
  }
};
hsnd.systems.draw.draw_step_for_passable = function draw_step_for_passable(camera, tiles, entity) {
  var passable_QMARK_ = !(hsnd.entity.get.call(null, entity, "passable") == null);
  if (passable_QMARK_) {
    return hsnd.systems.draw.draw_entity.call(null, camera, entity, tiles);
  } else {
    return tiles;
  }
};
hsnd.systems.draw.draw_step_for_not_passable = function draw_step_for_not_passable(camera, tiles, entity) {
  var not_passable_QMARK_ = hsnd.entity.get.call(null, entity, "passable") == null;
  if (not_passable_QMARK_) {
    return hsnd.systems.draw.draw_entity.call(null, camera, entity, tiles);
  } else {
    return tiles;
  }
};
hsnd.systems.draw.init = function init() {
  return hsnd.systems.draw.init_view.call(null);
};
hsnd.systems.draw.update = function update() {
  return null;
};
hsnd.systems.draw.keydown = function keydown(key_code) {
  return null;
};
hsnd.systems.draw.keyup = function keyup() {
  return null;
};
hsnd.systems.draw.draw = function draw() {
  var tiles = hsnd.systems.draw.draw_empty.call(null, hsnd.systems.draw.empty_tiles.call(null));
  var camera = hsnd.component.entity.call(null, cljs.core.first.call(null, cljs.core.filter.call(null, function(tiles) {
    return function(p1__10665_SHARP_) {
      return cljs.core._EQ_.call(null, true, hsnd.component.get.call(null, p1__10665_SHARP_, new cljs.core.Keyword(null, "active", "active", 1895962068)));
    };
  }(tiles), hsnd.component.by_name.call(null, "camera"))));
  var tiles_with_passable = hsnd.entity.reduce.call(null, "tile", cljs.core.partial.call(null, hsnd.systems.draw.draw_step_for_passable, camera), tiles);
  var final_tiles = hsnd.entity.reduce.call(null, "tile", cljs.core.partial.call(null, hsnd.systems.draw.draw_step_for_not_passable, camera), tiles);
  return hsnd.systems.draw.draw_tiles.call(null, final_tiles);
};
hsnd.systems.draw.system = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "init", "init", -1875481434), hsnd.systems.draw.init, new cljs.core.Keyword(null, "draw", "draw", 1358331674), hsnd.systems.draw.draw, new cljs.core.Keyword(null, "update", "update", 1045576396), hsnd.systems.draw.update, new cljs.core.Keyword(null, "keydown", "keydown", -629268186), hsnd.systems.draw.keydown, new cljs.core.Keyword(null, "keyup", "keyup", -794526927), hsnd.systems.draw.keyup], null);
goog.provide("hsnd.systems.loot");
goog.require("cljs.core");
goog.require("hsnd.component");
goog.require("hsnd.entity");
hsnd.systems.loot.init = function init() {
  return null;
};
hsnd.systems.loot.draw = function draw() {
  return null;
};
hsnd.systems.loot.keydown = function keydown() {
  return null;
};
hsnd.systems.loot.keyup = function keyup() {
  return null;
};
hsnd.systems.loot.update = function update() {
  return null;
};
hsnd.systems.loot.add_component_to_drop = function add_component_to_drop(drop, p__10627) {
  var vec__10629 = p__10627;
  var name = cljs.core.nth.call(null, vec__10629, 0, null);
  var hash = cljs.core.nth.call(null, vec__10629, 1, null);
  return hsnd.entity.add.call(null, drop, name, hash);
};
hsnd.systems.loot.handle_one_drop = function handle_one_drop(position, dropped_by, p__10630) {
  var vec__10632 = p__10630;
  var name = cljs.core.nth.call(null, vec__10632, 0, null);
  var components = cljs.core.nth.call(null, vec__10632, 1, null);
  var drop = hsnd.entity.new$.call(null, name);
  hsnd.entity.add.call(null, drop, "position", position);
  hsnd.entity.add.call(null, drop, "dropped-by", dropped_by);
  return cljs.core.doall.call(null, cljs.core.map.call(null, cljs.core.partial.call(null, hsnd.systems.loot.add_component_to_drop, drop), components));
};
hsnd.systems.loot.handle_drop_loot = function handle_drop_loot(position, loot, dropped_by) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, cljs.core.partial.call(null, hsnd.systems.loot.handle_one_drop, position, dropped_by), loot));
};
hsnd.systems.loot.system = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "init", "init", -1875481434), hsnd.systems.loot.init, new cljs.core.Keyword(null, "draw", "draw", 1358331674), hsnd.systems.loot.draw, new cljs.core.Keyword(null, "update", "update", 1045576396), hsnd.systems.loot.update, new cljs.core.Keyword(null, "keydown", "keydown", -629268186), hsnd.systems.loot.keydown, new cljs.core.Keyword(null, "keyup", "keyup", -794526927), hsnd.systems.loot.keyup, new cljs.core.Keyword(null, 
"listeners", "listeners", 394544445), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "drop-loot", "drop-loot", -391678639), hsnd.systems.loot.handle_drop_loot], null)], null);
goog.provide("hsnd.systems.death");
goog.require("cljs.core");
goog.require("hsnd.callback");
goog.require("hsnd.entity");
goog.require("hsnd.component");
hsnd.systems.death.init = function init() {
  return null;
};
hsnd.systems.death.draw = function draw() {
  return null;
};
hsnd.systems.death.keydown = function keydown() {
  return null;
};
hsnd.systems.death.keyup = function keyup() {
  return null;
};
hsnd.systems.death.handle_loot = function handle_loot(entity) {
  var position = hsnd.entity.get.call(null, entity, "position");
  var position_QMARK_ = !(position == null);
  var loot = hsnd.entity.get.call(null, entity, "loot");
  var loot_QMARK_ = !(loot == null);
  if (loot_QMARK_ && position_QMARK_) {
    return hsnd.callback.emit.call(null, new cljs.core.Keyword(null, "drop-loot", "drop-loot", -391678639), hsnd.component.get_hash.call(null, position), hsnd.component.get.call(null, loot, new cljs.core.Keyword(null, "value", "value", 305978217)), entity);
  } else {
    return null;
  }
};
hsnd.systems.death.log_death = function log_death(entity) {
  return hsnd.callback.emit.call(null, new cljs.core.Keyword(null, "log-message", "log-message", -1434597634), [cljs.core.str(entity.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177))), cljs.core.str(" dies")].join(""));
};
hsnd.systems.death.handle_death = function handle_death(entity) {
  var health_component = hsnd.entity.get.call(null, entity, "health");
  var health = hsnd.component.get.call(null, health_component, new cljs.core.Keyword(null, "value", "value", 305978217));
  var dead_QMARK_ = health <= 0;
  var not_handled_death_QMARK_ = hsnd.entity.get.call(null, entity, "dead") == null;
  if (dead_QMARK_ && not_handled_death_QMARK_) {
    var position_hash = hsnd.component.get_hash.call(null, hsnd.entity.get.call(null, entity, "position"));
    hsnd.systems.death.handle_loot.call(null, entity);
    hsnd.entity.remove.call(null, entity, "position");
    hsnd.entity.remove.call(null, entity, "next-position");
    hsnd.entity.add.call(null, entity, "dead", cljs.core.PersistentArrayMap.EMPTY);
    hsnd.entity.add.call(null, entity, "position-of-death", position_hash);
    return hsnd.systems.death.log_death.call(null, entity);
  } else {
    return null;
  }
};
hsnd.systems.death.update = function update() {
  return hsnd.entity.each.call(null, "health", hsnd.systems.death.handle_death);
};
hsnd.systems.death.system = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "init", "init", -1875481434), hsnd.systems.death.init, new cljs.core.Keyword(null, "draw", "draw", 1358331674), hsnd.systems.death.draw, new cljs.core.Keyword(null, "update", "update", 1045576396), hsnd.systems.death.update, new cljs.core.Keyword(null, "keydown", "keydown", -629268186), hsnd.systems.death.keydown, new cljs.core.Keyword(null, "keyup", "keyup", -794526927), hsnd.systems.death.keyup], 
null);
goog.provide("domina.events");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.object");
goog.require("domina");
domina.events.Event = function() {
  var obj11394 = {};
  return obj11394;
}();
domina.events.prevent_default = function prevent_default(evt) {
  if (function() {
    var and__8771__auto__ = evt;
    if (and__8771__auto__) {
      return evt.domina$events$Event$prevent_default$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return evt.domina$events$Event$prevent_default$arity$1(evt);
  } else {
    var x__9427__auto__ = evt == null ? null : evt;
    return function() {
      var or__8783__auto__ = domina.events.prevent_default[goog.typeOf(x__9427__auto__)];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = domina.events.prevent_default["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.prevent-default", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.stop_propagation = function stop_propagation(evt) {
  if (function() {
    var and__8771__auto__ = evt;
    if (and__8771__auto__) {
      return evt.domina$events$Event$stop_propagation$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return evt.domina$events$Event$stop_propagation$arity$1(evt);
  } else {
    var x__9427__auto__ = evt == null ? null : evt;
    return function() {
      var or__8783__auto__ = domina.events.stop_propagation[goog.typeOf(x__9427__auto__)];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = domina.events.stop_propagation["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.stop-propagation", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.target = function target(evt) {
  if (function() {
    var and__8771__auto__ = evt;
    if (and__8771__auto__) {
      return evt.domina$events$Event$target$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return evt.domina$events$Event$target$arity$1(evt);
  } else {
    var x__9427__auto__ = evt == null ? null : evt;
    return function() {
      var or__8783__auto__ = domina.events.target[goog.typeOf(x__9427__auto__)];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = domina.events.target["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.target", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.current_target = function current_target(evt) {
  if (function() {
    var and__8771__auto__ = evt;
    if (and__8771__auto__) {
      return evt.domina$events$Event$current_target$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return evt.domina$events$Event$current_target$arity$1(evt);
  } else {
    var x__9427__auto__ = evt == null ? null : evt;
    return function() {
      var or__8783__auto__ = domina.events.current_target[goog.typeOf(x__9427__auto__)];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = domina.events.current_target["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.current-target", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.event_type = function event_type(evt) {
  if (function() {
    var and__8771__auto__ = evt;
    if (and__8771__auto__) {
      return evt.domina$events$Event$event_type$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return evt.domina$events$Event$event_type$arity$1(evt);
  } else {
    var x__9427__auto__ = evt == null ? null : evt;
    return function() {
      var or__8783__auto__ = domina.events.event_type[goog.typeOf(x__9427__auto__)];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = domina.events.event_type["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.event-type", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.raw_event = function raw_event(evt) {
  if (function() {
    var and__8771__auto__ = evt;
    if (and__8771__auto__) {
      return evt.domina$events$Event$raw_event$arity$1;
    } else {
      return and__8771__auto__;
    }
  }()) {
    return evt.domina$events$Event$raw_event$arity$1(evt);
  } else {
    var x__9427__auto__ = evt == null ? null : evt;
    return function() {
      var or__8783__auto__ = domina.events.raw_event[goog.typeOf(x__9427__auto__)];
      if (or__8783__auto__) {
        return or__8783__auto__;
      } else {
        var or__8783__auto____$1 = domina.events.raw_event["_"];
        if (or__8783__auto____$1) {
          return or__8783__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Event.raw-event", evt);
        }
      }
    }().call(null, evt);
  }
};
domina.events.root_element = window.document.documentElement;
domina.events.create_listener_function = function create_listener_function(f) {
  return function(evt) {
    f.call(null, function() {
      if (typeof domina.events.t11398 !== "undefined") {
      } else {
        domina.events.t11398 = function(evt, f, create_listener_function, meta11399) {
          this.evt = evt;
          this.f = f;
          this.create_listener_function = create_listener_function;
          this.meta11399 = meta11399;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393472;
        };
        domina.events.t11398.prototype.cljs$core$ILookup$_lookup$arity$2 = function(o, k) {
          var self__ = this;
          var o__$1 = this;
          var temp__4124__auto__ = self__.evt[k];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var val = temp__4124__auto__;
            return val;
          } else {
            return self__.evt[cljs.core.name.call(null, k)];
          }
        };
        domina.events.t11398.prototype.cljs$core$ILookup$_lookup$arity$3 = function(o, k, not_found) {
          var self__ = this;
          var o__$1 = this;
          var or__8783__auto__ = cljs.core._lookup.call(null, o__$1, k);
          if (cljs.core.truth_(or__8783__auto__)) {
            return or__8783__auto__;
          } else {
            return not_found;
          }
        };
        domina.events.t11398.prototype.domina$events$Event$ = true;
        domina.events.t11398.prototype.domina$events$Event$prevent_default$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.preventDefault();
        };
        domina.events.t11398.prototype.domina$events$Event$stop_propagation$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.stopPropagation();
        };
        domina.events.t11398.prototype.domina$events$Event$target$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.target;
        };
        domina.events.t11398.prototype.domina$events$Event$current_target$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.currentTarget;
        };
        domina.events.t11398.prototype.domina$events$Event$event_type$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt.type;
        };
        domina.events.t11398.prototype.domina$events$Event$raw_event$arity$1 = function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.evt;
        };
        domina.events.t11398.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11400) {
          var self__ = this;
          var _11400__$1 = this;
          return self__.meta11399;
        };
        domina.events.t11398.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11400, meta11399__$1) {
          var self__ = this;
          var _11400__$1 = this;
          return new domina.events.t11398(self__.evt, self__.f, self__.create_listener_function, meta11399__$1);
        };
        domina.events.t11398.cljs$lang$type = true;
        domina.events.t11398.cljs$lang$ctorStr = "domina.events/t11398";
        domina.events.t11398.cljs$lang$ctorPrWriter = function(this__9370__auto__, writer__9371__auto__, opt__9372__auto__) {
          return cljs.core._write.call(null, writer__9371__auto__, "domina.events/t11398");
        };
        domina.events.__GT_t11398 = function __GT_t11398(evt__$1, f__$1, create_listener_function__$1, meta11399) {
          return new domina.events.t11398(evt__$1, f__$1, create_listener_function__$1, meta11399);
        };
      }
      return new domina.events.t11398(evt, f, create_listener_function, cljs.core.PersistentArrayMap.EMPTY);
    }());
    return true;
  };
};
domina.events.listen_internal_BANG_ = function listen_internal_BANG_(content, type, listener, capture, once) {
  var f = domina.events.create_listener_function.call(null, listener);
  var t = cljs.core.name.call(null, type);
  return cljs.core.doall.call(null, function() {
    var iter__9539__auto__ = function(f, t) {
      return function iter__11405(s__11406) {
        return new cljs.core.LazySeq(null, function(f, t) {
          return function() {
            var s__11406__$1 = s__11406;
            while (true) {
              var temp__4126__auto__ = cljs.core.seq.call(null, s__11406__$1);
              if (temp__4126__auto__) {
                var s__11406__$2 = temp__4126__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__11406__$2)) {
                  var c__9537__auto__ = cljs.core.chunk_first.call(null, s__11406__$2);
                  var size__9538__auto__ = cljs.core.count.call(null, c__9537__auto__);
                  var b__11408 = cljs.core.chunk_buffer.call(null, size__9538__auto__);
                  if (function() {
                    var i__11407 = 0;
                    while (true) {
                      if (i__11407 < size__9538__auto__) {
                        var node = cljs.core._nth.call(null, c__9537__auto__, i__11407);
                        cljs.core.chunk_append.call(null, b__11408, cljs.core.truth_(once) ? goog.events.listenOnce(node, t, f, capture) : goog.events.listen(node, t, f, capture));
                        var G__11409 = i__11407 + 1;
                        i__11407 = G__11409;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11408), iter__11405.call(null, cljs.core.chunk_rest.call(null, s__11406__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11408), null);
                  }
                } else {
                  var node = cljs.core.first.call(null, s__11406__$2);
                  return cljs.core.cons.call(null, cljs.core.truth_(once) ? goog.events.listenOnce(node, t, f, capture) : goog.events.listen(node, t, f, capture), iter__11405.call(null, cljs.core.rest.call(null, s__11406__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(f, t), null, null);
      };
    }(f, t);
    return iter__9539__auto__.call(null, domina.nodes.call(null, content));
  }());
};
domina.events.listen_BANG_ = function() {
  var listen_BANG_ = null;
  var listen_BANG___2 = function(type, listener) {
    return listen_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var listen_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, false);
  };
  listen_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_BANG___2.call(this, content, type);
      case 3:
        return listen_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_BANG_.cljs$core$IFn$_invoke$arity$2 = listen_BANG___2;
  listen_BANG_.cljs$core$IFn$_invoke$arity$3 = listen_BANG___3;
  return listen_BANG_;
}();
domina.events.capture_BANG_ = function() {
  var capture_BANG_ = null;
  var capture_BANG___2 = function(type, listener) {
    return capture_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var capture_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, false);
  };
  capture_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_BANG___2.call(this, content, type);
      case 3:
        return capture_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  capture_BANG_.cljs$core$IFn$_invoke$arity$2 = capture_BANG___2;
  capture_BANG_.cljs$core$IFn$_invoke$arity$3 = capture_BANG___3;
  return capture_BANG_;
}();
domina.events.listen_once_BANG_ = function() {
  var listen_once_BANG_ = null;
  var listen_once_BANG___2 = function(type, listener) {
    return listen_once_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var listen_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, false, true);
  };
  listen_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return listen_once_BANG___2.call(this, content, type);
      case 3:
        return listen_once_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$2 = listen_once_BANG___2;
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$3 = listen_once_BANG___3;
  return listen_once_BANG_;
}();
domina.events.capture_once_BANG_ = function() {
  var capture_once_BANG_ = null;
  var capture_once_BANG___2 = function(type, listener) {
    return capture_once_BANG_.call(null, domina.events.root_element, type, listener);
  };
  var capture_once_BANG___3 = function(content, type, listener) {
    return domina.events.listen_internal_BANG_.call(null, content, type, listener, true, true);
  };
  capture_once_BANG_ = function(content, type, listener) {
    switch(arguments.length) {
      case 2:
        return capture_once_BANG___2.call(this, content, type);
      case 3:
        return capture_once_BANG___3.call(this, content, type, listener);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  capture_once_BANG_.cljs$core$IFn$_invoke$arity$2 = capture_once_BANG___2;
  capture_once_BANG_.cljs$core$IFn$_invoke$arity$3 = capture_once_BANG___3;
  return capture_once_BANG_;
}();
domina.events.unlisten_BANG_ = function() {
  var unlisten_BANG_ = null;
  var unlisten_BANG___0 = function() {
    return unlisten_BANG_.call(null, domina.events.root_element);
  };
  var unlisten_BANG___1 = function(content) {
    var seq__11418 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__11419 = null;
    var count__11420 = 0;
    var i__11421 = 0;
    while (true) {
      if (i__11421 < count__11420) {
        var node = cljs.core._nth.call(null, chunk__11419, i__11421);
        goog.events.removeAll(node);
        var G__11426 = seq__11418;
        var G__11427 = chunk__11419;
        var G__11428 = count__11420;
        var G__11429 = i__11421 + 1;
        seq__11418 = G__11426;
        chunk__11419 = G__11427;
        count__11420 = G__11428;
        i__11421 = G__11429;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__11418);
        if (temp__4126__auto__) {
          var seq__11418__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__11418__$1)) {
            var c__9570__auto__ = cljs.core.chunk_first.call(null, seq__11418__$1);
            var G__11430 = cljs.core.chunk_rest.call(null, seq__11418__$1);
            var G__11431 = c__9570__auto__;
            var G__11432 = cljs.core.count.call(null, c__9570__auto__);
            var G__11433 = 0;
            seq__11418 = G__11430;
            chunk__11419 = G__11431;
            count__11420 = G__11432;
            i__11421 = G__11433;
            continue;
          } else {
            var node = cljs.core.first.call(null, seq__11418__$1);
            goog.events.removeAll(node);
            var G__11434 = cljs.core.next.call(null, seq__11418__$1);
            var G__11435 = null;
            var G__11436 = 0;
            var G__11437 = 0;
            seq__11418 = G__11434;
            chunk__11419 = G__11435;
            count__11420 = G__11436;
            i__11421 = G__11437;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var unlisten_BANG___2 = function(content, type) {
    var type__$1 = cljs.core.name.call(null, type);
    var seq__11422 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    var chunk__11423 = null;
    var count__11424 = 0;
    var i__11425 = 0;
    while (true) {
      if (i__11425 < count__11424) {
        var node = cljs.core._nth.call(null, chunk__11423, i__11425);
        goog.events.removeAll(node, type__$1);
        var G__11438 = seq__11422;
        var G__11439 = chunk__11423;
        var G__11440 = count__11424;
        var G__11441 = i__11425 + 1;
        seq__11422 = G__11438;
        chunk__11423 = G__11439;
        count__11424 = G__11440;
        i__11425 = G__11441;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__11422);
        if (temp__4126__auto__) {
          var seq__11422__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__11422__$1)) {
            var c__9570__auto__ = cljs.core.chunk_first.call(null, seq__11422__$1);
            var G__11442 = cljs.core.chunk_rest.call(null, seq__11422__$1);
            var G__11443 = c__9570__auto__;
            var G__11444 = cljs.core.count.call(null, c__9570__auto__);
            var G__11445 = 0;
            seq__11422 = G__11442;
            chunk__11423 = G__11443;
            count__11424 = G__11444;
            i__11425 = G__11445;
            continue;
          } else {
            var node = cljs.core.first.call(null, seq__11422__$1);
            goog.events.removeAll(node, type__$1);
            var G__11446 = cljs.core.next.call(null, seq__11422__$1);
            var G__11447 = null;
            var G__11448 = 0;
            var G__11449 = 0;
            seq__11422 = G__11446;
            chunk__11423 = G__11447;
            count__11424 = G__11448;
            i__11425 = G__11449;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  unlisten_BANG_ = function(content, type) {
    switch(arguments.length) {
      case 0:
        return unlisten_BANG___0.call(this);
      case 1:
        return unlisten_BANG___1.call(this, content);
      case 2:
        return unlisten_BANG___2.call(this, content, type);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$0 = unlisten_BANG___0;
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$1 = unlisten_BANG___1;
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$2 = unlisten_BANG___2;
  return unlisten_BANG_;
}();
domina.events.ancestor_nodes = function() {
  var ancestor_nodes = null;
  var ancestor_nodes__1 = function(n) {
    return ancestor_nodes.call(null, n, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [n], null));
  };
  var ancestor_nodes__2 = function(n, so_far) {
    while (true) {
      var temp__4124__auto__ = n.parentNode;
      if (cljs.core.truth_(temp__4124__auto__)) {
        var parent = temp__4124__auto__;
        var G__11450 = parent;
        var G__11451 = cljs.core.cons.call(null, parent, so_far);
        n = G__11450;
        so_far = G__11451;
        continue;
      } else {
        return so_far;
      }
      break;
    }
  };
  ancestor_nodes = function(n, so_far) {
    switch(arguments.length) {
      case 1:
        return ancestor_nodes__1.call(this, n);
      case 2:
        return ancestor_nodes__2.call(this, n, so_far);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestor_nodes.cljs$core$IFn$_invoke$arity$1 = ancestor_nodes__1;
  ancestor_nodes.cljs$core$IFn$_invoke$arity$2 = ancestor_nodes__2;
  return ancestor_nodes;
}();
domina.events.dispatch_browser_BANG_ = function dispatch_browser_BANG_(source, evt) {
  evt.target = domina.single_node.call(null, source);
  var ancestors = domina.events.ancestor_nodes.call(null, domina.single_node.call(null, source));
  var seq__11460_11468 = cljs.core.seq.call(null, ancestors);
  var chunk__11461_11469 = null;
  var count__11462_11470 = 0;
  var i__11463_11471 = 0;
  while (true) {
    if (i__11463_11471 < count__11462_11470) {
      var n_11472 = cljs.core._nth.call(null, chunk__11461_11469, i__11463_11471);
      if (cljs.core.truth_(evt.propagationStopped_)) {
      } else {
        evt.currentTarget = n_11472;
        goog.events.fireListeners(n_11472, evt.type, true, evt);
      }
      var G__11473 = seq__11460_11468;
      var G__11474 = chunk__11461_11469;
      var G__11475 = count__11462_11470;
      var G__11476 = i__11463_11471 + 1;
      seq__11460_11468 = G__11473;
      chunk__11461_11469 = G__11474;
      count__11462_11470 = G__11475;
      i__11463_11471 = G__11476;
      continue;
    } else {
      var temp__4126__auto___11477 = cljs.core.seq.call(null, seq__11460_11468);
      if (temp__4126__auto___11477) {
        var seq__11460_11478__$1 = temp__4126__auto___11477;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11460_11478__$1)) {
          var c__9570__auto___11479 = cljs.core.chunk_first.call(null, seq__11460_11478__$1);
          var G__11480 = cljs.core.chunk_rest.call(null, seq__11460_11478__$1);
          var G__11481 = c__9570__auto___11479;
          var G__11482 = cljs.core.count.call(null, c__9570__auto___11479);
          var G__11483 = 0;
          seq__11460_11468 = G__11480;
          chunk__11461_11469 = G__11481;
          count__11462_11470 = G__11482;
          i__11463_11471 = G__11483;
          continue;
        } else {
          var n_11484 = cljs.core.first.call(null, seq__11460_11478__$1);
          if (cljs.core.truth_(evt.propagationStopped_)) {
          } else {
            evt.currentTarget = n_11484;
            goog.events.fireListeners(n_11484, evt.type, true, evt);
          }
          var G__11485 = cljs.core.next.call(null, seq__11460_11478__$1);
          var G__11486 = null;
          var G__11487 = 0;
          var G__11488 = 0;
          seq__11460_11468 = G__11485;
          chunk__11461_11469 = G__11486;
          count__11462_11470 = G__11487;
          i__11463_11471 = G__11488;
          continue;
        }
      } else {
      }
    }
    break;
  }
  var seq__11464_11489 = cljs.core.seq.call(null, cljs.core.reverse.call(null, ancestors));
  var chunk__11465_11490 = null;
  var count__11466_11491 = 0;
  var i__11467_11492 = 0;
  while (true) {
    if (i__11467_11492 < count__11466_11491) {
      var n_11493 = cljs.core._nth.call(null, chunk__11465_11490, i__11467_11492);
      if (cljs.core.truth_(evt.propagationStopped_)) {
      } else {
        evt.currentTarget = n_11493;
        goog.events.fireListeners(n_11493, evt.type, false, evt);
      }
      var G__11494 = seq__11464_11489;
      var G__11495 = chunk__11465_11490;
      var G__11496 = count__11466_11491;
      var G__11497 = i__11467_11492 + 1;
      seq__11464_11489 = G__11494;
      chunk__11465_11490 = G__11495;
      count__11466_11491 = G__11496;
      i__11467_11492 = G__11497;
      continue;
    } else {
      var temp__4126__auto___11498 = cljs.core.seq.call(null, seq__11464_11489);
      if (temp__4126__auto___11498) {
        var seq__11464_11499__$1 = temp__4126__auto___11498;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11464_11499__$1)) {
          var c__9570__auto___11500 = cljs.core.chunk_first.call(null, seq__11464_11499__$1);
          var G__11501 = cljs.core.chunk_rest.call(null, seq__11464_11499__$1);
          var G__11502 = c__9570__auto___11500;
          var G__11503 = cljs.core.count.call(null, c__9570__auto___11500);
          var G__11504 = 0;
          seq__11464_11489 = G__11501;
          chunk__11465_11490 = G__11502;
          count__11466_11491 = G__11503;
          i__11467_11492 = G__11504;
          continue;
        } else {
          var n_11505 = cljs.core.first.call(null, seq__11464_11499__$1);
          if (cljs.core.truth_(evt.propagationStopped_)) {
          } else {
            evt.currentTarget = n_11505;
            goog.events.fireListeners(n_11505, evt.type, false, evt);
          }
          var G__11506 = cljs.core.next.call(null, seq__11464_11499__$1);
          var G__11507 = null;
          var G__11508 = 0;
          var G__11509 = 0;
          seq__11464_11489 = G__11506;
          chunk__11465_11490 = G__11507;
          count__11466_11491 = G__11508;
          i__11467_11492 = G__11509;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return evt.returnValue_;
};
domina.events.dispatch_event_target_BANG_ = function dispatch_event_target_BANG_(source, evt) {
  return goog.events.dispatchEvent(source, evt);
};
domina.events.is_event_target_QMARK_ = function is_event_target_QMARK_(o) {
  var and__8771__auto__ = o.getParentEventTarget;
  if (cljs.core.truth_(and__8771__auto__)) {
    return o.dispatchEvent;
  } else {
    return and__8771__auto__;
  }
};
domina.events.dispatch_BANG_ = function() {
  var dispatch_BANG_ = null;
  var dispatch_BANG___2 = function(type, evt_map) {
    return dispatch_BANG_.call(null, domina.events.root_element, type, evt_map);
  };
  var dispatch_BANG___3 = function(source, type, evt_map) {
    var evt = new goog.events.Event(cljs.core.name.call(null, type));
    var seq__11516_11522 = cljs.core.seq.call(null, evt_map);
    var chunk__11517_11523 = null;
    var count__11518_11524 = 0;
    var i__11519_11525 = 0;
    while (true) {
      if (i__11519_11525 < count__11518_11524) {
        var vec__11520_11526 = cljs.core._nth.call(null, chunk__11517_11523, i__11519_11525);
        var k_11527 = cljs.core.nth.call(null, vec__11520_11526, 0, null);
        var v_11528 = cljs.core.nth.call(null, vec__11520_11526, 1, null);
        evt[k_11527] = v_11528;
        var G__11529 = seq__11516_11522;
        var G__11530 = chunk__11517_11523;
        var G__11531 = count__11518_11524;
        var G__11532 = i__11519_11525 + 1;
        seq__11516_11522 = G__11529;
        chunk__11517_11523 = G__11530;
        count__11518_11524 = G__11531;
        i__11519_11525 = G__11532;
        continue;
      } else {
        var temp__4126__auto___11533 = cljs.core.seq.call(null, seq__11516_11522);
        if (temp__4126__auto___11533) {
          var seq__11516_11534__$1 = temp__4126__auto___11533;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__11516_11534__$1)) {
            var c__9570__auto___11535 = cljs.core.chunk_first.call(null, seq__11516_11534__$1);
            var G__11536 = cljs.core.chunk_rest.call(null, seq__11516_11534__$1);
            var G__11537 = c__9570__auto___11535;
            var G__11538 = cljs.core.count.call(null, c__9570__auto___11535);
            var G__11539 = 0;
            seq__11516_11522 = G__11536;
            chunk__11517_11523 = G__11537;
            count__11518_11524 = G__11538;
            i__11519_11525 = G__11539;
            continue;
          } else {
            var vec__11521_11540 = cljs.core.first.call(null, seq__11516_11534__$1);
            var k_11541 = cljs.core.nth.call(null, vec__11521_11540, 0, null);
            var v_11542 = cljs.core.nth.call(null, vec__11521_11540, 1, null);
            evt[k_11541] = v_11542;
            var G__11543 = cljs.core.next.call(null, seq__11516_11534__$1);
            var G__11544 = null;
            var G__11545 = 0;
            var G__11546 = 0;
            seq__11516_11522 = G__11543;
            chunk__11517_11523 = G__11544;
            count__11518_11524 = G__11545;
            i__11519_11525 = G__11546;
            continue;
          }
        } else {
        }
      }
      break;
    }
    if (cljs.core.truth_(domina.events.is_event_target_QMARK_.call(null, source))) {
      return domina.events.dispatch_event_target_BANG_.call(null, source, evt);
    } else {
      return domina.events.dispatch_browser_BANG_.call(null, source, evt);
    }
  };
  dispatch_BANG_ = function(source, type, evt_map) {
    switch(arguments.length) {
      case 2:
        return dispatch_BANG___2.call(this, source, type);
      case 3:
        return dispatch_BANG___3.call(this, source, type, evt_map);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dispatch_BANG_.cljs$core$IFn$_invoke$arity$2 = dispatch_BANG___2;
  dispatch_BANG_.cljs$core$IFn$_invoke$arity$3 = dispatch_BANG___3;
  return dispatch_BANG_;
}();
domina.events.unlisten_by_key_BANG_ = function unlisten_by_key_BANG_(key) {
  return goog.events.unlistenByKey(key);
};
domina.events.get_listeners = function get_listeners(content, type) {
  var type__$1 = cljs.core.name.call(null, type);
  return cljs.core.mapcat.call(null, function(type__$1) {
    return function(p1__11547_SHARP_) {
      return goog.events.getListeners(p1__11547_SHARP_, type__$1, false);
    };
  }(type__$1), domina.nodes.call(null, content));
};
goog.provide("hsnd.systems.melee_ai");
goog.require("cljs.core");
goog.require("hsnd.entity");
goog.require("hsnd.component");
hsnd.systems.melee_ai.init = function init() {
  return null;
};
hsnd.systems.melee_ai.draw = function draw() {
  return null;
};
hsnd.systems.melee_ai.keydown = function keydown() {
  return null;
};
hsnd.systems.melee_ai.keyup = function keyup() {
  return null;
};
hsnd.systems.melee_ai.sign = function sign(value) {
  if (cljs.core._EQ_.call(null, value, 0)) {
    return 0;
  } else {
    if (value < 0) {
      return-1;
    } else {
      return 1;
    }
  }
};
hsnd.systems.melee_ai.abs = function abs(value) {
  if (value < 0) {
    return-value;
  } else {
    return value;
  }
};
hsnd.systems.melee_ai.next_move = function next_move(its_position, target_position) {
  var direction = Math.random() < .5 ? new cljs.core.Keyword(null, "x", "x", 2099068185) : new cljs.core.Keyword(null, "y", "y", -1757859776);
  var other_direction = (new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), new cljs.core.Keyword(null, "y", "y", -1757859776), new cljs.core.Keyword(null, "y", "y", -1757859776), new cljs.core.Keyword(null, "x", "x", 2099068185)], null)).call(null, direction);
  var move = hsnd.systems.melee_ai.sign.call(null, target_position.call(null, direction) - its_position.call(null, direction));
  return new cljs.core.PersistentArrayMap.fromArray([direction, move, other_direction, 0], true, false);
};
hsnd.systems.melee_ai.chase = function chase(entity, player) {
  var its_position = hsnd.component.get_hash.call(null, hsnd.entity.get.call(null, entity, "position"));
  var player_position = hsnd.component.get_hash.call(null, hsnd.entity.get.call(null, player, "position"));
  var map__10619 = hsnd.systems.melee_ai.next_move.call(null, its_position, player_position);
  var map__10619__$1 = cljs.core.seq_QMARK_.call(null, map__10619) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10619) : map__10619;
  var dx = cljs.core.get.call(null, map__10619__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
  var dy = cljs.core.get.call(null, map__10619__$1, new cljs.core.Keyword(null, "y", "y", -1757859776));
  var map__10620 = its_position;
  var map__10620__$1 = cljs.core.seq_QMARK_.call(null, map__10620) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10620) : map__10620;
  var x = cljs.core.get.call(null, map__10620__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
  var y = cljs.core.get.call(null, map__10620__$1, new cljs.core.Keyword(null, "y", "y", -1757859776));
  var nx = x + dx;
  var ny = y + dy;
  var next_position_hash = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "x", "x", 2099068185), nx, new cljs.core.Keyword(null, "y", "y", -1757859776), ny], null);
  var next_position = hsnd.entity.get_with_defaults.call(null, entity, "next-position", next_position_hash);
  return hsnd.component.reset.call(null, next_position, next_position_hash);
};
hsnd.systems.melee_ai.in_sight_QMARK_ = function in_sight_QMARK_(entity, player) {
  var map__10623 = hsnd.component.get_hash.call(null, hsnd.entity.get.call(null, entity, "position"));
  var map__10623__$1 = cljs.core.seq_QMARK_.call(null, map__10623) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10623) : map__10623;
  var x = cljs.core.get.call(null, map__10623__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
  var y = cljs.core.get.call(null, map__10623__$1, new cljs.core.Keyword(null, "y", "y", -1757859776));
  var map__10624 = hsnd.component.get_hash.call(null, hsnd.entity.get.call(null, player, "position"));
  var map__10624__$1 = cljs.core.seq_QMARK_.call(null, map__10624) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10624) : map__10624;
  var tx = cljs.core.get.call(null, map__10624__$1, new cljs.core.Keyword(null, "x", "x", 2099068185));
  var ty = cljs.core.get.call(null, map__10624__$1, new cljs.core.Keyword(null, "y", "y", -1757859776));
  var dx = hsnd.systems.melee_ai.abs.call(null, x - tx);
  var dy = hsnd.systems.melee_ai.abs.call(null, y - ty);
  var sight_radius = hsnd.component.get.call(null, hsnd.entity.get.call(null, entity, "sight"), new cljs.core.Keyword(null, "radius", "radius", -2073122258));
  return dx <= sight_radius && dy <= sight_radius;
};
hsnd.systems.melee_ai.handle_player = function handle_player(entity, player) {
  var player_has_position_QMARK_ = !(hsnd.entity.get.call(null, player, "position") == null);
  if (player_has_position_QMARK_) {
    if (hsnd.systems.melee_ai.in_sight_QMARK_.call(null, entity, player)) {
      return hsnd.systems.melee_ai.chase.call(null, entity, player);
    } else {
      return null;
    }
  } else {
    return null;
  }
};
hsnd.systems.melee_ai.handle_entity = function handle_entity(entity) {
  var has_position_QMARK_ = !(hsnd.entity.get.call(null, entity, "position") == null);
  if (has_position_QMARK_) {
    return hsnd.entity.each.call(null, "player", cljs.core.partial.call(null, hsnd.systems.melee_ai.handle_player, entity));
  } else {
    return null;
  }
};
hsnd.systems.melee_ai.update = function update() {
  return hsnd.entity.each.call(null, "melee-ai", hsnd.systems.melee_ai.handle_entity);
};
hsnd.systems.melee_ai.system = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "init", "init", -1875481434), hsnd.systems.melee_ai.init, new cljs.core.Keyword(null, "draw", "draw", 1358331674), hsnd.systems.melee_ai.draw, new cljs.core.Keyword(null, "update", "update", 1045576396), hsnd.systems.melee_ai.update, new cljs.core.Keyword(null, "keydown", "keydown", -629268186), hsnd.systems.melee_ai.keydown, new cljs.core.Keyword(null, "keyup", "keyup", -794526927), hsnd.systems.melee_ai.keyup], 
null);
goog.provide("hsnd.systems.movement");
goog.require("cljs.core");
goog.require("hsnd.entity");
goog.require("hsnd.component");
hsnd.systems.movement.init = function init() {
  return null;
};
hsnd.systems.movement.draw = function draw() {
  return null;
};
hsnd.systems.movement.keydown = function keydown() {
  return null;
};
hsnd.systems.movement.keyup = function keyup() {
  return null;
};
hsnd.systems.movement.update_entity = function update_entity(entity) {
  var position = hsnd.entity.get.call(null, entity, "position");
  var next_position = hsnd.entity.get.call(null, entity, "next-position");
  return hsnd.component.reset.call(null, position, hsnd.component.get_hash.call(null, next_position));
};
hsnd.systems.movement.update = function update() {
  return hsnd.entity.each.call(null, "next-position", hsnd.systems.movement.update_entity);
};
hsnd.systems.movement.system = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "init", "init", -1875481434), hsnd.systems.movement.init, new cljs.core.Keyword(null, "draw", "draw", 1358331674), hsnd.systems.movement.draw, new cljs.core.Keyword(null, "update", "update", 1045576396), hsnd.systems.movement.update, new cljs.core.Keyword(null, "keydown", "keydown", -629268186), hsnd.systems.movement.keydown, new cljs.core.Keyword(null, "keyup", "keyup", -794526927), hsnd.systems.movement.keyup], 
null);
goog.provide("hsnd.core");
goog.require("cljs.core");
goog.require("hsnd.systems.blocked");
goog.require("hsnd.systems.draw");
goog.require("hsnd.systems.death");
goog.require("hsnd.systems.resurrection");
goog.require("hsnd.systems.log");
goog.require("hsnd.systems.stats");
goog.require("hsnd.systems.collision");
goog.require("hsnd.callback");
goog.require("hsnd.systems.battle");
goog.require("hsnd.systems.loot");
goog.require("hsnd.systems.current_position");
goog.require("hsnd.systems.control");
goog.require("hsnd.systems.movement");
goog.require("hsnd.systems.melee_ai");
goog.require("hsnd.systems.inventory");
goog.require("hsnd.initial");
goog.require("domina.events");
hsnd.core.fps = 60;
hsnd.core.interval = 1E3 / hsnd.core.fps;
hsnd.core.systems = new cljs.core.PersistentVector(null, 14, 5, cljs.core.PersistentVector.EMPTY_NODE, [hsnd.systems.draw.system, hsnd.systems.current_position.system, hsnd.systems.stats.system, hsnd.systems.control.system, hsnd.systems.inventory.system, hsnd.systems.collision.system, hsnd.systems.resurrection.system, hsnd.systems.movement.system, hsnd.systems.blocked.system, hsnd.systems.battle.system, hsnd.systems.death.system, hsnd.systems.loot.system, hsnd.systems.melee_ai.system, hsnd.systems.log.system], 
null);
cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__10590_SHARP_) {
  return p1__10590_SHARP_.call(null, new cljs.core.Keyword(null, "init", "init", -1875481434)).call(null);
}, hsnd.core.systems));
cljs.core.doall.call(null, cljs.core.map.call(null, function(system) {
  if (cljs.core.contains_QMARK_.call(null, system, new cljs.core.Keyword(null, "listeners", "listeners", 394544445))) {
    return cljs.core.doall.call(null, cljs.core.map.call(null, cljs.core.partial.call(null, cljs.core.apply, hsnd.callback.listen), system.call(null, new cljs.core.Keyword(null, "listeners", "listeners", 394544445))));
  } else {
    return null;
  }
}, hsnd.core.systems));
hsnd.core.run = function run(p__10591) {
  var map__10593 = p__10591;
  var map__10593__$1 = cljs.core.seq_QMARK_.call(null, map__10593) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10593) : map__10593;
  var update = cljs.core.get.call(null, map__10593__$1, new cljs.core.Keyword(null, "update", "update", 1045576396));
  var draw = cljs.core.get.call(null, map__10593__$1, new cljs.core.Keyword(null, "draw", "draw", 1358331674));
  update.call(null);
  return draw.call(null);
};
hsnd.core.keydown = function keydown(key_code, p__10594) {
  var map__10596 = p__10594;
  var map__10596__$1 = cljs.core.seq_QMARK_.call(null, map__10596) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10596) : map__10596;
  var keydown__$1 = cljs.core.get.call(null, map__10596__$1, new cljs.core.Keyword(null, "keydown", "keydown", -629268186));
  return keydown__$1.call(null, key_code);
};
hsnd.core.keyup = function keyup(key_code, p__10597) {
  var map__10599 = p__10597;
  var map__10599__$1 = cljs.core.seq_QMARK_.call(null, map__10599) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10599) : map__10599;
  var keyup__$1 = cljs.core.get.call(null, map__10599__$1, new cljs.core.Keyword(null, "keyup", "keyup", -794526927));
  return keyup__$1.call(null, key_code);
};
hsnd.core.run_all = function run_all(func) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, func, hsnd.core.systems));
};
hsnd.core.handle_frame = function handle_frame() {
  return hsnd.core.run_all.call(null, hsnd.core.run);
};
hsnd.core.handle_keydown = function handle_keydown(event) {
  var key_code = (new cljs.core.Keyword(null, "keyCode", "keyCode", 1964303637)).cljs$core$IFn$_invoke$arity$1(event);
  return hsnd.core.run_all.call(null, cljs.core.partial.call(null, hsnd.core.keydown, key_code));
};
hsnd.core.handle_keyup = function handle_keyup(event) {
  var key_code = (new cljs.core.Keyword(null, "keyCode", "keyCode", 1964303637)).cljs$core$IFn$_invoke$arity$1(event);
  return hsnd.core.run_all.call(null, cljs.core.partial.call(null, hsnd.core.keyup, key_code));
};
setInterval(hsnd.core.handle_frame, hsnd.core.interval);
domina.events.listen_BANG_.call(null, new cljs.core.Keyword(null, "keydown", "keydown", -629268186), hsnd.core.handle_keydown);
domina.events.listen_BANG_.call(null, new cljs.core.Keyword(null, "keyup", "keyup", -794526927), hsnd.core.handle_keyup);
